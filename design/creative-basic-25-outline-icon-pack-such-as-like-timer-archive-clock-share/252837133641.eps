%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Line_8-Template_051031548779.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Zee Abbasi
%%CreationDate: 12/9/2022
%%BoundingBox: 0 0 710 827
%%HiResBoundingBox: 0 0 709.3340 826.2188
%%CropBox: 0 0 709.3340 826.2188
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Creative Basic 25 OutLine icon pack  Such As like. timer. archive. clock. share</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Creative Basic 25 OutLine icon pack  Such As like. timer. archive. clock. share</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>add on</rdf:li>
               <rdf:li> extension</rdf:li>
               <rdf:li> plugin</rdf:li>
               <rdf:li> clock</rdf:li>
               <rdf:li> time</rdf:li>
               <rdf:li> activity</rdf:li>
               <rdf:li> notice</rdf:li>
               <rdf:li> notification</rdf:li>
               <rdf:li> archive</rdf:li>
               <rdf:li> box</rdf:li>
               <rdf:li> export</rdf:li>
               <rdf:li> link</rdf:li>
               <rdf:li> share</rdf:li>
               <rdf:li> chess</rdf:li>
               <rdf:li> clock</rdf:li>
               <rdf:li> timer</rdf:li>
               <rdf:li> heart</rdf:li>
               <rdf:li> like</rdf:li>
               <rdf:li> love</rdf:li>
               <rdf:li> delete</rdf:li>
               <rdf:li> recycle</rdf:li>
               <rdf:li> trash</rdf:li>
               <rdf:li> air</rdf:li>
               <rdf:li> airplay</rdf:li>
               <rdf:li> play</rdf:li>
               <rdf:li> earth</rdf:li>
               <rdf:li> planet</rdf:li>
               <rdf:li> world</rdf:li>
               <rdf:li> calculator</rdf:li>
               <rdf:li> math</rdf:li>
               <rdf:li> mode</rdf:li>
               <rdf:li> night</rdf:li>
               <rdf:li> sleep</rdf:li>
               <rdf:li> star</rdf:li>
               <rdf:li> basic</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-12-09T18:01:13+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-12-09T18:01:13+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-12-09T18:01:13+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>220</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBkAGQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABkAAAAAEA&#xA;AQGQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADcAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9O5Ni7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FUHqrX62qGwFZ/rFsHGx/cm4jE5+Lwh5/wAN8VYfql3+ZY0a7ezhk/Sn6QlRUSO0ZUs1Ev1drcPI&#xA;ocOwh9QyNyAZqAUw7I3R91c/mGk+pCC3gkU2Ekmmj4QovkihpG1WBZGkaThUjoeRA44rug7S8/Mg&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:840A998EC177ED11AC5B90F9F6F049F2</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:840A998EC177ED11AC5B90F9F6F049F2</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:2afc2d28-8ce4-ab43-aff9-db5c73d6bc30</stRef:instanceID>
            <stRef:documentID>xmp.did:2afc2d28-8ce4-ab43-aff9-db5c73d6bc30</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:304a2dca-86d8-ed4d-81af-2e8a745e790f</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:27:30+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a97e28b7-fa7f-d249-a1c3-fdad0c42ed8f</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:28:18+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2afc2d28-8ce4-ab43-aff9-db5c73d6bc30</stEvt:instanceID>
                  <stEvt:when>2022-09-06T05:38:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.5 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:840A998EC177ED11AC5B90F9F6F049F2</stEvt:instanceID>
                  <stEvt:when>2022-12-09T18:01:13+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>709.333984</stDim:w>
            <stDim:h>826.218750</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -826.219 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 826.219 li
709.334 826.219 li
709.334 0 li
cp
clp
709.334 826.219 mo
0 826.219 li
0 0 li
709.334 0 li
709.334 826.219 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.956863 .964706 .980392 rgb
f
559.334 391.295 mo
659.334 391.295 li
659.334 491.295 li
559.334 491.295 li
559.334 391.295 li
cp
1 1 1 rgb
f
432 391.295 mo
532 391.295 li
532 491.295 li
432 491.295 li
432 391.295 li
cp
f
304.667 391.295 mo
404.667 391.295 li
404.667 491.295 li
304.667 491.295 li
304.667 391.295 li
cp
f
177.334 391.295 mo
277.334 391.295 li
277.334 491.295 li
177.334 491.295 li
177.334 391.295 li
cp
f
50 391.295 mo
150 391.295 li
150 491.295 li
50 491.295 li
50 391.295 li
cp
f
559.334 520.113 mo
659.334 520.113 li
659.334 620.113 li
559.334 620.113 li
559.334 520.113 li
cp
f
432 520.113 mo
532 520.113 li
532 620.113 li
432 620.113 li
432 520.113 li
cp
f
304.667 520.113 mo
404.667 520.113 li
404.667 620.113 li
304.667 620.113 li
304.667 520.113 li
cp
f
177.334 520.113 mo
277.334 520.113 li
277.334 620.113 li
177.334 620.113 li
177.334 520.113 li
cp
f
50 520.113 mo
150 520.113 li
150 620.113 li
50 620.113 li
50 520.113 li
cp
f
559.334 262.477 mo
659.334 262.477 li
659.334 362.477 li
559.334 362.477 li
559.334 262.477 li
cp
f
432 262.477 mo
532 262.477 li
532 362.477 li
432 362.477 li
432 262.477 li
cp
f
304.667 262.477 mo
404.667 262.477 li
404.667 362.477 li
304.667 362.477 li
304.667 262.477 li
cp
f
177.334 262.477 mo
277.334 262.477 li
277.334 362.477 li
177.334 362.477 li
177.334 262.477 li
cp
f
50 262.477 mo
150 262.477 li
150 362.477 li
50 362.477 li
50 262.477 li
cp
f
559.334 133.658 mo
659.334 133.658 li
659.334 233.658 li
559.334 233.658 li
559.334 133.658 li
cp
f
432 133.658 mo
532 133.658 li
532 233.658 li
432 233.658 li
432 133.658 li
cp
f
304.667 133.658 mo
404.667 133.658 li
404.667 233.658 li
304.667 233.658 li
304.667 133.658 li
cp
f
177.334 133.658 mo
277.334 133.658 li
277.334 233.658 li
177.334 233.658 li
177.334 133.658 li
cp
f
50 133.658 mo
150 133.658 li
150 233.658 li
50 233.658 li
50 133.658 li
cp
f
559.334 648.932 mo
659.334 648.932 li
659.334 748.932 li
559.334 748.932 li
559.334 648.932 li
cp
f
432 648.932 mo
532 648.932 li
532 748.932 li
432 748.932 li
432 648.932 li
cp
f
304.667 648.932 mo
404.667 648.932 li
404.667 748.932 li
304.667 748.932 li
304.667 648.932 li
cp
f
177.334 648.932 mo
277.334 648.932 li
277.334 748.932 li
177.334 748.932 li
177.334 648.932 li
cp
f
50 648.932 mo
150 648.932 li
150 748.932 li
50 748.932 li
50 648.932 li
cp
f
559.334 776.219 mo
659.334 776.219 li
659.334 770.495 li
559.334 770.495 li
559.334 776.219 li
cp
.968627 .733333 .25098 rgb
f
432 776.219 mo
532 776.219 li
532 770.495 li
432 770.495 li
432 776.219 li
cp
.980392 .623529 .235294 rgb
f
304.667 776.219 mo
404.667 776.219 li
404.667 770.495 li
304.667 770.495 li
304.667 776.219 li
cp
.796078 .278431 .611765 rgb
f
177.334 776.219 mo
277.334 776.219 li
277.334 770.495 li
177.334 770.495 li
177.334 776.219 li
cp
.494118 .407843 .776471 rgb
f
50 776.219 mo
150 776.219 li
150 770.495 li
50 770.495 li
50 776.219 li
cp
.168627 .74902 .909804 rgb
f
277.67 52.0879 mo
302.766 52.0879 li
302.766 55.2119 li
277.67 55.2119 li
277.67 52.0879 li
cp
f
309.896 52.0879 mo
334.989 52.0879 li
334.989 55.2119 li
309.896 55.2119 li
309.896 52.0879 li
cp
.494118 .407843 .776471 rgb
f
342.119 52.0879 mo
367.213 52.0879 li
367.213 55.2119 li
342.119 55.2119 li
342.119 52.0879 li
cp
.796078 .278431 .611765 rgb
f
374.344 52.0879 mo
399.438 52.0879 li
399.438 55.2119 li
374.344 55.2119 li
374.344 52.0879 li
cp
.980392 .623529 .235294 rgb
f
406.568 52.0879 mo
431.662 52.0879 li
431.662 55.2119 li
406.568 55.2119 li
406.568 52.0879 li
cp
.968627 .733333 .25098 rgb
f
280.459 33.8052 mo
280.459 45.334 li
278.971 45.334 li
278.971 33.8052 li
280.459 33.8052 li
cp
.164706 .223529 .258824 rgb
f
295.395 44.9575 mo
294.847 45.2314 293.752 45.5049 292.35 45.5049 cv
289.1 45.5049 286.653 43.4526 286.653 39.6724 cv
286.653 36.063 289.1 33.6172 292.675 33.6172 cv
294.111 33.6172 295.018 33.9248 295.411 34.1304 cv
295.052 35.3447 li
294.487 35.0708 293.684 34.8657 292.726 34.8657 cv
290.023 34.8657 288.228 36.5933 288.228 39.6211 cv
288.228 42.4434 289.853 44.2563 292.657 44.2563 cv
293.564 44.2563 294.487 44.0684 295.087 43.7773 cv
295.395 44.9575 li
cp
f
302.087 39.6382 mo
302.087 42.1011 303.421 44.3076 305.765 44.3076 cv
308.125 44.3076 309.459 42.1353 309.459 39.5181 cv
309.459 37.2261 308.262 34.8315 305.781 34.8315 cv
303.318 34.8315 302.087 37.1064 302.087 39.6382 cv
cp
311.032 39.4497 mo
311.032 43.418 308.621 45.522 305.679 45.522 cv
302.634 45.522 300.496 43.1616 300.496 39.6724 cv
300.496 36.0117 302.771 33.6172 305.85 33.6172 cv
308.997 33.6172 311.032 36.0288 311.032 39.4497 cv
cp
f
317.247 45.334 mo
317.247 33.8052 li
318.872 33.8052 li
322.566 39.6382 li
323.422 40.9893 324.089 42.2036 324.637 43.3838 cv
324.671 43.3667 li
324.534 41.8276 324.5 40.4248 324.5 38.6289 cv
324.5 33.8052 li
325.902 33.8052 li
325.902 45.334 li
324.396 45.334 li
320.736 39.4839 li
319.933 38.2012 319.163 36.8843 318.581 35.6353 cv
318.53 35.6523 li
318.615 37.1064 318.649 38.4922 318.649 40.4077 cv
318.649 45.334 li
317.247 45.334 li
cp
f
333.689 39.6382 mo
333.689 42.1011 335.023 44.3076 337.367 44.3076 cv
339.728 44.3076 341.063 42.1353 341.063 39.5181 cv
341.063 37.2261 339.864 34.8315 337.385 34.8315 cv
334.921 34.8315 333.689 37.1064 333.689 39.6382 cv
cp
342.636 39.4497 mo
342.636 43.418 340.224 45.522 337.282 45.522 cv
334.237 45.522 332.099 43.1616 332.099 39.6724 cv
332.099 36.0117 334.374 33.6172 337.453 33.6172 cv
340.601 33.6172 342.636 36.0288 342.636 39.4497 cv
cp
f
357.625 44.8208 mo
356.958 45.0605 355.641 45.4536 354.084 45.4536 cv
352.34 45.4536 350.902 45.0088 349.773 43.9312 cv
348.781 42.9736 348.166 41.4341 348.166 39.6382 cv
348.183 36.1997 350.543 33.6855 354.409 33.6855 cv
355.743 33.6855 356.787 33.9761 357.283 34.2158 cv
356.924 35.4302 li
356.308 35.1563 355.538 34.9341 354.375 34.9341 cv
351.569 34.9341 349.739 36.6787 349.739 39.5693 cv
349.739 42.4946 351.501 44.2222 354.187 44.2222 cv
355.162 44.2222 355.829 44.0854 356.171 43.9141 cv
356.171 40.4761 li
353.827 40.4761 li
353.827 39.2788 li
357.625 39.2788 li
357.625 44.8208 li
cp
f
365.669 39.2104 mo
367.191 39.2104 li
368.782 39.2104 369.792 38.3379 369.792 37.021 cv
369.792 35.5327 368.714 34.8828 367.141 34.8657 cv
366.422 34.8657 365.909 34.9341 365.669 35.0024 cv
365.669 39.2104 li
cp
364.181 33.959 mo
364.934 33.8052 366.012 33.7197 367.038 33.7197 cv
368.629 33.7197 369.654 34.0103 370.373 34.6602 cv
370.955 35.1733 371.279 35.9604 371.279 36.8496 cv
371.279 38.3721 370.322 39.3813 369.107 39.792 cv
369.107 39.8433 li
369.997 40.1514 370.527 40.9722 370.801 42.1694 cv
371.177 43.7773 371.451 44.8892 371.69 45.334 cv
370.15 45.334 li
369.963 45.0088 369.706 44.0171 369.381 42.5801 cv
369.039 40.9893 368.423 40.3906 367.072 40.3394 cv
365.669 40.3394 li
365.669 45.334 li
364.181 45.334 li
364.181 33.959 li
cp
f
383.395 40.5444 mo
382.266 37.2261 li
382.009 36.4736 381.838 35.7896 381.667 35.1221 cv
381.632 35.1221 li
381.461 35.8066 381.273 36.5078 381.051 37.209 cv
379.922 40.5444 li
383.395 40.5444 li
cp
379.614 41.7075 mo
378.417 45.334 li
376.877 45.334 li
380.794 33.8052 li
382.59 33.8052 li
386.524 45.334 li
384.934 45.334 li
383.702 41.7075 li
379.614 41.7075 li
cp
f
393.986 39.501 mo
394.312 39.5869 394.722 39.6211 395.218 39.6211 cv
397.015 39.6211 398.109 38.7485 398.109 37.1577 cv
398.109 35.6353 397.031 34.8999 395.39 34.8999 cv
394.739 34.8999 394.243 34.9512 393.986 35.0195 cv
393.986 39.501 li
cp
392.498 33.9419 mo
393.217 33.8223 394.157 33.7197 395.355 33.7197 cv
396.826 33.7197 397.903 34.0615 398.588 34.6777 cv
399.221 35.2251 399.597 36.063 399.597 37.0894 cv
399.597 38.1328 399.289 38.9536 398.708 39.5522 cv
397.921 40.3906 396.638 40.8184 395.184 40.8184 cv
394.739 40.8184 394.329 40.8013 393.986 40.7158 cv
393.986 45.334 li
392.498 45.334 li
392.498 33.9419 li
cp
f
407.367 33.8052 mo
407.367 38.6289 li
412.943 38.6289 li
412.943 33.8052 li
414.449 33.8052 li
414.449 45.334 li
412.943 45.334 li
412.943 39.9287 li
407.367 39.9287 li
407.367 45.334 li
405.879 45.334 li
405.879 33.8052 li
407.367 33.8052 li
cp
f
423.759 45.334 mo
423.759 40.4419 li
420.115 33.8052 li
421.81 33.8052 li
423.434 36.9868 li
423.879 37.8589 424.221 38.5605 424.58 39.3643 cv
424.614 39.3643 li
424.939 38.6118 425.333 37.8589 425.777 36.9868 cv
427.437 33.8052 li
429.13 33.8052 li
425.265 40.4248 li
425.265 45.334 li
423.759 45.334 li
cp
f
254.126 78.3281 mo
254.126 83.7466 li
257.099 83.7466 li
258.269 83.7466 259.153 83.5225 259.75 83.0737 cv
260.347 82.625 260.645 81.917 260.645 80.9497 cv
260.645 80.0601 260.341 79.4009 259.732 78.9717 cv
259.124 78.543 258.199 78.3281 256.958 78.3281 cv
254.126 78.3281 li
cp
254.126 76.0576 mo
256.818 76.0576 li
257.988 76.0576 258.843 75.8726 259.381 75.502 cv
259.919 75.1313 260.188 74.501 260.188 73.6118 cv
260.188 72.8081 259.898 72.2271 259.316 71.8677 cv
258.735 71.5093 257.813 71.3296 256.549 71.3296 cv
254.126 71.3296 li
254.126 76.0576 li
cp
251.329 68.9888 mo
256.408 68.9888 li
258.765 68.9888 260.467 69.332 261.517 70.0186 cv
262.566 70.7056 263.091 71.79 263.091 73.2725 cv
263.091 74.271 262.833 75.1021 262.318 75.7651 cv
261.804 76.4282 261.062 76.8457 260.095 77.0171 cv
260.095 77.1343 li
261.296 77.3608 262.18 77.8071 262.746 78.4746 cv
263.311 79.1416 263.594 80.0444 263.594 81.1836 cv
263.594 82.7207 263.058 83.9243 261.985 84.7944 cv
260.912 85.6641 259.42 86.0991 257.508 86.0991 cv
251.329 86.0991 li
251.329 68.9888 li
cp
f
269.903 84.2266 mo
270.902 84.2266 271.704 83.9478 272.308 83.3896 cv
272.913 82.832 273.215 82.0498 273.215 81.0435 cv
273.215 79.9199 li
271.553 79.9897 li
270.258 80.0366 269.316 80.2534 268.727 80.6396 cv
268.138 81.0259 267.843 81.6167 267.843 82.4126 cv
267.843 82.9902 268.015 83.4365 268.358 83.7524 cv
268.702 84.0684 269.217 84.2266 269.903 84.2266 cv
cp
274 86.0991 mo
273.449 84.2969 li
273.356 84.2969 li
272.731 85.085 272.104 85.6211 271.472 85.9063 cv
270.839 86.1909 270.028 86.333 269.037 86.333 cv
267.766 86.333 266.772 85.9897 266.059 85.3032 cv
265.345 84.6167 264.988 83.6455 264.988 82.3892 cv
264.988 81.0552 265.483 80.0483 266.474 79.3696 cv
267.465 78.6909 268.975 78.3203 271.003 78.2578 cv
273.239 78.1875 li
273.239 77.4971 li
273.239 76.6704 273.045 76.0518 272.659 75.6421 cv
272.273 75.2324 271.674 75.0278 270.863 75.0278 cv
270.2 75.0278 269.564 75.1255 268.955 75.3203 cv
268.347 75.5156 267.762 75.7456 267.2 76.0107 cv
266.311 74.0444 li
267.013 73.6782 267.781 73.3989 268.616 73.208 cv
269.451 73.0166 270.239 72.9214 270.98 72.9214 cv
272.626 72.9214 273.869 73.2803 274.708 73.998 cv
275.546 74.7158 275.966 75.8433 275.966 77.3799 cv
275.966 86.0991 li
274 86.0991 li
cp
f
287.541 82.4126 mo
287.541 83.6768 287.081 84.646 286.16 85.3208 cv
285.239 85.9956 283.921 86.333 282.205 86.333 cv
280.48 86.333 279.095 86.0718 278.05 85.5488 cv
278.05 83.1733 li
279.571 83.8755 280.987 84.2266 282.298 84.2266 cv
283.991 84.2266 284.838 83.7158 284.838 82.6934 cv
284.838 82.3657 284.744 82.0928 284.557 81.874 cv
284.37 81.6558 284.061 81.4297 283.632 81.1953 cv
283.203 80.9614 282.606 80.6963 281.842 80.3994 cv
280.351 79.8223 279.343 79.2451 278.816 78.6675 cv
278.29 78.0903 278.026 77.3413 278.026 76.4204 cv
278.026 75.3125 278.473 74.4526 279.366 73.8398 cv
280.26 73.2275 281.475 72.9214 283.012 72.9214 cv
284.533 72.9214 285.973 73.2295 287.331 73.8457 cv
286.441 75.917 li
285.044 75.3398 283.87 75.0513 282.918 75.0513 cv
281.467 75.0513 280.742 75.4648 280.742 76.2915 cv
280.742 76.6973 280.931 77.0405 281.309 77.3218 cv
281.688 77.6025 282.513 77.9888 283.784 78.4805 cv
284.853 78.894 285.629 79.2725 286.113 79.6152 cv
286.597 79.959 286.956 80.355 287.19 80.8032 cv
287.424 81.252 287.541 81.7886 287.541 82.4126 cv
cp
f
292.305 86.0991 mo
289.555 86.0991 li
289.555 73.1553 li
292.305 73.1553 li
292.305 86.0991 li
cp
289.391 69.7261 mo
289.391 69.2344 289.526 68.8564 289.795 68.5908 cv
290.064 68.3257 290.448 68.1929 290.948 68.1929 cv
291.432 68.1929 291.808 68.3257 292.077 68.5908 cv
292.346 68.8564 292.481 69.2344 292.481 69.7261 cv
292.481 70.1943 292.346 70.563 292.077 70.832 cv
291.808 71.1011 291.432 71.2358 290.948 71.2358 cv
290.448 71.2358 290.064 71.1011 289.795 70.832 cv
289.526 70.563 289.391 70.1943 289.391 69.7261 cv
cp
f
300.499 86.333 mo
298.54 86.333 297.052 85.7617 296.034 84.6187 cv
295.015 83.4756 294.506 81.8354 294.506 79.6973 cv
294.506 77.5205 295.039 75.8472 296.104 74.6768 cv
297.169 73.5063 298.708 72.9214 300.721 72.9214 cv
302.086 72.9214 303.315 73.1748 304.407 73.6816 cv
303.576 75.894 li
302.414 75.4414 301.454 75.2148 300.697 75.2148 cv
298.458 75.2148 297.338 76.7012 297.338 79.6738 cv
297.338 81.125 297.617 82.2158 298.175 82.9453 cv
298.733 83.6748 299.55 84.0396 300.627 84.0396 cv
301.852 84.0396 303.011 83.7349 304.103 83.1265 cv
304.103 85.5259 li
303.611 85.8145 303.086 86.021 302.529 86.146 cv
301.971 86.2705 301.294 86.333 300.499 86.333 cv
cp
f
325.16 68.9888 mo
325.16 80.0601 li
325.16 81.3242 324.888 82.4302 324.346 83.3779 cv
323.804 84.3262 323.02 85.0557 321.994 85.5664 cv
320.968 86.0776 319.741 86.333 318.313 86.333 cv
316.191 86.333 314.541 85.7715 313.363 84.6479 cv
312.185 83.5244 311.595 81.9795 311.595 80.0132 cv
311.595 68.9888 li
314.404 68.9888 li
314.404 79.8145 li
314.404 81.2266 314.732 82.2681 315.387 82.9395 cv
316.042 83.6104 317.049 83.9458 318.407 83.9458 cv
321.044 83.9458 322.362 82.561 322.362 79.791 cv
322.362 68.9888 li
325.16 68.9888 li
cp
f
336.98 82.4126 mo
336.98 83.6768 336.52 84.646 335.6 85.3208 cv
334.679 85.9956 333.36 86.333 331.644 86.333 cv
329.919 86.333 328.535 86.0718 327.489 85.5488 cv
327.489 83.1733 li
329.011 83.8755 330.427 84.2266 331.737 84.2266 cv
333.431 84.2266 334.277 83.7158 334.277 82.6934 cv
334.277 82.3657 334.184 82.0928 333.996 81.874 cv
333.809 81.6558 333.5 81.4297 333.072 81.1953 cv
332.643 80.9614 332.045 80.6963 331.281 80.3994 cv
329.791 79.8223 328.782 79.2451 328.256 78.6675 cv
327.729 78.0903 327.466 77.3413 327.466 76.4204 cv
327.466 75.3125 327.912 74.4526 328.806 73.8398 cv
329.699 73.2275 330.914 72.9214 332.451 72.9214 cv
333.973 72.9214 335.412 73.2295 336.77 73.8457 cv
335.88 75.917 li
334.484 75.3398 333.31 75.0513 332.358 75.0513 cv
330.907 75.0513 330.181 75.4648 330.181 76.2915 cv
330.181 76.6973 330.37 77.0405 330.749 77.3218 cv
331.127 77.6025 331.952 77.9888 333.224 78.4805 cv
334.292 78.894 335.069 79.2725 335.553 79.6152 cv
336.037 79.959 336.396 80.355 336.629 80.8032 cv
336.864 81.252 336.98 81.7886 336.98 82.4126 cv
cp
f
344.144 75.0044 mo
343.27 75.0044 342.57 75.2813 342.043 75.8354 cv
341.517 76.3892 341.203 77.1968 341.101 78.2578 cv
346.976 78.2578 li
346.96 77.189 346.703 76.3794 346.204 75.8296 cv
345.704 75.2793 345.018 75.0044 344.144 75.0044 cv
cp
344.647 86.333 mo
342.634 86.333 341.06 85.7461 339.925 84.5718 cv
338.79 83.3975 338.222 81.7808 338.222 79.7207 cv
338.222 77.6064 338.749 75.9448 339.802 74.7354 cv
340.855 73.5259 342.303 72.9214 344.144 72.9214 cv
345.853 72.9214 347.202 73.4399 348.193 74.4775 cv
349.184 75.5156 349.68 76.9434 349.68 78.7612 cv
349.68 80.2476 li
341.054 80.2476 li
341.093 81.5039 341.433 82.4692 342.072 83.144 cv
342.712 83.8188 343.613 84.1563 344.776 84.1563 cv
345.541 84.1563 346.252 84.0845 346.912 83.9399 cv
347.571 83.7954 348.279 83.5557 349.036 83.2202 cv
349.036 85.4556 li
348.365 85.7754 347.686 86.0015 347 86.1343 cv
346.313 86.2666 345.529 86.333 344.647 86.333 cv
cp
f
358.411 72.9214 mo
358.965 72.9214 359.421 72.9604 359.78 73.0381 cv
359.511 75.6011 li
359.121 75.5078 358.716 75.4609 358.294 75.4609 cv
357.194 75.4609 356.303 75.8198 355.62 76.5376 cv
354.937 77.2554 354.596 78.1875 354.596 79.3345 cv
354.596 86.0991 li
351.846 86.0991 li
351.846 73.1553 li
353.999 73.1553 li
354.362 75.4375 li
354.502 75.4375 li
354.931 74.665 355.491 74.0527 356.182 73.6001 cv
356.872 73.1475 357.615 72.9214 358.411 72.9214 cv
cp
f
366.781 86.0991 mo
366.781 68.9888 li
369.578 68.9888 li
369.578 86.0991 li
366.781 86.0991 li
cp
f
384.231 86.0991 mo
381.47 86.0991 li
381.47 78.1406 li
381.47 77.1421 381.269 76.397 380.867 75.9053 cv
380.466 75.4141 379.827 75.168 378.954 75.168 cv
377.791 75.168 376.94 75.5117 376.402 76.1982 cv
375.864 76.8848 375.595 78.0356 375.595 79.6504 cv
375.595 86.0991 li
372.845 86.0991 li
372.845 73.1553 li
374.998 73.1553 li
375.384 74.8521 li
375.524 74.8521 li
375.915 74.2358 376.469 73.7598 377.187 73.4243 cv
377.904 73.0889 378.7 72.9214 379.574 72.9214 cv
382.679 72.9214 384.231 74.501 384.231 77.6611 cv
384.231 86.0991 li
cp
f
391.922 84.1094 mo
392.593 84.1094 393.264 84.0044 393.935 83.7935 cv
393.935 85.8652 li
393.63 85.998 393.238 86.1089 392.759 86.1987 cv
392.278 86.2881 391.781 86.333 391.267 86.333 cv
388.66 86.333 387.357 84.96 387.357 82.2134 cv
387.357 75.2383 li
385.591 75.2383 li
385.591 74.0215 li
387.486 73.0146 li
388.423 70.2764 li
390.12 70.2764 li
390.12 73.1553 li
393.806 73.1553 li
393.806 75.2383 li
390.12 75.2383 li
390.12 82.167 li
390.12 82.8301 390.285 83.3193 390.616 83.6357 cv
390.948 83.9517 391.384 84.1094 391.922 84.1094 cv
cp
f
400.712 75.0044 mo
399.838 75.0044 399.138 75.2813 398.61 75.8354 cv
398.085 76.3892 397.771 77.1968 397.669 78.2578 cv
403.544 78.2578 li
403.528 77.189 403.271 76.3794 402.771 75.8296 cv
402.272 75.2793 401.585 75.0044 400.712 75.0044 cv
cp
401.215 86.333 mo
399.202 86.333 397.628 85.7461 396.493 84.5718 cv
395.357 83.3975 394.79 81.7808 394.79 79.7207 cv
394.79 77.6064 395.316 75.9448 396.37 74.7354 cv
397.423 73.5259 398.87 72.9214 400.712 72.9214 cv
402.421 72.9214 403.771 73.4399 404.761 74.4775 cv
405.752 75.5156 406.247 76.9434 406.247 78.7612 cv
406.247 80.2476 li
397.622 80.2476 li
397.661 81.5039 398.001 82.4692 398.64 83.144 cv
399.28 83.8188 400.181 84.1563 401.344 84.1563 cv
402.108 84.1563 402.82 84.0845 403.479 83.9399 cv
404.139 83.7954 404.847 83.5557 405.604 83.2202 cv
405.604 85.4556 li
404.933 85.7754 404.254 86.0015 403.567 86.1343 cv
402.881 86.2666 402.097 86.333 401.215 86.333 cv
cp
f
414.979 72.9214 mo
415.532 72.9214 415.989 72.9604 416.349 73.0381 cv
416.079 75.6011 li
415.688 75.5078 415.283 75.4609 414.862 75.4609 cv
413.762 75.4609 412.87 75.8198 412.188 76.5376 cv
411.505 77.2554 411.163 78.1875 411.163 79.3345 cv
411.163 86.0991 li
408.413 86.0991 li
408.413 73.1553 li
410.567 73.1553 li
410.93 75.4375 li
411.07 75.4375 li
411.499 74.665 412.06 74.0527 412.749 73.6001 cv
413.44 73.1475 414.183 72.9214 414.979 72.9214 cv
cp
f
424.284 75.2383 mo
421.124 75.2383 li
421.124 86.0991 li
418.362 86.0991 li
418.362 75.2383 li
416.232 75.2383 li
416.232 73.9512 li
418.362 73.1084 li
418.362 72.2656 li
418.362 70.7368 418.722 69.603 419.438 68.8657 cv
420.157 68.1284 421.253 67.7598 422.728 67.7598 cv
423.695 67.7598 424.647 67.9199 425.583 68.2397 cv
424.858 70.3232 li
424.179 70.1045 423.531 69.9951 422.915 69.9951 cv
422.29 69.9951 421.837 70.1885 421.552 70.5747 cv
421.267 70.9609 421.124 71.54 421.124 72.3125 cv
421.124 73.1553 li
424.284 73.1553 li
424.284 75.2383 li
cp
f
429.528 84.2266 mo
430.526 84.2266 431.329 83.9478 431.933 83.3896 cv
432.538 82.832 432.841 82.0498 432.841 81.0435 cv
432.841 79.9199 li
431.179 79.9897 li
429.884 80.0366 428.94 80.2534 428.353 80.6396 cv
427.763 81.0259 427.468 81.6167 427.468 82.4126 cv
427.468 82.9902 427.64 83.4365 427.983 83.7524 cv
428.327 84.0684 428.842 84.2266 429.528 84.2266 cv
cp
433.624 86.0991 mo
433.074 84.2969 li
432.981 84.2969 li
432.356 85.085 431.729 85.6211 431.097 85.9063 cv
430.464 86.1909 429.653 86.333 428.662 86.333 cv
427.391 86.333 426.397 85.9897 425.684 85.3032 cv
424.97 84.6167 424.612 83.6455 424.612 82.3892 cv
424.612 81.0552 425.108 80.0483 426.099 79.3696 cv
427.09 78.6909 428.6 78.3203 430.628 78.2578 cv
432.864 78.1875 li
432.864 77.4971 li
432.864 76.6704 432.671 76.0518 432.284 75.6421 cv
431.898 75.2324 431.3 75.0278 430.487 75.0278 cv
429.825 75.0278 429.188 75.1255 428.58 75.3203 cv
427.972 75.5156 427.387 75.7456 426.825 76.0107 cv
425.936 74.0444 li
426.638 73.6782 427.405 73.3989 428.241 73.208 cv
429.075 73.0166 429.864 72.9214 430.604 72.9214 cv
432.251 72.9214 433.493 73.2803 434.333 73.998 cv
435.171 74.7158 435.591 75.8433 435.591 77.3799 cv
435.591 86.0991 li
433.624 86.0991 li
cp
f
443.69 86.333 mo
441.731 86.333 440.243 85.7617 439.226 84.6187 cv
438.207 83.4756 437.698 81.8354 437.698 79.6973 cv
437.698 77.5205 438.23 75.8472 439.296 74.6768 cv
440.36 73.5063 441.899 72.9214 443.913 72.9214 cv
445.278 72.9214 446.507 73.1748 447.599 73.6816 cv
446.769 75.894 li
445.605 75.4414 444.646 75.2148 443.89 75.2148 cv
441.649 75.2148 440.53 76.7012 440.53 79.6738 cv
440.53 81.125 440.81 82.2158 441.367 82.9453 cv
441.925 83.6748 442.742 84.0396 443.819 84.0396 cv
445.044 84.0396 446.202 83.7349 447.295 83.1265 cv
447.295 85.5259 li
446.804 85.8145 446.278 86.021 445.721 86.146 cv
445.163 86.2705 444.485 86.333 443.69 86.333 cv
cp
f
454.528 75.0044 mo
453.655 75.0044 452.954 75.2813 452.428 75.8354 cv
451.901 76.3892 451.587 77.1968 451.485 78.2578 cv
457.36 78.2578 li
457.345 77.189 457.088 76.3794 456.589 75.8296 cv
456.089 75.2793 455.402 75.0044 454.528 75.0044 cv
cp
455.032 86.333 mo
453.019 86.333 451.444 85.7461 450.31 84.5718 cv
449.175 83.3975 448.606 81.7808 448.606 79.7207 cv
448.606 77.6064 449.134 75.9448 450.187 74.7354 cv
451.24 73.5259 452.688 72.9214 454.528 72.9214 cv
456.237 72.9214 457.587 73.4399 458.578 74.4775 cv
459.569 75.5156 460.064 76.9434 460.064 78.7612 cv
460.064 80.2476 li
451.438 80.2476 li
451.478 81.5039 451.817 82.4692 452.457 83.144 cv
453.097 83.8188 453.998 84.1563 455.161 84.1563 cv
455.925 84.1563 456.638 84.0845 457.296 83.9399 cv
457.956 83.7954 458.664 83.5557 459.421 83.2202 cv
459.421 85.4556 li
458.749 85.7754 458.071 86.0015 457.384 86.1343 cv
456.698 86.2666 455.913 86.333 455.032 86.333 cv
cp
f
556.341 640 mo
657.5 640 li
657.5 740 li
556.341 740 li
556.341 640 li
cp
1 1 1 rgb
f
612.889 716.2 mo
615.519 713.3 617.34 708.9 618.352 705.1 cv
621.487 705.5 624.927 706.1 627.962 706.9 cv
624.017 711.6 618.655 714.9 612.889 716.2 cv
cp
584.969 707 mo
588.105 706.2 591.241 705.6 594.579 705.2 cv
595.691 709 597.411 713.3 600.042 716.3 cv
594.175 714.9 588.813 711.6 584.969 707 cv
cp
600.042 662.8 mo
597.411 665.7 595.591 670 594.579 673.9 cv
591.241 673.5 588.206 672.9 584.969 672.1 cv
588.813 667.4 594.175 664.1 600.042 662.8 cv
cp
627.86 672 mo
625.433 672.7 622.195 673.3 618.25 673.8 cv
617.138 670 615.418 665.7 612.788 662.7 cv
618.655 664.1 624.017 667.4 627.86 672 cv
cp
620.273 688.3 mo
620.172 684.1 619.768 680 618.857 676.3 cv
622.397 675.9 626.039 675.2 629.479 674.2 cv
632.312 678.4 633.93 683.2 634.132 688.3 cv
620.273 688.3 li
cp
607.729 716.8 mo
607.729 704.5 li
610.563 704.5 613.192 704.7 615.822 704.9 cv
615.316 706.5 614.811 708 614.204 709.3 cv
612.383 713.5 610.057 716.1 607.729 716.8 cv
cp
605.201 704.5 mo
605.201 716.8 li
602.874 716.1 600.548 713.5 598.727 709.3 cv
598.12 707.9 597.614 706.5 597.108 704.9 cv
599.637 704.7 602.268 704.5 605.201 704.5 cv
cp
605.201 662.2 mo
605.201 674.5 li
602.368 674.5 599.637 674.3 597.108 674.1 cv
597.614 672.5 598.12 671 598.727 669.7 cv
600.446 665.5 602.773 662.9 605.201 662.2 cv
cp
607.729 674.5 mo
607.729 662.2 li
610.057 662.9 612.383 665.5 614.204 669.7 cv
614.811 671.1 615.316 672.5 615.822 674.1 cv
613.294 674.3 610.563 674.5 607.729 674.5 cv
cp
607.729 688.3 mo
607.729 677 li
610.765 677 613.698 676.8 616.43 676.5 cv
617.238 680.1 617.744 684.1 617.846 688.2 cv
607.729 688.3 li
607.729 688.3 li
cp
605.201 677 mo
605.201 688.3 li
595.085 688.3 li
595.187 684.2 595.591 680.2 596.501 676.6 cv
599.334 676.8 602.268 677 605.201 677 cv
cp
596.4 702.5 mo
595.591 698.9 595.085 694.9 594.983 690.8 cv
605.1 690.8 li
605.1 702 li
602.064 702 599.131 702.2 596.4 702.5 cv
cp
607.729 702 mo
607.729 690.8 li
617.846 690.8 li
617.744 694.9 617.34 698.9 616.43 702.5 cv
613.698 702.2 610.765 702 607.729 702 cv
cp
583.351 674.2 mo
586.688 675.2 590.432 675.9 593.973 676.3 cv
593.163 680 592.657 684.1 592.556 688.3 cv
578.596 688.3 li
578.899 683.2 580.417 678.4 583.351 674.2 cv
cp
583.351 704.8 mo
580.518 700.6 578.899 695.8 578.697 690.7 cv
592.556 690.7 li
592.657 694.9 593.062 699 593.973 702.7 cv
590.432 703.2 586.688 703.8 583.351 704.8 cv
cp
629.479 704.8 mo
626.141 703.8 622.397 703.1 618.857 702.7 cv
619.667 699 620.172 694.9 620.273 690.7 cv
634.233 690.7 li
633.93 695.8 632.412 700.6 629.479 704.8 cv
cp
620.476 662.9 mo
607.224 656.1 590.735 659.8 581.732 672 cv
574.145 682.4 574.044 696.5 581.732 707 cv
581.732 707 li
584.463 710.8 588.105 713.9 592.354 716.1 cv
605.605 722.9 622.095 719.2 631.098 707 cv
641.82 692.3 636.965 671.4 620.476 662.9 cv
cp
0 0 0 rgb
f
428.881 640 mo
530.04 640 li
530.04 740 li
428.881 740 li
428.881 640 li
cp
1 1 1 rgb
f
506.773 714.8 mo
506.773 716 505.762 717 504.548 717 cv
453.361 717 li
452.147 717 451.136 716 451.136 714.8 cv
451.136 664.2 li
451.136 663 452.147 662 453.361 662 cv
504.548 662 li
505.762 662 506.773 663 506.773 664.2 cv
506.773 714.8 li
cp
504.548 659.5 mo
453.361 659.5 li
450.731 659.5 448.606 661.6 448.606 664.2 cv
448.606 714.8 li
448.606 717.4 450.731 719.5 453.361 719.5 cv
504.548 719.5 li
507.178 719.5 509.302 717.4 509.302 714.8 cv
509.302 664.2 li
509.302 661.6 507.178 659.5 504.548 659.5 cv
cp
0 0 0 rgb
f
500.501 708.6 mo
500.501 709.8 499.489 710.8 498.275 710.8 cv
459.633 710.8 li
458.419 710.8 457.407 709.8 457.407 708.6 cv
457.407 670.4 li
457.407 669.2 458.419 668.2 459.633 668.2 cv
498.175 668.2 li
499.389 668.2 500.4 669.2 500.4 670.4 cv
500.4 708.6 li
500.501 708.6 li
cp
498.275 665.8 mo
459.633 665.8 li
457.003 665.8 454.879 667.9 454.879 670.5 cv
454.879 708.6 li
454.879 711.2 457.003 713.3 459.633 713.3 cv
498.175 713.3 li
500.805 713.3 502.929 711.2 502.929 708.6 cv
502.929 670.4 li
503.03 667.9 500.805 665.8 498.275 665.8 cv
cp
f
478.954 692 mo
477.538 692 476.426 690.9 476.426 689.5 cv
476.426 688.1 477.538 687 478.954 687 cv
480.371 687 481.483 688.1 481.483 689.5 cv
481.483 690.9 480.371 692 478.954 692 cv
cp
480.27 684.7 mo
480.27 674.5 li
480.27 673.8 479.662 673.2 478.954 673.2 cv
478.246 673.2 477.64 673.8 477.64 674.5 cv
477.64 684.7 li
475.818 685.2 474.504 686.5 473.998 688.3 cv
463.78 688.3 li
463.072 688.3 462.466 688.9 462.466 689.6 cv
462.466 690.3 463.072 690.9 463.78 690.9 cv
474.099 690.9 li
474.706 693.1 476.628 694.7 478.954 694.7 cv
481.787 694.7 484.013 692.5 484.013 689.7 cv
484.013 687.2 482.394 685.2 480.27 684.7 cv
cp
f
301.42 640 mo
402.579 640 li
402.579 740 li
301.42 740 li
301.42 640 li
cp
1 1 1 rgb
f
351.494 717 mo
336.118 717 323.675 704.7 323.675 689.5 cv
323.675 674.3 336.118 662 351.494 662 cv
366.87 662 379.313 674.3 379.313 689.5 cv
379.313 704.7 366.87 717 351.494 717 cv
cp
374.457 669.8 mo
376.784 667.5 li
378.402 669.1 li
378.908 669.6 379.718 669.6 380.224 669.1 cv
380.729 668.6 380.729 667.8 380.224 667.3 cv
375.165 662.3 li
374.659 661.8 373.851 661.8 373.345 662.3 cv
372.839 662.8 372.839 663.6 373.345 664.1 cv
374.963 665.7 li
372.737 668 li
360.902 656.6 342.188 656.6 330.352 668 cv
328.025 665.7 li
329.644 664.1 li
330.15 663.6 330.15 662.8 329.644 662.3 cv
329.138 661.8 328.329 661.8 327.823 662.3 cv
322.765 667.3 li
322.259 667.8 322.259 668.6 322.765 669.1 cv
323.271 669.6 324.08 669.6 324.586 669.1 cv
326.205 667.5 li
328.531 669.8 li
318.213 681.6 318.618 699.5 330.048 710.7 cv
341.884 722.4 361.104 722.4 372.939 710.7 cv
384.27 699.5 384.775 681.6 374.457 669.8 cv
cp
0 0 0 rgb
f
352.708 710.7 mo
352.708 705.7 li
352.708 705 352.101 704.4 351.393 704.4 cv
350.685 704.4 350.078 705 350.078 705.7 cv
350.078 710.7 li
339.254 710.1 330.554 701.5 329.846 690.7 cv
334.904 690.7 li
335.612 690.7 336.219 690.1 336.219 689.4 cv
336.219 688.7 335.612 688.1 334.904 688.1 cv
329.846 688.1 li
330.453 677.4 339.153 668.8 350.078 668.1 cv
350.078 673.1 li
350.078 673.8 350.685 674.4 351.393 674.4 cv
352.101 674.4 352.708 673.8 352.708 673.1 cv
352.708 668.1 li
363.532 668.7 372.231 677.3 372.939 688.1 cv
367.882 688.1 li
367.174 688.1 366.566 688.7 366.566 689.4 cv
366.566 690.1 367.174 690.7 367.882 690.7 cv
372.939 690.7 li
372.333 701.5 363.633 710.1 352.708 710.7 cv
cp
351.494 665.7 mo
338.242 665.7 327.418 676.4 327.418 689.4 cv
327.418 702.5 338.242 713.2 351.494 713.2 cv
364.746 713.2 375.57 702.5 375.57 689.4 cv
375.469 676.4 364.746 665.7 351.494 665.7 cv
cp
f
351.494 690.7 mo
350.786 690.7 350.179 690.1 350.179 689.4 cv
350.179 688.7 350.786 688.1 351.494 688.1 cv
352.202 688.1 352.809 688.7 352.809 689.4 cv
352.809 690.1 352.202 690.7 351.494 690.7 cv
cp
352.708 686 mo
352.708 679.5 li
352.708 678.8 352.101 678.2 351.393 678.2 cv
350.685 678.2 350.078 678.8 350.078 679.5 cv
350.078 686 li
348.561 686.5 347.549 687.9 347.549 689.5 cv
347.549 691.1 348.561 692.5 350.078 693 cv
350.078 694.5 li
350.078 695.2 350.685 695.8 351.393 695.8 cv
352.101 695.8 352.708 695.2 352.708 694.5 cv
352.708 693 li
354.226 692.5 355.237 691.1 355.237 689.5 cv
355.237 687.9 354.226 686.5 352.708 686 cv
cp
f
173.96 640 mo
275.119 640 li
275.119 740 li
173.96 740 li
173.96 640 li
cp
1 1 1 rgb
f
241.433 710.9 mo
241.534 710.1 241.636 709.1 241.636 708.2 cv
242.546 708.2 243.558 708.2 244.367 708.2 cv
243.457 709.2 242.546 710.1 241.433 710.9 cv
cp
196.62 694.1 mo
202.184 697.9 208.961 699.8 215.84 699.4 cv
217.256 702 220.797 702.8 223.225 701 cv
227.777 704.8 233.239 707.2 239.208 708 cv
239.106 709.7 238.904 711.3 238.601 713 cv
234.251 715.6 229.193 717 224.135 717 cv
210.377 717 198.845 707.2 196.62 694.1 cv
cp
216.953 662.9 mo
215.031 666.2 213.716 669.7 213.109 673.3 cv
211.085 673.6 209.467 675.2 209.063 677.1 cv
205.117 677.4 201.273 678.5 197.935 680.1 cv
200.97 671.7 208.152 665.2 216.953 662.9 cv
cp
241.737 668.3 mo
242.04 674.5 240.219 680.3 236.78 685.2 cv
235.364 684.5 233.644 684.6 232.329 685.3 cv
228.991 682.2 224.843 679.7 219.988 678.3 cv
219.583 678.2 219.279 678.1 218.976 678 cv
218.875 676 217.458 674.2 215.638 673.6 cv
216.346 669.6 217.964 665.7 220.392 662.3 cv
228.283 661.2 235.971 663.6 241.737 668.3 cv
cp
217.661 697 mo
217.661 695.3 219.482 694 221.1 694.7 cv
221.91 695 222.618 695.8 222.719 696.7 cv
222.719 696.7 li
222.921 698.5 221.303 699.9 219.583 699.5 cv
218.47 699.2 217.661 698.1 217.661 697 cv
cp
236.982 690.6 mo
236.578 691.7 235.465 692.4 234.251 692.2 cv
233.037 692 232.025 690.9 232.126 689.6 cv
232.228 688.3 233.341 687.2 234.656 687.2 cv
236.375 687.2 237.589 688.9 236.982 690.6 cv
cp
230.407 686.9 mo
229.396 688.4 229.294 690.3 230.104 691.9 cv
230.104 691.9 li
228.485 693 226.765 694 224.843 694.8 cv
223.933 692.9 221.708 691.6 219.38 692.1 cv
219.077 692.2 li
217.357 689.3 216.245 686.3 215.638 683 cv
216.852 682.6 217.964 681.7 218.571 680.4 cv
223.022 681.6 227.069 683.9 230.407 686.9 cv
cp
213.918 675.7 mo
215.334 675.7 216.447 676.8 216.447 678.2 cv
216.447 679.5 215.436 680.6 214.121 680.7 cv
214.019 680.7 213.615 680.8 213.008 680.5 cv
212.097 680.1 211.49 679.2 211.49 678.2 cv
211.389 676.9 212.502 675.7 213.918 675.7 cv
cp
196.215 690.7 mo
196.114 688.4 196.316 685.9 196.822 683.5 cv
200.565 681.2 204.813 679.9 208.961 679.6 cv
209.467 681.4 210.984 682.8 213.008 683.2 cv
213.615 686.8 214.93 690.3 216.75 693.4 cv
215.739 694.4 215.132 695.7 215.132 697 cv
208.456 697.3 201.779 695.2 196.215 690.7 cv
cp
224.843 699.1 mo
225.146 698.5 225.248 697.9 225.248 697.3 cv
227.575 696.4 229.699 695.2 231.722 693.8 cv
233.037 694.7 234.656 694.9 236.173 694.5 cv
237.893 697.8 238.904 701.5 239.208 705.5 cv
233.846 704.8 228.89 702.5 224.843 699.1 cv
cp
246.693 705.5 mo
244.974 705.7 243.254 705.8 241.737 705.7 cv
241.534 701.2 240.422 697 238.297 693.1 cv
239.916 691.4 240.118 688.7 238.702 686.8 cv
242.04 682.2 243.962 676.7 244.266 670.6 cv
253.37 680.1 254.382 694.8 246.693 705.5 cv
cp
243.76 666.7 mo
243.76 666.7 li
237.083 661 228.182 658.5 219.482 659.8 cv
204.105 662.1 192.776 675.6 193.788 691.4 cv
194.293 699 197.631 706.1 203.296 711.3 cv
216.447 723.5 237.488 721.8 248.413 707.4 cv
248.413 707.4 li
257.922 694.8 255.899 677 243.76 666.7 cv
cp
0 0 0 rgb
f
46.5 640 mo
147.659 640 li
147.659 740 li
46.5 740 li
46.5 640 li
cp
1 1 1 rgb
f
96.5737 717 mo
81.1973 717 68.7549 704.7 68.7549 689.5 cv
68.7549 674.3 81.1973 662 96.5737 662 cv
111.95 662 124.393 674.3 124.393 689.5 cv
124.393 704.7 111.95 717 96.5737 717 cv
cp
96.5737 659.5 mo
79.7813 659.5 66.2261 672.9 66.2261 689.5 cv
66.2261 706.1 79.7813 719.5 96.5737 719.5 cv
113.366 719.5 126.921 706.1 126.921 689.5 cv
126.921 672.9 113.366 659.5 96.5737 659.5 cv
cp
0 0 0 rgb
f
97.8887 710.7 mo
97.8887 705.7 li
97.8887 705 97.2817 704.4 96.5737 704.4 cv
95.8657 704.4 95.2588 705 95.2588 705.7 cv
95.2588 710.7 li
84.4346 710.1 75.7349 701.5 75.0269 690.7 cv
80.085 690.7 li
80.793 690.7 81.3999 690.1 81.3999 689.4 cv
81.3999 688.7 80.793 688.1 80.085 688.1 cv
75.0269 688.1 li
75.6338 677.4 84.3335 668.8 95.2588 668.1 cv
95.2588 673.1 li
95.2588 673.8 95.8657 674.4 96.5737 674.4 cv
97.2817 674.4 97.8887 673.8 97.8887 673.1 cv
97.8887 668.1 li
108.713 668.7 117.413 677.3 118.121 688.1 cv
113.063 688.1 li
112.354 688.1 111.748 688.7 111.748 689.4 cv
111.748 690.1 112.354 690.7 113.063 690.7 cv
118.121 690.7 li
117.413 701.5 108.713 710.1 97.8887 710.7 cv
cp
96.5737 665.8 mo
83.3218 665.8 72.4976 676.5 72.4976 689.6 cv
72.4976 702.7 83.3218 713.4 96.5737 713.4 cv
109.826 713.4 120.649 702.7 120.649 689.6 cv
120.649 676.4 109.826 665.8 96.5737 665.8 cv
cp
f
99.6084 697.4 mo
98.2935 697.4 97.0796 696.7 96.4727 695.6 cv
88.8857 683.1 li
101.53 690.6 li
102.542 691.2 103.149 692.2 103.25 693.3 cv
103.453 695.5 101.733 697.4 99.6084 697.4 cv
cp
102.744 688.5 mo
85.8506 678.5 li
85.3452 678.2 84.7383 678.3 84.3335 678.7 cv
83.9287 679.1 83.8276 679.7 84.1309 680.2 cv
94.2471 696.9 li
95.3599 698.8 97.3828 699.9 99.6084 699.9 cv
103.351 699.9 106.184 696.7 105.779 693 cv
105.476 691.1 104.464 689.4 102.744 688.5 cv
cp
f
556.341 514 mo
657.5 514 li
657.5 614 li
556.341 614 li
556.341 514 li
cp
1 1 1 rgb
f
606.415 591 mo
591.039 591 578.596 578.7 578.596 563.5 cv
578.596 548.3 591.039 536 606.415 536 cv
621.791 536 634.233 548.3 634.233 563.5 cv
634.233 578.7 621.791 591 606.415 591 cv
cp
606.415 533.5 mo
589.622 533.5 576.067 546.9 576.067 563.5 cv
576.067 580.1 589.622 593.5 606.415 593.5 cv
623.207 593.5 636.763 580.1 636.763 563.5 cv
636.763 546.9 623.207 533.5 606.415 533.5 cv
cp
0 0 0 rgb
f
606.415 584.8 mo
594.579 584.8 584.868 575.3 584.868 563.5 cv
584.868 551.7 594.479 542.2 606.415 542.2 cv
618.352 542.2 627.962 551.7 627.962 563.5 cv
627.962 575.3 618.25 584.8 606.415 584.8 cv
cp
606.415 539.8 mo
593.163 539.8 582.339 550.5 582.339 563.6 cv
582.339 576.7 593.163 587.4 606.415 587.4 cv
619.667 587.4 630.49 576.7 630.49 563.6 cv
630.49 550.4 619.667 539.8 606.415 539.8 cv
cp
f
611.574 564.4 mo
611.169 564.7 610.967 565.3 611.068 565.8 cv
613.496 573.2 li
607.123 568.6 li
606.718 568.3 606.111 568.3 605.605 568.6 cv
599.232 573.2 li
601.66 565.8 li
601.862 565.3 601.66 564.7 601.154 564.4 cv
594.781 559.8 li
602.672 559.8 li
603.178 559.8 603.684 559.5 603.886 558.9 cv
606.313 551.5 li
608.741 558.9 li
608.943 559.4 609.349 559.8 609.955 559.8 cv
617.846 559.8 li
611.574 564.4 li
cp
623.005 558.2 mo
622.803 557.7 622.397 557.3 621.791 557.3 cv
610.967 557.3 li
607.629 547.1 li
607.426 546.6 607.021 546.2 606.415 546.2 cv
605.909 546.2 605.403 546.5 605.201 547.1 cv
601.862 557.3 li
591.039 557.3 li
590.533 557.3 590.027 557.6 589.824 558.2 cv
589.622 558.7 589.824 559.3 590.33 559.6 cv
599.131 565.9 li
595.793 576.1 li
595.591 576.6 595.793 577.2 596.299 577.5 cv
596.703 577.8 597.311 577.8 597.816 577.5 cv
606.617 571.2 li
615.418 577.5 li
615.822 577.8 616.43 577.8 616.936 577.5 cv
617.34 577.2 617.542 576.6 617.441 576.1 cv
614.103 565.9 li
622.903 559.6 li
623.005 559.2 623.207 558.7 623.005 558.2 cv
cp
f
428.881 514 mo
530.04 514 li
530.04 614 li
428.881 614 li
428.881 514 li
cp
1 1 1 rgb
f
478.954 591 mo
463.578 591 451.136 578.7 451.136 563.5 cv
451.136 548.3 463.578 536 478.954 536 cv
494.331 536 506.773 548.3 506.773 563.5 cv
506.773 578.7 494.331 591 478.954 591 cv
cp
478.954 533.5 mo
462.162 533.5 448.606 546.9 448.606 563.5 cv
448.606 580.1 462.162 593.5 478.954 593.5 cv
495.747 593.5 509.302 580.1 509.302 563.5 cv
509.302 546.9 495.747 533.5 478.954 533.5 cv
cp
0 0 0 rgb
f
478.954 584.8 mo
467.119 584.8 457.407 575.3 457.407 563.5 cv
457.407 551.7 467.018 542.2 478.954 542.2 cv
490.892 542.2 500.501 551.7 500.501 563.5 cv
500.501 575.3 490.79 584.8 478.954 584.8 cv
cp
478.954 539.8 mo
465.703 539.8 454.879 550.5 454.879 563.6 cv
454.879 576.7 465.703 587.4 478.954 587.4 cv
492.206 587.4 503.03 576.7 503.03 563.6 cv
503.03 550.4 492.206 539.8 478.954 539.8 cv
cp
f
489.07 566 mo
482.697 566 li
481.989 566 481.382 566.6 481.382 567.3 cv
481.382 573.6 li
481.382 575 480.27 576.1 478.854 576.1 cv
477.438 576.1 476.426 574.9 476.426 573.5 cv
476.426 567.2 li
476.426 566.5 475.818 565.9 475.11 565.9 cv
468.737 565.9 li
467.321 565.9 466.208 564.8 466.208 563.4 cv
466.208 562 467.321 560.9 468.737 560.9 cv
475.11 560.9 li
475.818 560.9 476.426 560.3 476.426 559.6 cv
476.426 553.3 li
476.426 551.9 477.538 550.8 478.954 550.8 cv
480.371 550.8 481.483 551.9 481.483 553.3 cv
481.483 559.6 li
481.483 560.3 482.091 560.9 482.799 560.9 cv
489.172 560.9 li
490.588 560.9 491.7 562 491.7 563.4 cv
491.6 564.9 490.486 566 489.07 566 cv
cp
489.07 558.5 mo
484.013 558.5 li
484.013 553.5 li
484.013 550.7 481.787 548.5 478.954 548.5 cv
476.122 548.5 473.896 550.7 473.896 553.5 cv
473.896 558.5 li
468.839 558.5 li
466.006 558.5 463.78 560.7 463.78 563.5 cv
463.78 566.3 466.006 568.5 468.839 568.5 cv
473.896 568.5 li
473.896 573.5 li
473.896 576.3 476.122 578.5 478.954 578.5 cv
481.787 578.5 484.013 576.3 484.013 573.5 cv
484.013 568.5 li
489.07 568.5 li
491.902 568.5 494.128 566.3 494.128 563.5 cv
494.128 560.7 491.902 558.5 489.07 558.5 cv
cp
f
301.42 514 mo
402.579 514 li
402.579 614 li
301.42 614 li
301.42 514 li
cp
1 1 1 rgb
f
351.494 582.2 mo
349.37 582.2 347.65 580.5 347.65 578.4 cv
347.65 576.3 349.37 574.6 351.494 574.6 cv
353.619 574.6 355.338 576.3 355.338 578.4 cv
355.338 580.6 353.619 582.2 351.494 582.2 cv
cp
351.494 572.2 mo
348.055 572.2 345.121 575 345.121 578.5 cv
345.121 581.9 347.954 584.8 351.494 584.8 cv
355.035 584.8 357.867 582 357.867 578.5 cv
357.867 575.1 354.934 572.2 351.494 572.2 cv
cp
0 0 0 rgb
f
338.849 578.5 mo
338.849 571.6 344.514 566 351.494 566 cv
358.475 566 364.139 571.6 364.139 578.5 cv
364.139 585.4 358.475 591 351.494 591 cv
344.514 591 338.849 585.4 338.849 578.5 cv
cp
380.628 591 mo
359.891 591 li
363.937 588.3 366.668 583.7 366.668 578.5 cv
366.668 573.1 363.836 568.4 359.485 565.8 cv
372.231 547.9 li
372.939 552.4 li
373.041 553 373.547 553.5 374.153 553.5 cv
374.963 553.5 375.57 552.8 375.367 552.1 cv
374.963 549.3 374.153 544.6 374.153 544.5 cv
374.053 543.9 373.547 543.5 372.939 543.5 cv
365.252 543.5 li
364.544 543.5 363.937 544.1 363.937 544.8 cv
363.937 545.5 364.544 546.1 365.252 546.1 cv
370.411 546.1 li
357.261 564.6 li
355.844 564 354.327 563.7 352.809 563.5 cv
352.809 537.4 li
357.058 540.8 li
357.563 541.2 358.373 541.1 358.879 540.6 cv
359.283 540.1 359.183 539.3 358.677 538.8 cv
352.101 533.6 352.405 533.8 352.304 533.7 cv
351.899 533.5 351.494 533.4 351.089 533.6 cv
350.887 533.7 350.887 533.7 350.786 533.8 cv
350.28 534.2 344.919 538.5 344.514 538.8 cv
344.008 539.2 343.907 540 344.312 540.6 cv
344.717 541.1 345.526 541.2 346.133 540.8 cv
350.381 537.4 li
350.381 563.6 li
348.763 563.7 347.246 564.1 345.931 564.7 cv
332.476 546 li
337.635 546 li
338.343 546 338.951 545.4 338.951 544.7 cv
338.951 544 338.343 543.4 337.635 543.4 cv
335.713 543.4 330.048 543.4 329.947 543.4 cv
329.441 543.5 328.936 543.8 328.834 544.3 cv
328.834 544.4 327.52 551.9 327.52 551.9 cv
327.418 552.7 328.025 553.4 328.733 553.4 cv
329.34 553.4 329.846 553 329.947 552.4 cv
330.757 548 li
343.502 565.8 li
339.254 568.5 336.32 573.2 336.32 578.5 cv
336.32 583.7 339.052 588.3 343.098 591 cv
322.461 591 li
321.753 591 321.146 591.6 321.146 592.3 cv
321.146 593 321.753 593.6 322.461 593.6 cv
380.628 593.6 li
381.336 593.6 381.943 593 381.943 592.3 cv
381.842 591.6 381.235 591 380.628 591 cv
cp
f
327.52 571 mo
328.228 571 328.834 571.6 328.834 572.3 cv
328.834 573 328.228 573.6 327.52 573.6 cv
326.812 573.6 326.205 573 326.205 572.3 cv
326.205 571.6 326.812 571 327.52 571 cv
cp
327.52 576 mo
329.644 576 331.364 574.3 331.364 572.2 cv
331.364 570.1 329.644 568.4 327.52 568.4 cv
325.395 568.4 323.675 570.2 323.675 572.2 cv
323.675 574.2 325.395 576 327.52 576 cv
cp
f
375.57 582.2 mo
375.57 582.9 374.963 583.5 374.255 583.5 cv
373.547 583.5 372.939 582.9 372.939 582.2 cv
372.939 581.5 373.547 580.9 374.255 580.9 cv
374.963 580.9 375.57 581.6 375.57 582.2 cv
cp
370.512 582.2 mo
370.512 584.3 372.231 586 374.356 586 cv
376.48 586 378.2 584.3 378.2 582.2 cv
378.2 580.1 376.48 578.4 374.356 578.4 cv
372.231 578.4 370.512 580.2 370.512 582.2 cv
cp
f
173.96 514 mo
275.119 514 li
275.119 614 li
173.96 614 li
173.96 514 li
cp
1 1 1 rgb
f
227.372 562.3 mo
220.696 562.3 li
216.042 562.3 211.793 561.2 208.557 559.2 cv
205.522 557.3 203.802 554.9 203.802 552.3 cv
203.802 542.3 li
244.266 542.3 li
244.266 552.3 li
244.266 554.8 242.546 557.3 239.511 559.2 cv
236.274 561.2 232.025 562.3 227.372 562.3 cv
cp
239.511 567.8 mo
242.546 569.7 244.266 572.1 244.266 574.7 cv
244.266 584.7 li
203.802 584.7 li
203.802 574.7 li
203.802 572.2 205.522 569.7 208.557 567.8 cv
211.793 565.8 216.144 564.7 220.696 564.7 cv
227.372 564.7 li
232.025 564.8 236.274 565.8 239.511 567.8 cv
cp
251.751 591 mo
196.316 591 li
196.62 588.9 198.542 587.2 200.768 587.2 cv
203.296 587.2 245.479 587.2 247.402 587.2 cv
249.627 587.3 251.448 588.9 251.751 591 cv
cp
196.316 536 mo
251.853 536 li
251.549 538.1 249.627 539.8 247.402 539.8 cv
244.873 539.8 202.689 539.8 200.768 539.8 cv
198.441 539.8 196.62 538.1 196.316 536 cv
cp
246.795 552.3 mo
246.795 542.3 li
247.402 542.3 li
251.246 542.3 254.382 539.2 254.382 535.4 cv
254.382 534.8 li
254.382 534.1 253.775 533.5 253.066 533.5 cv
195.001 533.5 li
194.293 533.5 193.687 534.1 193.687 534.8 cv
193.687 535.4 li
193.687 539.2 196.822 542.3 200.666 542.3 cv
201.273 542.3 li
201.273 552.3 li
201.273 555.7 203.397 558.9 207.141 561.3 cv
208.658 562.2 210.276 563 212.097 563.5 cv
210.276 564.1 208.658 564.8 207.141 565.7 cv
203.296 568.1 201.273 571.2 201.273 574.7 cv
201.273 584.7 li
200.666 584.7 li
196.822 584.7 193.687 587.8 193.687 591.6 cv
193.687 592.2 li
193.687 592.9 194.293 593.5 195.001 593.5 cv
253.167 593.5 li
253.876 593.5 254.483 592.9 254.483 592.2 cv
254.483 591.6 li
254.483 587.8 251.347 584.7 247.503 584.7 cv
246.795 584.7 li
246.795 574.7 li
246.795 571.3 244.67 568.1 240.928 565.7 cv
239.41 564.8 237.792 564 235.971 563.5 cv
237.792 562.9 239.41 562.2 240.928 561.3 cv
244.67 558.9 246.795 555.7 246.795 552.3 cv
cp
0 0 0 rgb
f
211.389 549.8 mo
210.681 549.8 210.074 549.2 210.074 548.5 cv
210.074 547.8 210.681 547.2 211.389 547.2 cv
212.097 547.2 212.704 547.8 212.704 548.5 cv
212.704 549.2 212.097 549.8 211.389 549.8 cv
cp
211.389 544.8 mo
209.265 544.8 207.545 546.5 207.545 548.6 cv
207.545 550.7 209.265 552.4 211.389 552.4 cv
213.513 552.4 215.233 550.7 215.233 548.6 cv
215.233 546.5 213.513 544.8 211.389 544.8 cv
cp
f
234.15 549.8 mo
233.442 549.8 232.835 549.2 232.835 548.5 cv
232.835 547.8 233.442 547.2 234.15 547.2 cv
234.858 547.2 235.465 547.8 235.465 548.5 cv
235.465 549.2 234.858 549.8 234.15 549.8 cv
cp
234.15 544.8 mo
232.025 544.8 230.306 546.5 230.306 548.6 cv
230.306 550.7 232.025 552.4 234.15 552.4 cv
236.274 552.4 237.994 550.7 237.994 548.6 cv
237.994 546.5 236.274 544.8 234.15 544.8 cv
cp
f
224.034 557.3 mo
223.326 557.3 222.719 556.7 222.719 556 cv
222.719 555.3 223.326 554.7 224.034 554.7 cv
224.742 554.7 225.349 555.3 225.349 556 cv
225.349 556.7 224.742 557.3 224.034 557.3 cv
cp
224.034 552.3 mo
221.91 552.3 220.19 554 220.19 556.1 cv
220.19 558.2 221.91 559.9 224.034 559.9 cv
226.158 559.9 227.878 558.2 227.878 556.1 cv
227.878 554 226.158 552.3 224.034 552.3 cv
cp
f
224.034 569.8 mo
224.742 569.8 225.349 570.4 225.349 571.1 cv
225.349 571.8 224.742 572.4 224.034 572.4 cv
223.326 572.4 222.719 571.8 222.719 571.1 cv
222.719 570.4 223.326 569.8 224.034 569.8 cv
cp
224.034 574.8 mo
226.158 574.8 227.878 573.1 227.878 571 cv
227.878 568.9 226.158 567.2 224.034 567.2 cv
221.91 567.2 220.19 568.9 220.19 571 cv
220.19 573.1 221.91 574.8 224.034 574.8 cv
cp
f
213.918 579.8 mo
213.21 579.8 212.603 579.2 212.603 578.5 cv
212.603 577.8 213.21 577.2 213.918 577.2 cv
214.626 577.2 215.233 577.8 215.233 578.5 cv
215.233 579.2 214.626 579.8 213.918 579.8 cv
cp
213.918 574.8 mo
211.793 574.8 210.074 576.5 210.074 578.6 cv
210.074 580.7 211.793 582.4 213.918 582.4 cv
216.042 582.4 217.762 580.7 217.762 578.6 cv
217.762 576.5 216.042 574.8 213.918 574.8 cv
cp
f
235.465 577.3 mo
236.173 577.3 236.78 577.9 236.78 578.6 cv
236.78 579.3 236.173 579.9 235.465 579.9 cv
234.757 579.9 234.15 579.3 234.15 578.6 cv
234.15 577.8 234.757 577.3 235.465 577.3 cv
cp
235.465 582.3 mo
237.589 582.3 239.309 580.6 239.309 578.5 cv
239.309 576.4 237.589 574.7 235.465 574.7 cv
233.341 574.7 231.621 576.4 231.621 578.5 cv
231.621 580.6 233.341 582.3 235.465 582.3 cv
cp
f
46.5 514 mo
147.659 514 li
147.659 614 li
46.5 614 li
46.5 514 li
cp
1 1 1 rgb
f
90.3018 558.8 mo
83.3218 558.8 77.8594 564.6 77.8594 571 cv
77.8594 571.7 78.4663 572.3 79.0732 572.3 cv
79.7813 572.3 80.3882 571.7 80.3882 571 cv
80.3882 565.8 84.9404 561.3 90.2007 561.3 cv
90.9087 561.3 91.5156 560.7 91.5156 560 cv
91.5156 559.3 90.9087 558.8 90.3018 558.8 cv
cp
0 0 0 rgb
f
124.393 584.8 mo
123.482 584.8 69.6655 584.8 68.7549 584.8 cv
68.7549 581 li
72.0933 581 122.47 581 124.393 581 cv
124.393 584.8 li
cp
116.806 591 mo
76.3418 591 li
76.3418 587.2 li
116.806 587.2 li
116.806 591 li
cp
71.5874 578.2 mo
71.5874 564.6 82.8159 553.5 96.5737 553.5 cv
110.331 553.5 121.56 564.6 121.56 578.2 cv
121.56 578.5 li
71.5874 578.5 li
71.5874 578.2 li
cp
94.0449 538.5 mo
94.0449 537.1 95.1572 536 96.5737 536 cv
97.9897 536 99.1025 537.1 99.1025 538.5 cv
99.1025 539.9 97.9897 541 96.5737 541 cv
95.1572 541 94.0449 539.9 94.0449 538.5 cv
cp
125.708 578.5 mo
124.19 578.5 li
124.19 578.2 li
124.19 563.5 112.456 551.7 97.8887 551 cv
97.8887 543.3 li
100.114 542.7 101.733 540.8 101.733 538.5 cv
101.733 535.7 99.5073 533.5 96.6748 533.5 cv
93.8423 533.5 91.6167 535.7 91.6167 538.5 cv
91.6167 540.8 93.2354 542.8 95.4609 543.3 cv
95.4609 551 li
80.9951 551.6 69.1597 563.4 69.1597 578.2 cv
69.1597 578.5 li
67.6421 578.5 li
66.9341 578.5 66.3271 579.1 66.3271 579.8 cv
66.3271 586 li
66.3271 586.7 66.9341 587.3 67.6421 587.3 cv
73.813 587.3 li
73.813 592.3 li
73.813 593 74.4199 593.6 75.1279 593.6 cv
118.121 593.6 li
118.829 593.6 119.436 593 119.436 592.3 cv
119.436 587.3 li
125.809 587.3 li
126.517 587.3 127.124 586.7 127.124 586 cv
127.124 579.7 li
126.921 579.1 126.314 578.5 125.708 578.5 cv
cp
f
556.341 388 mo
657.5 388 li
657.5 488 li
556.341 488 li
556.341 388 li
cp
1 1 1 rgb
f
591.848 460.9 mo
592.354 461.4 593.163 461.4 593.669 460.9 cv
606.617 448 li
607.123 447.5 607.123 446.7 606.617 446.2 cv
605.403 445 li
604.897 444.5 604.088 444.5 603.582 445 cv
603.076 445.5 603.076 446.3 603.582 446.8 cv
603.987 447.2 li
592.758 458.2 li
585.475 451 li
596.703 439.9 li
597.108 440.3 li
597.614 440.8 598.423 440.8 598.929 440.3 cv
599.435 439.8 599.435 439 598.929 438.5 cv
597.614 437.2 li
597.108 436.7 596.299 436.7 595.793 437.2 cv
582.743 450.1 li
582.237 450.6 582.237 451.4 582.743 451.9 cv
591.848 460.9 li
cp
0 0 0 rgb
f
607.426 430 mo
607.932 430.5 608.741 430.5 609.247 430 cv
609.753 429.5 609.753 428.7 609.247 428.2 cv
608.843 427.8 li
620.071 416.8 li
627.354 424 li
616.126 435.1 li
615.722 434.7 li
615.216 434.2 614.406 434.2 613.9 434.7 cv
613.395 435.2 613.395 436 613.9 436.5 cv
615.216 437.8 li
615.722 438.3 616.53 438.3 617.036 437.8 cv
630.086 424.9 li
630.592 424.4 630.592 423.6 630.086 423.1 cv
620.981 414.1 li
620.476 413.6 619.667 413.6 619.161 414.1 cv
606.212 427 li
605.707 427.5 605.707 428.3 606.212 428.8 cv
607.426 430 li
cp
f
615.722 428.3 mo
615.216 427.8 614.406 427.8 613.9 428.3 cv
597.715 444.3 li
597.209 444.8 597.209 445.6 597.715 446.1 cv
598.221 446.6 599.03 446.6 599.536 446.1 cv
615.722 430 li
616.228 429.5 616.228 428.7 615.722 428.3 cv
cp
f
634.233 465 mo
578.596 465 li
578.596 410 li
634.233 410 li
634.233 465 li
cp
635.549 407.5 mo
577.382 407.5 li
576.674 407.5 576.067 408.1 576.067 408.8 cv
576.067 466.3 li
576.067 467 576.674 467.6 577.382 467.6 cv
635.549 467.6 li
636.257 467.6 636.863 467 636.863 466.3 cv
636.863 408.8 li
636.763 408.1 636.155 407.5 635.549 407.5 cv
cp
f
428.881 388 mo
530.04 388 li
530.04 488 li
428.881 488 li
428.881 388 li
cp
1 1 1 rgb
f
478.954 465 mo
463.578 465 451.136 452.7 451.136 437.5 cv
451.136 422.3 463.578 410 478.954 410 cv
494.331 410 506.773 422.3 506.773 437.5 cv
506.773 452.7 494.331 465 478.954 465 cv
cp
478.954 407.5 mo
462.162 407.5 448.606 420.9 448.606 437.5 cv
448.606 454.1 462.162 467.5 478.954 467.5 cv
495.747 467.5 509.302 454.1 509.302 437.5 cv
509.302 420.9 495.747 407.5 478.954 407.5 cv
cp
0 0 0 rgb
f
478.954 458.8 mo
467.119 458.8 457.407 449.3 457.407 437.5 cv
457.407 425.7 467.018 416.2 478.954 416.2 cv
490.892 416.2 500.501 425.7 500.501 437.5 cv
500.501 449.3 490.79 458.8 478.954 458.8 cv
cp
478.954 413.8 mo
465.703 413.8 454.879 424.5 454.879 437.6 cv
454.879 450.7 465.703 461.4 478.954 461.4 cv
492.206 461.4 503.03 450.7 503.03 437.6 cv
503.03 424.4 492.206 413.8 478.954 413.8 cv
cp
f
489.07 440 mo
468.839 440 li
467.422 440 466.31 438.9 466.31 437.5 cv
466.31 436.1 467.422 435 468.839 435 cv
489.07 435 li
490.486 435 491.6 436.1 491.6 437.5 cv
491.6 438.9 490.486 440 489.07 440 cv
cp
489.07 432.5 mo
468.839 432.5 li
466.006 432.5 463.78 434.7 463.78 437.5 cv
463.78 440.3 466.006 442.5 468.839 442.5 cv
489.07 442.5 li
491.902 442.5 494.128 440.3 494.128 437.5 cv
494.128 434.7 491.902 432.5 489.07 432.5 cv
cp
f
301.42 388 mo
402.579 388 li
402.579 488 li
301.42 488 li
301.42 388 li
cp
1 1 1 rgb
f
329.037 453.8 mo
337.534 453.8 li
338.242 453.8 338.849 453.2 338.849 452.5 cv
338.849 451.8 338.242 451.2 337.534 451.2 cv
334.702 451.2 327.418 451.2 327.317 451.2 cv
326.205 449.3 325.294 447.2 324.586 444.9 cv
337.433 444.9 li
338.141 444.9 338.748 444.3 338.748 443.6 cv
338.748 442.9 338.141 442.3 337.433 442.3 cv
324.181 442.3 li
322.461 432.9 325.699 423.2 333.083 416.7 cv
329.542 435.2 343.907 452.3 362.925 452.3 cv
367.781 452.3 372.434 451.2 376.683 449 cv
372.131 458.8 362.419 465 351.494 465 cv
342.289 465 334.095 460.6 329.037 453.8 cv
cp
380.628 465 mo
363.633 465 li
371.22 461.7 377.593 455.2 380.324 446.7 cv
380.526 446.2 380.324 445.6 379.92 445.3 cv
379.516 445 378.908 445 378.402 445.3 cv
373.749 448.4 368.388 450 362.824 450 cv
347.448 450 335.005 437.7 335.005 422.5 cv
335.005 419.6 335.41 416.8 336.32 414.1 cv
336.522 413.6 336.32 413 335.916 412.7 cv
335.511 412.4 334.904 412.4 334.398 412.7 cv
318.719 423.2 316.392 445.3 329.947 458.8 cv
332.679 461.5 335.814 463.6 339.254 465.1 cv
322.461 465.1 li
321.753 465.1 321.146 465.7 321.146 466.4 cv
321.146 467.1 321.753 467.7 322.461 467.7 cv
380.628 467.7 li
381.336 467.7 381.943 467.1 381.943 466.4 cv
381.842 465.6 381.235 465 380.628 465 cv
cp
0 0 0 rgb
f
346.841 424.6 mo
347.347 424.6 347.853 424.2 348.055 423.7 cv
348.965 420.9 li
349.875 423.7 li
350.078 424.2 350.482 424.6 351.089 424.6 cv
354.125 424.6 li
351.595 426.5 li
351.191 426.8 350.988 427.4 351.191 427.9 cv
352.101 430.8 li
349.774 429 li
349.37 428.7 348.662 428.7 348.257 429 cv
345.931 430.8 li
346.841 427.9 li
347.043 427.4 346.841 426.9 346.437 426.5 cv
343.907 424.6 li
346.841 424.6 li
346.841 424.6 li
cp
339.355 424.3 mo
344.109 427.9 li
342.289 433.8 li
342.086 434.3 342.289 434.9 342.794 435.2 cv
343.199 435.5 343.806 435.5 344.312 435.2 cv
348.965 431.6 li
353.619 435.2 li
353.821 435.4 354.125 435.5 354.428 435.5 cv
355.237 435.5 355.844 434.7 355.642 433.9 cv
353.821 428 li
358.575 424.4 li
358.98 424.1 359.183 423.5 358.98 423 cv
358.777 422.5 358.373 422.2 357.766 422.2 cv
352 422.2 li
350.179 416.4 li
349.977 415.9 349.572 415.5 348.965 415.5 cv
348.459 415.5 347.954 415.9 347.751 416.4 cv
345.931 422.1 li
340.063 422.1 li
339.558 422.1 339.052 422.4 338.849 422.9 cv
338.748 423.4 338.951 424 339.355 424.3 cv
cp
f
376.885 432.3 mo
375.873 433 li
375.469 433.3 375.267 433.9 375.469 434.4 cv
375.772 435.4 li
374.963 434.8 li
374.559 434.5 373.851 434.5 373.445 434.8 cv
372.637 435.4 li
372.939 434.4 li
373.143 433.9 372.939 433.4 372.535 433 cv
371.625 432.3 li
372.737 432.3 li
373.243 432.3 373.749 431.9 373.951 431.4 cv
374.255 430.5 li
374.559 431.4 li
374.761 431.9 375.165 432.3 375.772 432.3 cv
376.885 432.3 li
cp
374.255 425 mo
373.749 425 373.243 425.4 373.041 425.9 cv
371.827 429.8 li
367.882 429.8 li
367.376 429.8 366.87 430.1 366.668 430.6 cv
366.466 431.1 366.668 431.7 367.072 432 cv
370.31 434.4 li
369.096 438.3 li
368.894 438.8 369.096 439.4 369.602 439.7 cv
370.006 440 370.613 440 371.119 439.7 cv
374.255 437.3 li
377.391 439.7 li
377.593 439.9 377.896 440 378.2 440 cv
379.01 440 379.616 439.2 379.414 438.4 cv
378.2 434.5 li
381.336 432 li
381.74 431.7 381.943 431.1 381.74 430.6 cv
381.538 430.1 381.134 429.8 380.526 429.8 cv
376.582 429.8 li
375.367 425.9 li
375.267 425.4 374.761 425 374.255 425 cv
cp
f
366.668 414.8 mo
367.174 414.8 367.68 414.4 367.882 413.9 cv
368.186 413 li
368.489 413.9 li
368.691 414.4 369.096 414.8 369.703 414.8 cv
370.815 414.8 li
369.905 415.5 li
369.5 415.8 369.298 416.4 369.5 416.9 cv
369.804 417.9 li
368.995 417.3 li
368.59 417 367.882 417 367.478 417.3 cv
366.668 417.9 li
366.972 416.9 li
367.174 416.4 366.972 415.9 366.566 415.5 cv
365.656 414.8 li
366.668 414.8 li
366.668 414.8 li
cp
361.104 414.5 mo
364.342 416.9 li
363.128 420.8 li
362.925 421.3 363.128 421.9 363.633 422.2 cv
364.038 422.5 364.645 422.5 365.15 422.2 cv
368.286 419.8 li
371.423 422.2 li
371.625 422.4 371.929 422.5 372.231 422.5 cv
373.041 422.5 373.648 421.7 373.445 420.9 cv
372.231 417 li
375.469 414.6 li
375.873 414.3 376.076 413.7 375.873 413.2 cv
375.671 412.7 375.267 412.4 374.659 412.4 cv
370.715 412.4 li
369.5 408.5 li
369.298 408 368.894 407.6 368.286 407.6 cv
367.68 407.6 367.275 408 367.072 408.5 cv
365.858 412.4 li
361.914 412.4 li
361.408 412.4 360.902 412.7 360.699 413.2 cv
360.497 413.7 360.599 414.2 361.104 414.5 cv
cp
f
173.96 388 mo
275.119 388 li
275.119 488 li
173.96 488 li
173.96 388 li
cp
1 1 1 rgb
f
251.853 463.6 mo
251.853 464.4 251.246 465 250.437 465 cv
225.349 465 li
225.349 438.8 li
251.853 438.8 li
251.853 463.6 li
cp
196.215 463.6 mo
196.215 438.8 li
222.82 438.8 li
222.82 465 li
197.631 465 li
196.822 465 196.215 464.4 196.215 463.6 cv
cp
196.215 411.4 mo
196.215 410.6 196.822 410 197.631 410 cv
222.82 410 li
222.82 436.3 li
196.215 436.3 li
196.215 411.4 li
cp
251.853 411.4 mo
251.853 436.3 li
225.349 436.3 li
225.349 410 li
250.538 410 li
251.246 410 251.853 410.6 251.853 411.4 cv
cp
250.437 407.5 mo
248.919 407.5 199.048 407.5 197.53 407.5 cv
195.406 407.5 193.585 409.2 193.585 411.4 cv
193.585 412.9 193.585 462.2 193.585 463.7 cv
193.585 465.8 195.305 467.6 197.53 467.6 cv
199.048 467.6 248.919 467.6 250.437 467.6 cv
252.561 467.6 254.382 465.9 254.382 463.7 cv
254.382 462.2 254.382 412.9 254.382 411.4 cv
254.382 409.2 252.662 407.5 250.437 407.5 cv
cp
0 0 0 rgb
f
218.369 421.9 mo
210.175 421.9 li
210.175 413.8 li
210.175 413.1 209.568 412.5 208.86 412.5 cv
208.152 412.5 207.545 413.1 207.545 413.8 cv
207.545 421.9 li
199.351 421.9 li
198.643 421.9 198.036 422.5 198.036 423.2 cv
198.036 423.9 198.643 424.5 199.351 424.5 cv
207.545 424.5 li
207.545 432.6 li
207.545 433.3 208.152 433.9 208.86 433.9 cv
209.568 433.9 210.175 433.3 210.175 432.6 cv
210.175 424.5 li
218.369 424.5 li
219.077 424.5 219.684 423.9 219.684 423.2 cv
219.583 422.4 219.077 421.9 218.369 421.9 cv
cp
f
216.447 444.4 mo
215.941 443.9 215.132 443.9 214.626 444.4 cv
208.86 450.1 li
203.094 444.4 li
202.588 443.9 201.779 443.9 201.273 444.4 cv
200.768 444.9 200.768 445.7 201.273 446.2 cv
207.039 451.9 li
201.273 457.6 li
200.768 458.1 200.768 458.9 201.273 459.4 cv
201.779 459.9 202.588 459.9 203.094 459.4 cv
208.86 453.7 li
214.626 459.4 li
215.132 459.9 215.941 459.9 216.447 459.4 cv
216.953 458.9 216.953 458.1 216.447 457.6 cv
210.681 451.9 li
216.447 446.2 li
216.953 445.6 216.953 444.9 216.447 444.4 cv
cp
f
229.092 424.4 mo
248.11 424.4 li
248.818 424.4 249.425 423.8 249.425 423.1 cv
249.425 422.4 248.818 421.8 248.11 421.8 cv
229.092 421.8 li
228.384 421.8 227.777 422.4 227.777 423.1 cv
227.878 423.8 228.384 424.4 229.092 424.4 cv
cp
f
229.092 447.5 mo
248.11 447.5 li
248.818 447.5 249.425 446.9 249.425 446.2 cv
249.425 445.5 248.717 445 248.11 445 cv
229.092 445 li
228.384 445 227.777 445.6 227.777 446.3 cv
227.777 447 228.384 447.5 229.092 447.5 cv
cp
f
229.092 458.8 mo
248.11 458.8 li
248.818 458.8 249.425 458.2 249.425 457.5 cv
249.425 456.8 248.818 456.2 248.11 456.2 cv
229.092 456.2 li
228.384 456.2 227.777 456.8 227.777 457.5 cv
227.878 458.2 228.384 458.8 229.092 458.8 cv
cp
f
46.5 388 mo
147.659 388 li
147.659 488 li
46.5 488 li
46.5 388 li
cp
1 1 1 rgb
f
109.826 461.7 mo
109.219 460.7 108.106 459.1 106.993 457.5 cv
108.814 454.9 li
110.938 454.4 113.265 453.8 114.074 453.8 cv
114.276 453.8 114.377 453.9 114.58 453.8 cv
115.389 453.7 115.794 453 116.097 452.4 cv
116.704 451.3 117.615 449.2 118.121 448 cv
118.424 447.2 117.817 446.3 116.907 446.3 cv
114.074 446.3 li
112.152 440 li
121.863 440 li
122.066 440 122.369 439.9 122.571 439.8 cv
124.393 438.6 li
123.988 448.4 118.525 457 109.826 461.7 cv
cp
93.3364 464.8 mo
91.3135 459.3 91.4146 459.5 91.3135 459.3 cv
89.0879 456 li
89.3916 454 89.9985 451.9 90.5039 451.3 cv
92.5273 451.4 98.6982 451 101.025 449.9 cv
102.239 449.3 102.846 448.3 102.744 446.9 cv
102.643 445.6 101.935 444.2 101.632 443.4 cv
101.53 442.9 100.923 441.9 99.1025 441.9 cv
98.2935 441.9 97.5854 442.1 97.0796 442.2 cv
96.7759 442.3 96.3716 442.4 96.0679 442.6 cv
95.2588 442.6 94.3481 442.4 93.8423 441.8 cv
93.7412 441.7 93.2354 440.9 92.9321 436.2 cv
92.8306 435.2 92.8306 434.3 92.8306 433.5 cv
97.0796 436 li
97.5854 436.5 99.1025 437.9 101.328 437.9 cv
102.137 437.9 102.846 437.7 103.554 437.4 cv
106.689 436 108.915 433.4 109.016 433.3 cv
109.219 433.1 109.219 432.9 109.32 432.6 cv
109.724 431.6 110.129 430.1 110.534 429.1 cv
111.04 427.4 109.623 419.7 108.106 417.7 cv
107.6 417 106.892 416.8 106.487 416.8 cv
104.869 416.8 104.464 418.9 104.262 419.7 cv
103.756 422.2 102.441 424 99.8105 424 cv
99.3052 424 98.7993 423.9 98.5967 423.9 cv
97.6865 423 94.7529 419.6 93.1343 416.7 cv
93.0332 416.4 92.7295 416 92.7295 415.8 cv
92.6284 415.6 92.6284 415.4 92.6284 415.2 cv
92.6284 413.7 93.6401 411.5 94.3481 410.2 cv
109.927 408.9 123.381 420.4 124.393 435.7 cv
121.56 437.6 li
110.534 437.6 li
109.724 437.6 109.117 438.4 109.32 439.2 cv
111.849 448 li
112.051 448.5 112.456 448.9 113.063 448.9 cv
114.984 448.9 li
114.58 449.9 114.074 450.9 113.771 451.4 cv
112.354 451.5 109.016 452.4 107.701 452.7 cv
107.499 452.7 107.296 452.8 107.195 453 cv
106.993 453.2 107.094 453 104.464 457 cv
104.161 457.4 104.161 458 104.464 458.4 cv
105.273 459.5 106.285 461 107.6 463 cv
102.947 464.7 98.0908 465.4 93.3364 464.8 cv
cp
72.8013 451.7 mo
73.2061 450 73.3071 447.4 75.1279 442.7 cv
75.229 443.7 76.4429 444.1 77.1514 443.5 cv
83.5244 438.5 li
83.7266 438.3 83.8276 438.1 83.9287 437.9 cv
86.5591 428.7 86.458 429.1 86.458 428.8 cv
86.458 428.6 86.458 428.4 86.3564 428.2 cv
82.5127 420.7 li
82.3101 420.2 81.8047 420 81.1973 420 cv
80.6919 420.1 80.186 420.5 80.085 421 cv
78.0615 430.1 li
71.9922 424.5 li
75.9375 417.1 83.0186 412 91.2124 410.4 cv
90.4028 412.3 89.4927 414.8 90.3018 416.6 cv
92.0215 420.5 96.6748 425.5 96.877 425.7 cv
97.0796 425.9 97.2817 426 97.4839 426.1 cv
98.0908 426.3 98.9004 426.4 99.7095 426.4 cv
101.53 426.4 103.149 425.8 104.363 424.6 cv
105.273 423.7 106.083 422.4 106.588 420.4 cv
107.6 423.3 108.106 427.5 108.004 428.3 cv
107.6 429.6 107.094 431.2 106.892 431.8 cv
106.386 432.3 104.565 434.1 102.441 435.1 cv
102.036 435.3 101.632 435.4 101.328 435.4 cv
100.114 435.4 99.1025 434.4 98.9004 434.3 cv
98.9004 434.3 98.7993 434.2 98.6982 434.1 cv
98.5967 434 99.0015 434.3 92.2236 430.3 cv
91.4146 429.8 90.3018 430.4 90.3018 431.4 cv
90.3018 431.5 90.3018 433.9 90.4028 436.5 cv
90.7065 441.5 91.3135 442.8 91.8193 443.5 cv
92.8306 444.7 94.4492 445.3 95.9668 445.3 cv
96.4727 445.3 96.9785 445.3 97.3828 444.9 cv
97.8887 444.7 98.6982 444.5 99.2036 444.6 cv
99.5073 445.4 100.013 446.5 100.114 447.3 cv
100.114 447.7 100.013 447.8 99.8105 447.9 cv
97.9897 448.8 91.8193 449.2 90.4028 449 cv
88.481 448.8 87.6719 451.2 87.166 453 cv
86.7612 454.5 86.5591 456 86.458 456.2 cv
86.3564 456.5 86.458 456.8 86.6602 457.1 cv
89.0879 460.7 li
90.5039 464.5 li
83.1196 462.7 76.7466 458.2 72.8013 451.7 cv
cp
70.8794 426.9 mo
77.9604 433.4 li
78.6685 434.1 79.8823 433.7 80.085 432.8 cv
81.9058 425 li
83.9287 428.9 li
81.6021 436.8 li
77.7583 439.9 li
77.6572 438.4 77.2524 438 77.1514 437.8 cv
77.1514 437.8 li
77.1514 437.8 li
76.8477 437.5 76.4429 437.3 76.0386 437.3 cv
74.8247 437.3 74.1162 438.4 72.7002 442.1 cv
71.9922 444 71.3853 446 70.9805 448.1 cv
68.0469 441.4 68.0469 433.7 70.8794 426.9 cv
cp
126.921 436.2 mo
126.921 436.2 li
126.921 436.2 li
126.112 419 110.938 405.8 93.3364 407.7 cv
78.1626 409.3 66.2261 422 66.2261 437.5 cv
66.2261 454.1 79.8823 467.5 96.5737 467.5 cv
113.771 467.5 127.629 453.3 126.921 436.2 cv
cp
0 0 0 rgb
f
556.341 262 mo
657.5 262 li
657.5 362 li
556.341 362 li
556.341 262 li
cp
1 1 1 rgb
f
588.004 319.1 mo
588.712 319.1 589.218 318.5 589.218 317.8 cv
589.218 296.6 li
626.039 296.6 li
626.039 317.9 li
626.039 318.6 626.646 319.2 627.354 319.2 cv
628.063 319.2 628.67 318.6 628.67 317.9 cv
628.67 295.4 li
628.67 294.7 628.063 294.1 627.354 294.1 cv
588.004 294.1 li
587.296 294.1 586.688 294.7 586.688 295.4 cv
586.688 317.9 li
586.79 318.6 587.296 319.1 588.004 319.1 cv
cp
0 0 0 rgb
f
597.311 325.4 mo
607.629 313.6 li
618.048 325.4 li
597.311 325.4 li
cp
608.641 310.8 mo
608.135 310.2 607.224 310.2 606.718 310.8 cv
593.567 325.8 li
593.264 326.2 593.163 326.7 593.365 327.1 cv
593.567 327.5 593.973 327.8 594.479 327.8 cv
595.895 327.8 619.06 327.8 620.678 327.8 cv
621.387 327.8 621.993 327.2 621.993 326.5 cv
621.993 326.2 621.893 325.9 621.589 325.6 cv
608.641 310.8 li
cp
f
634.233 339 mo
578.596 339 li
578.596 284 li
634.233 284 li
634.233 339 li
cp
635.549 281.5 mo
577.382 281.5 li
576.674 281.5 576.067 282.1 576.067 282.8 cv
576.067 340.3 li
576.067 341 576.674 341.6 577.382 341.6 cv
635.549 341.6 li
636.257 341.6 636.863 341 636.863 340.3 cv
636.863 282.8 li
636.763 282.1 636.155 281.5 635.549 281.5 cv
cp
f
428.881 262 mo
530.04 262 li
530.04 362 li
428.881 362 li
428.881 262 li
cp
1 1 1 rgb
f
497.973 339 mo
460.038 339 li
460.038 291.5 li
461.454 291.5 496.051 291.5 497.973 291.5 cv
497.973 339 li
cp
466.31 286.3 mo
466.31 285 467.321 284 468.637 284 cv
489.172 284 li
490.486 284 491.498 285 491.498 286.3 cv
491.498 289 li
466.31 289 li
466.31 286.3 li
cp
508.088 289 mo
507.684 289 494.533 289 494.128 289 cv
494.128 286.3 li
494.128 283.6 491.902 281.5 489.272 281.5 cv
468.637 281.5 li
465.905 281.5 463.78 283.7 463.78 286.3 cv
463.78 289 li
463.376 289 450.226 289 449.82 289 cv
449.112 289 448.506 289.6 448.506 290.3 cv
448.506 291 449.112 291.6 449.82 291.6 cv
457.407 291.6 li
457.407 340.4 li
457.407 341.1 458.015 341.7 458.723 341.7 cv
499.187 341.7 li
499.895 341.7 500.501 341.1 500.501 340.4 cv
500.501 291.5 li
508.088 291.5 li
508.797 291.5 509.403 290.9 509.403 290.2 cv
509.302 289.6 508.695 289 508.088 289 cv
cp
0 0 0 rgb
f
467.625 297.8 mo
466.917 297.8 466.31 298.4 466.31 299.1 cv
466.31 331.6 li
466.31 332.3 466.917 332.9 467.625 332.9 cv
468.333 332.9 468.939 332.3 468.939 331.6 cv
468.939 299 li
468.839 298.3 468.231 297.8 467.625 297.8 cv
cp
f
478.954 297.8 mo
478.246 297.8 477.64 298.4 477.64 299.1 cv
477.64 331.6 li
477.64 332.3 478.246 332.9 478.954 332.9 cv
479.662 332.9 480.27 332.3 480.27 331.6 cv
480.27 299 li
480.27 298.3 479.662 297.8 478.954 297.8 cv
cp
f
490.386 297.8 mo
489.678 297.8 489.07 298.4 489.07 299.1 cv
489.07 331.6 li
489.07 332.3 489.678 332.9 490.386 332.9 cv
491.094 332.9 491.7 332.3 491.7 331.6 cv
491.7 299 li
491.6 298.3 490.992 297.8 490.386 297.8 cv
cp
f
301.42 262 mo
402.579 262 li
402.579 362 li
301.42 362 li
301.42 262 li
cp
1 1 1 rgb
f
337.635 287.1 mo
331.667 287.1 326.913 292.9 326.913 297.7 cv
326.913 298.4 327.52 299 328.228 299 cv
328.936 299 329.542 298.4 329.542 297.7 cv
329.542 294.1 333.387 289.6 337.737 289.6 cv
338.445 289.6 339.052 289 339.052 288.3 cv
338.849 287.7 338.242 287.1 337.635 287.1 cv
cp
0 0 0 rgb
f
352.405 332.3 mo
355.743 329 359.081 325.7 362.318 322.3 cv
362.824 321.8 362.824 321 362.318 320.5 cv
361.813 320 361.003 320 360.497 320.5 cv
357.361 323.8 353.922 327.2 350.584 330.5 cv
350.078 331 350.078 331.8 350.584 332.3 cv
350.786 332.5 351.191 332.7 351.494 332.7 cv
352.101 332.8 352.405 332.3 352.405 332.3 cv
cp
f
365.252 317.4 mo
365.758 317.9 366.566 317.8 367.072 317.3 cv
367.68 316.6 368.388 315.8 368.995 315.1 cv
369.399 314.6 369.399 313.8 368.792 313.3 cv
368.286 312.9 367.478 312.9 366.972 313.5 cv
366.364 314.2 365.758 314.9 365.15 315.6 cv
364.645 316.2 364.746 317 365.252 317.4 cv
cp
f
323.675 297.1 mo
323.675 289.9 329.644 284 336.927 284 cv
343.098 284 346.538 286.5 350.381 294.1 cv
350.887 295 352.202 295 352.607 294.1 cv
356.451 286.5 359.789 284 366.062 284 cv
373.345 284 379.313 289.9 379.313 297.1 cv
379.313 303.3 376.379 310.1 370.512 317.9 cv
365.353 324.7 358.373 331.7 351.494 338.5 cv
344.615 331.7 337.635 324.8 332.476 317.9 cv
326.609 310.1 323.675 303.3 323.675 297.1 cv
cp
380.628 339 mo
354.529 339 li
367.983 325.7 381.842 311.5 381.842 297.1 cv
381.842 288.5 374.761 281.5 366.062 281.5 cv
358.677 281.5 354.833 285 351.494 290.9 cv
348.156 285.1 344.312 281.5 336.927 281.5 cv
328.228 281.5 321.146 288.5 321.146 297.1 cv
321.146 305.2 325.598 312.9 330.453 319.4 cv
335.41 326 341.985 332.6 348.459 339 cv
322.461 339 li
321.753 339 321.146 339.6 321.146 340.3 cv
321.146 341 321.753 341.6 322.461 341.6 cv
380.628 341.6 li
381.336 341.6 381.943 341 381.943 340.3 cv
381.842 339.6 381.235 339 380.628 339 cv
cp
f
173.96 262 mo
275.119 262 li
275.119 362 li
173.96 362 li
173.96 262 li
cp
1 1 1 rgb
f
197.935 339 mo
197.024 339 196.215 338.2 196.215 337.3 cv
196.215 329 li
251.853 329 li
251.853 337.3 li
251.853 338.2 251.043 339 250.133 339 cv
197.935 339 li
cp
197.935 295.3 mo
250.133 295.3 li
251.043 295.3 251.853 296.1 251.853 297 cv
251.853 326.5 li
196.215 326.5 li
196.215 297 li
196.215 296 197.024 295.3 197.935 295.3 cv
cp
250.133 292.8 mo
248.11 292.8 li
248.11 282.8 li
248.11 282.1 247.503 281.5 246.795 281.5 cv
246.086 281.5 245.479 282.1 245.479 282.8 cv
245.479 292.8 li
202.588 292.8 li
202.588 282.8 li
202.588 282.1 201.981 281.5 201.273 281.5 cv
200.565 281.5 199.958 282.1 199.958 282.8 cv
199.958 292.8 li
197.935 292.8 li
195.608 292.8 193.687 294.7 193.687 297 cv
193.687 301.2 193.687 332.5 193.687 337.5 cv
193.687 339.7 195.507 341.5 197.732 341.5 cv
197.935 341.5 li
199.958 341.5 248.312 341.5 250.335 341.5 cv
252.561 341.5 254.382 339.7 254.382 337.5 cv
254.382 337.3 li
254.382 334 254.382 298.2 254.382 297 cv
254.382 294.6 252.459 292.8 250.133 292.8 cv
cp
0 0 0 rgb
f
210.782 301.5 mo
216.042 301.5 220.291 305.7 220.291 310.9 cv
220.291 316.1 216.042 320.3 210.782 320.3 cv
205.522 320.3 201.273 316 201.273 310.9 cv
201.273 305.8 205.522 301.5 210.782 301.5 cv
cp
210.782 322.8 mo
217.357 322.8 222.82 317.5 222.82 310.9 cv
222.82 304.3 217.357 299 210.782 299 cv
204.207 299 198.744 304.3 198.744 310.9 cv
198.744 317.5 204.105 322.8 210.782 322.8 cv
cp
f
237.286 301.5 mo
242.546 301.5 246.795 305.7 246.795 310.9 cv
246.795 316.1 242.546 320.3 237.286 320.3 cv
232.025 320.3 227.777 316.1 227.777 310.9 cv
227.777 305.7 232.126 301.5 237.286 301.5 cv
cp
237.286 322.8 mo
243.861 322.8 249.324 317.5 249.324 310.9 cv
249.324 304.3 243.962 299 237.286 299 cv
230.609 299 225.248 304.3 225.248 310.9 cv
225.248 317.5 230.71 322.8 237.286 322.8 cv
cp
f
205.117 312.8 mo
211.389 312.8 li
212.097 312.8 212.704 312.2 212.704 311.5 cv
212.704 305.2 li
212.704 304.5 212.097 303.9 211.389 303.9 cv
210.681 303.9 210.074 304.5 210.074 305.2 cv
210.074 310.2 li
205.016 310.2 li
204.308 310.2 203.701 310.8 203.701 311.5 cv
203.802 312.2 204.409 312.8 205.117 312.8 cv
cp
f
231.621 312.8 mo
237.994 312.8 li
238.702 312.8 239.309 312.2 239.309 311.5 cv
239.309 305.2 li
239.309 304.5 238.702 303.9 237.994 303.9 cv
237.286 303.9 236.679 304.6 236.679 305.3 cv
236.679 310.3 li
231.621 310.3 li
230.913 310.3 230.306 310.9 230.306 311.6 cv
230.407 312.2 230.913 312.8 231.621 312.8 cv
cp
f
46.5 262 mo
147.659 262 li
147.659 362 li
46.5 362 li
46.5 262 li
cp
1 1 1 rgb
f
118.121 339 mo
114.681 339 111.748 336.2 111.748 332.7 cv
111.748 329.2 114.58 326.4 118.121 326.4 cv
121.661 326.4 124.494 329.2 124.494 332.7 cv
124.494 336.2 121.56 339 118.121 339 cv
cp
87.2671 323 mo
86.7612 322.2 86.0532 321.5 85.1426 320.9 cv
86.1543 317.8 li
92.8306 321.2 li
87.2671 323 li
cp
81.501 330.9 mo
79.0732 330.9 77.1514 329 77.1514 326.6 cv
77.1514 324.2 79.0732 322.3 81.501 322.3 cv
83.9287 322.3 85.8506 324.2 85.8506 326.6 cv
85.8506 329 83.9287 330.9 81.501 330.9 cv
cp
83.6255 313.7 mo
84.0298 312.3 84.0298 310.7 83.6255 309.3 cv
86.6602 307.7 li
84.6367 314.2 li
83.6255 313.7 li
cp
75.1279 317.8 mo
71.6885 317.8 68.7549 315 68.7549 311.5 cv
68.7549 308 71.5874 305.2 75.1279 305.2 cv
78.6685 305.2 81.501 308 81.501 311.5 cv
81.501 315 78.5674 317.8 75.1279 317.8 cv
cp
89.5938 290.3 mo
90.4028 289.5 91.5156 289 92.6284 289 cv
95.0562 289 96.9785 290.9 96.9785 293.3 cv
96.9785 295.7 95.0562 297.6 92.6284 297.6 cv
91.5156 297.6 90.4028 297.2 89.5938 296.3 cv
87.9751 294.7 87.9751 291.9 89.5938 290.3 cv
cp
118.121 284 mo
121.56 284 124.494 286.8 124.494 290.3 cv
124.494 293.8 121.661 296.6 118.121 296.6 cv
114.58 296.6 111.748 293.8 111.748 290.3 cv
111.748 286.8 114.58 284 118.121 284 cv
cp
115.187 311.2 mo
116.3 311.2 117.413 311.6 118.222 312.5 cv
119.941 314.2 119.941 316.9 118.222 318.6 cv
117.413 319.4 116.3 319.9 115.187 319.9 cv
112.759 319.9 110.837 318 110.837 315.6 cv
110.837 313.1 112.759 311.2 115.187 311.2 cv
cp
118.121 324 mo
115.086 324 112.456 325.5 110.837 327.8 cv
99.4063 321.9 li
109.219 318.9 li
111.444 322.9 116.907 323.6 120.042 320.4 cv
122.673 317.8 122.673 313.4 120.042 310.8 cv
117.312 308.1 112.961 308.1 110.331 310.8 cv
108.814 312.3 108.106 314.4 108.409 316.5 cv
96.1689 320.3 li
86.8623 315.5 li
89.7959 306.2 li
110.736 295.4 li
112.354 297.7 114.984 299.2 118.02 299.2 cv
122.875 299.2 126.921 295.3 126.921 290.4 cv
126.921 285.5 122.976 281.6 118.02 281.6 cv
112.051 281.6 107.701 287.4 109.623 293.1 cv
90.9087 302.8 li
91.7183 300.1 li
95.8657 300.7 99.5073 297.5 99.5073 293.4 cv
99.5073 291.6 98.7993 289.9 97.4839 288.6 cv
94.7529 285.9 90.4028 285.9 87.7729 288.6 cv
84.5356 291.8 85.2437 297.1 89.29 299.3 cv
87.6719 304.4 li
82.6138 307 li
81.0962 304.5 78.2637 302.8 75.0269 302.8 cv
70.1714 302.8 66.125 306.7 66.125 311.6 cv
66.125 316.5 70.0698 320.4 75.0269 320.4 cv
78.2637 320.4 80.9951 318.7 82.6138 316.2 cv
83.8276 316.8 li
82.8159 320.1 li
78.5674 319.3 74.6221 322.5 74.6221 326.8 cv
74.6221 330.6 77.6572 333.6 81.501 333.6 cv
85.8506 333.6 89.0879 329.7 88.2788 325.5 cv
95.9668 323.1 li
109.623 330 li
107.701 335.7 112.051 341.5 118.02 341.5 cv
122.875 341.5 126.921 337.6 126.921 332.7 cv
126.921 327.9 122.976 324 118.121 324 cv
cp
0 0 0 rgb
f
556.341 136 mo
657.5 136 li
657.5 236 li
556.341 236 li
556.341 136 li
cp
1 1 1 rgb
f
610.36 189 mo
610.36 186.2 li
610.36 185.3 609.349 184.6 608.438 185.1 cv
593.871 193 li
594.275 192 594.781 190.7 595.591 189.4 cv
598.423 184.9 602.773 182 608.438 180.6 cv
608.641 180.6 608.943 180.6 608.943 180.6 cv
609.651 180.7 610.36 180.1 610.36 179.4 cv
610.36 176.6 li
620.476 182.8 li
610.36 189 li
cp
623.511 181.7 mo
609.753 173.2 li
608.943 172.7 607.831 173.3 607.831 174.3 cv
607.831 178.2 li
599.94 180.1 595.691 184.7 593.567 188.1 cv
591.241 191.9 590.735 195.2 590.735 195.3 cv
590.634 196.3 591.646 197.1 592.556 196.6 cv
607.831 188.3 li
607.831 191.3 li
607.831 192.3 608.943 192.9 609.753 192.4 cv
623.511 183.9 li
624.32 183.3 624.32 182.2 623.511 181.7 cv
cp
0 0 0 rgb
f
606.415 213 mo
591.039 213 578.596 200.7 578.596 185.5 cv
578.596 170.3 591.039 158 606.415 158 cv
621.791 158 634.233 170.3 634.233 185.5 cv
634.233 200.7 621.791 213 606.415 213 cv
cp
606.415 155.5 mo
589.622 155.5 576.067 168.9 576.067 185.5 cv
576.067 202.1 589.622 215.5 606.415 215.5 cv
623.207 215.5 636.763 202.1 636.763 185.5 cv
636.763 168.9 623.207 155.5 606.415 155.5 cv
cp
f
606.415 206.8 mo
594.579 206.8 584.868 197.3 584.868 185.5 cv
584.868 173.7 594.479 164.2 606.415 164.2 cv
618.352 164.2 627.962 173.7 627.962 185.5 cv
627.962 197.3 618.25 206.8 606.415 206.8 cv
cp
606.415 161.8 mo
593.163 161.8 582.339 172.5 582.339 185.6 cv
582.339 198.7 593.163 209.4 606.415 209.4 cv
619.667 209.4 630.49 198.7 630.49 185.6 cv
630.49 172.4 619.667 161.8 606.415 161.8 cv
cp
f
428.881 136 mo
530.04 136 li
530.04 236 li
428.881 236 li
428.881 136 li
cp
1 1 1 rgb
f
506.773 170.5 mo
502.828 170.5 453.563 170.5 451.136 170.5 cv
451.136 165.5 li
480.27 165.5 li
480.978 165.5 481.585 164.9 481.585 164.2 cv
481.585 163.5 480.978 162.9 480.27 162.9 cv
451.136 162.9 li
451.136 157.9 li
506.773 157.9 li
506.773 170.5 li
cp
503.03 213 mo
454.979 213 li
454.979 173 li
503.03 173 li
503.03 213 li
cp
508.088 155.5 mo
449.922 155.5 li
449.214 155.5 448.606 156.1 448.606 156.8 cv
448.606 171.8 li
448.606 172.5 449.214 173.1 449.922 173.1 cv
452.451 173.1 li
452.451 214.4 li
452.451 215.1 453.058 215.7 453.766 215.7 cv
504.346 215.7 li
505.054 215.7 505.66 215.1 505.66 214.4 cv
505.66 173 li
508.189 173 li
508.897 173 509.505 172.4 509.505 171.7 cv
509.505 156.7 li
509.302 156.1 508.695 155.5 508.088 155.5 cv
cp
0 0 0 rgb
f
465.602 180 mo
489.88 180 li
490.892 180 491.7 180.8 491.7 181.8 cv
491.7 182.8 490.892 183.6 489.88 183.6 cv
465.602 183.6 li
464.59 183.6 463.78 182.8 463.78 181.8 cv
463.78 180.8 464.59 180 465.602 180 cv
cp
465.602 186 mo
489.88 186 li
492.206 186 494.229 184.1 494.229 181.7 cv
494.229 179.4 492.308 177.4 489.88 177.4 cv
465.602 177.4 li
463.274 177.4 461.252 179.3 461.252 181.7 cv
461.252 184.1 463.174 186 465.602 186 cv
cp
f
301.42 136 mo
402.579 136 li
402.579 236 li
301.42 236 li
301.42 136 li
cp
1 1 1 rgb
f
379.313 213 mo
323.675 213 li
323.675 158 li
379.313 158 li
379.313 213 li
cp
380.628 155.5 mo
322.461 155.5 li
321.753 155.5 321.146 156.1 321.146 156.8 cv
321.146 214.3 li
321.146 215 321.753 215.6 322.461 215.6 cv
380.628 215.6 li
381.336 215.6 381.943 215 381.943 214.3 cv
381.943 156.8 li
381.842 156.1 381.235 155.5 380.628 155.5 cv
cp
0 0 0 rgb
f
333.792 204.3 mo
369.197 204.3 li
369.905 204.3 370.512 203.7 370.512 203 cv
370.512 186.8 li
370.512 186.1 369.905 185.5 369.197 185.5 cv
368.489 185.5 367.882 186.1 367.882 186.8 cv
367.882 201.8 li
335.106 201.8 li
335.106 169.3 li
351.595 169.3 li
352.304 169.3 352.91 168.7 352.91 168 cv
352.91 167.3 352.304 166.7 351.595 166.7 cv
333.792 166.7 li
333.083 166.7 332.476 167.3 332.476 168 cv
332.476 203 li
332.578 203.7 333.083 204.3 333.792 204.3 cv
cp
f
366.668 164.3 mo
370.107 164.3 373.041 167.1 373.041 170.6 cv
373.041 174.1 370.209 176.9 366.668 176.9 cv
363.128 176.9 360.295 174.1 360.295 170.6 cv
360.295 167.1 363.229 164.3 366.668 164.3 cv
cp
366.668 179.3 mo
371.523 179.3 375.57 175.4 375.57 170.5 cv
375.57 165.6 371.625 161.7 366.668 161.7 cv
361.711 161.7 357.766 165.6 357.766 170.5 cv
357.766 175.4 361.813 179.3 366.668 179.3 cv
cp
f
173.96 136 mo
275.119 136 li
275.119 236 li
173.96 236 li
173.96 136 li
cp
1 1 1 rgb
f
224.034 213 mo
208.658 213 196.215 200.7 196.215 185.5 cv
196.215 170.3 208.658 158 224.034 158 cv
239.41 158 251.853 170.3 251.853 185.5 cv
251.853 200.7 239.41 213 224.034 213 cv
cp
224.034 155.5 mo
207.242 155.5 193.687 168.9 193.687 185.5 cv
193.687 202.1 207.242 215.5 224.034 215.5 cv
240.826 215.5 254.382 202.1 254.382 185.5 cv
254.382 168.9 240.826 155.5 224.034 155.5 cv
cp
0 0 0 rgb
f
224.034 206.8 mo
212.198 206.8 202.487 197.3 202.487 185.5 cv
202.487 173.7 212.097 164.2 224.034 164.2 cv
235.971 164.2 245.581 173.7 245.581 185.5 cv
245.581 197.3 235.87 206.8 224.034 206.8 cv
cp
224.034 161.8 mo
210.782 161.8 199.958 172.5 199.958 185.6 cv
199.958 198.7 210.782 209.4 224.034 209.4 cv
237.286 209.4 248.11 198.7 248.11 185.6 cv
248.11 172.4 237.286 161.8 224.034 161.8 cv
cp
f
224.034 174.3 mo
223.326 174.3 222.719 174.9 222.719 175.6 cv
222.719 185.6 li
212.603 185.6 li
211.895 185.6 211.288 186.2 211.288 186.9 cv
211.288 187.6 211.895 188.2 212.603 188.2 cv
224.034 188.2 li
224.742 188.2 225.349 187.6 225.349 186.9 cv
225.349 175.5 li
225.349 174.8 224.742 174.3 224.034 174.3 cv
cp
f
46.5 136 mo
147.659 136 li
147.659 236 li
46.5 236 li
46.5 136 li
cp
1 1 1 rgb
f
118.121 195.5 mo
117.413 195.5 116.806 196.1 116.806 196.8 cv
116.806 209.3 li
105.375 209.3 li
104.768 205.1 101.025 201.8 96.5737 201.8 cv
92.1226 201.8 88.3799 205.1 87.7729 209.3 cv
76.3418 209.3 li
76.3418 196.8 li
76.3418 196.1 75.7349 195.5 75.0269 195.5 cv
71.5874 195.5 68.6538 192.7 68.6538 189.2 cv
68.6538 185.7 71.4863 182.9 75.0269 182.9 cv
75.7349 182.9 76.3418 182.3 76.3418 181.6 cv
76.3418 169.3 li
88.9868 169.3 li
89.6948 169.3 90.3018 168.7 90.3018 168 cv
90.3018 164.6 93.1343 161.7 96.6748 161.7 cv
100.215 161.7 103.048 164.5 103.048 168 cv
103.048 168.7 103.655 169.3 104.363 169.3 cv
117.008 169.3 li
117.008 181.8 li
117.008 182.5 117.615 183.1 118.323 183.1 cv
121.762 183.1 124.696 185.9 124.696 189.4 cv
124.696 192.9 121.56 195.5 118.121 195.5 cv
cp
119.334 180.6 mo
119.334 168 li
119.334 167.3 118.728 166.7 118.02 166.7 cv
105.375 166.7 li
104.768 162.5 101.025 159.2 96.5737 159.2 cv
92.1226 159.2 88.3799 162.5 87.7729 166.7 cv
75.1279 166.7 li
74.4199 166.7 73.813 167.3 73.813 168 cv
73.813 180.6 li
69.564 181.2 66.2261 184.9 66.2261 189.3 cv
66.2261 193.7 69.564 197.4 73.813 198 cv
73.813 210.6 li
73.813 211.3 74.4199 211.9 75.1279 211.9 cv
88.9868 211.9 li
89.6948 211.9 90.3018 211.3 90.3018 210.6 cv
90.3018 207.2 93.1343 204.3 96.6748 204.3 cv
100.215 204.3 103.048 207.1 103.048 210.6 cv
103.048 211.3 103.655 211.9 104.363 211.9 cv
118.323 211.9 li
119.031 211.9 119.638 211.3 119.638 210.6 cv
119.638 197.9 li
123.887 197.3 127.225 193.6 127.225 189.2 cv
126.921 184.8 123.583 181.2 119.334 180.6 cv
cp
0 0 0 rgb
f
83.9287 170.5 mo
80.085 170.5 li
79.3765 170.5 78.7695 171.1 78.7695 171.8 cv
78.7695 178 li
78.7695 178.7 79.3765 179.3 80.085 179.3 cv
80.793 179.3 81.3999 178.7 81.3999 178 cv
81.3999 173 li
83.9287 173 li
84.6367 173 85.2437 172.4 85.2437 171.7 cv
85.2437 171.1 84.6367 170.5 83.9287 170.5 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Zee Abbasi) ()
%%Title: (Line_8-Template_051031548779.eps)
%%CreationDate: 12/9/2022 6:01 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l`OPaE[CKfJDT8_0i7R;*UgXRedMa*%nX58^7i^;p:t>I1e!b]/Wp/]fi.M7'5PQ5p\kY&`Ngo01G8'4(V_r?F5J_tj0E.U
%+8sU9GMg16nuK77IerL4rl*^>e'[T4hKus%nrM;dkF__#+8qP0IeiipgLg,mpOT4'4rk$u<K^%+';)sbp&1B3Dnl1=p[;G%rq>*%
%G@/+3s6VK-*e*_OmG2-`r3cIajk]t0qWk?BrTi:gY@#$?T5r5@5AsoAq!.1s0AaBloCBN*IXb0r^>R+_pT9r3*T5h>O"^M1NJN&V
%qRc4WhP>'Hs.`s#g!fO=7EXY's7"4`^]*NQn(thWm]1PMs8*n5l'"@#g@_XUJ+HS<+J&Jj0$3W>q;^;;fDkL6qldc`CYnGZo$?e(
%p^UU-06_pE%4'j%X=b;]4:XIF=.1<%j6$aKD`<%@0DmohQ+O'Jq4#-EL21=:d#YfmjNlLS8<5A'aj53qG_:MCqTUs+^\mLW^L1s"
%r@I'ukP.PM7t3)[e)Y<.8'aiBpJLCJr'L[=rI'1VfDkEll[SlPh1'_Ko#oYRm9;c"s4slmqL@RqNFUe2;X\5cpGpK4J,eX)?b_'i
%GAk7m:>VRKEU!5mbBI=-r`Yn:p[dD1Qi+^uLW0;d(4Z5PrNBRX-R8<?fAGV0r8MT8L]-VD^45_j07WR3K.ktJrq`,9Du]OeJ)q^N
%]Zd+&G;^JdngaKAC/s-X;4;tsH#.repqkTFqEdu,NA9q9r^I+S?bcX+f3c5i`QqIIFM=Opn%n,kL@:bJs6@cjH:P]=qLA9fp[e%W
%QiDP^!-oUBIJ<T?^S6t-GkfJ24?2d/nlN>ZkAS+_GkVCakZdt4.Pp"b9TH=6rS%7^J+.C)`V89BF&DGG?bMX:^3Y]t5QC)RoPa>Z
%^\R_Qq;\*\J+rn#J,]/6hL5CVc^oO[mN5fnrR]Z)^3fT\55COhJ,PH.6[nt'h9S&Nn,E%Zb?*,Ir/N]00>IAGO+0ZTnso/Uhs"M0
%>lKufr?qO3a.+dr=EM[Q5c)farlaW2hgKS23$^07IX1\F?G?I%@ljXZY@#"lq>QD(Lq`oKX+-8H]TcL+Hf),il;iYe2tE,V'&22H
%ijUa(rTU(0p%#_E(@D"qm?c^"n+uY<k#M12?2j+JDuT:_f3`t'-9=7^inki'GMg)_s7WYRl>=98rnDq:qqH>`^>:M0)q^eV7t1K/
%T(=&d,160Q(Q^l\a6if`jk!jhp$;?*^\R&r?@AdP&,\RCoE49*e0oX^\,N'O?N1]UH[Nh_V!IduHN*#-UATIJ>6!/3^\ZQKhnAl!
%;(qtEroO$\?N6%rLsPro?bM`$q!M5@J+_X`rOq($q$+joh66hRjYmaGjbm'\h/E0W(5VP`nFN:Pp8+J<4ahZpnRq;tIef814hnN(
%g#'Jkqso`J$GSK]XK71^jhl+ArS$)V00fL'+$T_kJ,fGQ"97JX*pjM#icoK+*%t2^-+,SX8l*o'HCg1&Em6bNr%pX]cc]0XBr0#,
%rj4ePkOkdQf%TDf:Hnf[5-</ro6.LrC27[neXj3^rTL6D?@2"5YPt=^oOn,JIkctG7NQ]ZdDm)>4;gr8_g")2cXWi?VcX\?bUQ,P
%A'VXGGVYo:L\YaMT.f>bFf_t2elGpr2'./T1g=`YOlND\%rsdrj1--_56#H4=>-8e_`gY4A2t!Xb+nLj49gj\a,7e7H`G-LT?7+]
%YiD,lcS*<H5Frp_,CT@^r3N<sd8<)Pe/p[(ooL5uP5\>!pu+Sdr1UmMJ(l,0IXLJS0o,Dr;=-RHpd:*,eDgM\)C:58.ABggBU*5)
%=,rMD%F+H#4\IFr[q*l=/J"8d:\$l%SmR^-qPBX8&WIuer0_8e,'p+Rc`!//03W,=;"RG";l9O-);#Je=aNnliu1GcK0H8WSr2BM
%q"uqu4ed@tHV.tD0d\bSkTDllN#0u3cp]6;O`X*1AGSi=PR^<!V.Zs!W1+:^-e2%nUUHJ?T(6CFU&R]FVJ?&%5/d!8NotDpn:Ndh
%#gINQ6q?@f;*JsK+#quLKA'1Klp#`RO$;\iUrW:X*p^9Wdc9e0nbX@Lh;_$*-Tuq<s8N&Gj)<<n:IV$@V`msNA]b"&0O#iW[IT"E
%apYIU1A/bN$+u.sf!&?#$dg?Tm$9*sj?^/p6%)Y1:W?P0Zkq4=-1o;tdjV@t<3&^A.SkPl<cPf.&B$<jo&QNJT(BJB/R,tT_j$(F
%;*?.m7Pr9=2#cARY#ddXluG4<FAU_j*Hfaj5GW_u%idMH8B/TgBr'X_TAkqRJ'24!%EED=HN0l&%mBo=om"k4TCBVQg1.E5o-c^N
%4g%OsVA@Snl85o3N[1Y_F^$`j[U^#e(OKa4/rPI:bquE[*l;g;k*^ABFKh7iEY?\l'Ur3#PEY,pm&(Y.5?6*TYb3\gU$nRMh^*A4
%O)7^M^`dqL#II_Sd\H"dBXpFTD2EF_TQYtVG#5A"H>PX7Frkma"uG)3\k9@E3tRCGs/?d.Xtbpq)T1aNIoBEVk)"fdoh<%N)&)MM
%[V'aVSBg!<eUP-;DGU:h-&hkqIGfALiT&nlXbV/2&,Du]qD!ctpegE"qSsZ*j%$TWcd\_*PSYuZ4F?Tt(;o[:]dPP^o,#`FaerK$
%)4F78o^'Q'B/2l@/E6V2I?pKG%keuq4Zo!<5,FnJ:`e'6(G]/8A8Ejoem3[u+sZf+nm"ZU;_a**=NaFYIZYB<OHoR.b`O8.>GfW8
%-7aNW45^\)i47(;Vd_Y;YoneF^a_,PEKi9jYrnW$/:B#AaHC6tA84'.<JoE[BcLTu4I>mB^mY0iB)Im]haIX'g(6u?73`dH*`23s
%B2,HK:7WafI50-)BFt)CWDTs7QIHE.)"H)9O_)$G/:kpT@.&j$2:*q_;AIN\<4PN(a@,8Y4Vi=&csEHaE6&FHUkMsEM?=2tn:6te
%716^VqHq5c[U.rZ[@:OmGg>?;*Bpknbi5YB9r]'99tS_9j8\g4g?GQ6UKii6s3a*,8,ViGpdd&ei->6*O(YbE4T"@&iF<A^nY=h:
%5WJ'3L\1AhD>uEbp]lfL#EA9ZNUd=6o'(JuK1>Zh7eq[+q1D04F?NNse@RsAip$?d5<DX?0DYYFnULHA&`8XSB*'ulpUWi15FRNt
%8B,>&s%#YL1On=)q5taZH)!_L[_DN9rB:*[mM&d2EnAb<+hB6XE?k1C4l%L]n#k1;Sm&fa^\sXo1Sg(tqcuDR94$Y!cL'NeS-B8T
%\KM.OldKJcGMq,)O2hpp+2AP#i!IO4:E\tU*]s@@NKH@$Y/=>A;^BDELYqQVShr3ErU74,DB<AW]Vjpu<lum!5<hAC[?TcO<_QX?
%q.R9,%@GI$`pIc'5^Gnp=VPg1.&N-BV\U7u(<?%$j$.?U5(PF,oUB1I@l?[5lWh3YjblWu%q.,_3;,\naP39Vm[qRS*osB7OP@k_
%I``J]EF8NXncWF)aAYfY`eHo%M\op5T<QR?M3U8)f8S,XGSTUeeCFXbXf3jBN`Obo5Oa^E.Bu[s+-_BLeII,$V(49rZqk5nJVH<c
%YD*@Ldu*A73H=WS7XkB$mA`DI#sRbRq!fi>bR\GZ&PM<[U`_7gj[jPiJG[,_<Fli[LRTUeXtZc&8`g3'.F*2[n>PB3,2?i.q=:/M
%A'%M@"?]d!TJ60@eAD3=iVk^o3]*\>RF0@*KRQ8:\XUtTEuCkGo7,A5c>!Wg7e<PshH+BS#6#>gV$R11Y2.7:r'h;b!F3>=3S\C'
%,*PdJi:h&0IO\6`VRi@((6oI`GM?lS:0@.W/j8DZ+oUqi%b(Tq/\5(YO\E>b3'+f$ga[^-KWdPJC>IKU+1teNX7:Kh/@hh5N%:@g
%-J+Drn*BcaP@'SM?$n:dN*16J$imksnufr3PkPJSEQNW/\c*c(H]Tbn3@rSdgd8N'7GL-fJP/I:P>N]^Tf@MIjKgEUO%i)T&f4=`
%4F+"W,8R%!q6cE_ap9Xm";i:fesS3rQ83g,PhBJ:1PHbWH)r@r2*N6Mi#kDfWO'as)1VdHi1gO0*s"'W0l-be?i)\3W/DWdnBA]M
%"q'jarsrhZWt$D2;F[q--Z9!KB1V)$n9B[>##I"\@_':`<WFZl2Jh[aFmZ<>I=Sc^YgO2\oY[?M*mZo#i2$Fb&.Gk<+<r"@q]:5X
%X5E48%3j8>E<^H"aMrsH49iTm?s\/'#0:!b31_L^R83a4oqOZR6'*R^0?YV\@rh?q8`@NS0[d_^RI[IRn04ii'Q.?JFtrfMUahP$
%EH_fkmI1X=58!\<Yg8)+OEJ0i0Vn<!+JG\Aj@k;H)M9pc@2al5ShV5VKYa"k&5-R?,r$\9S3`(2J%3*4H$:&l]$#KB[-uGJB]&LC
%W"Tf31Sqp7(U]ONpqT+-kcK,;;XGjln^I01VJWMlkXB46H:ek%Z+N5FZgs0?L>'i1ZIb=*n.56EoDQh2SF?!3okER_O,ehaFH<9o
%P=ATc:OA.X3)g?J.S>E@e'_)/5KD0L54]C?Fai6jO'I?6dG+,/&Ur&P%T[ghc(LB"S@f2mS372qh5th7HDu*uhUgW-?*<j,'W:jR
%om7RuSI^,B7/uH=rtYS2^&ILVf"_6Err,.Dhu?'>s!n$+h-]%;_gao=^AOL6r=TS;9&B*o)b;&Vn*Vh]@_]+]3-XmYiO&b%[s[_D
%:YpTqm&O2914Aut2g<$`.+Y"SIJ</Fe-t))pd0m`^3KMFec1m.aZA-/I`[2_rtT2EDtlQegjen.p@:m!qQG$,j=8G*^A;gpd;'T%
%<FulE;.[PcO2Opr?p11jes,-6p\->KYNqZ/.GZ)BpU_c@i/eWF7EKU_=nqF=]'lr5h2/Cq9%A+:L:i$^047ELREJlOpIS?Gh(,'U
%gV)f[nWpLT+e1L7I2+Vb=4b,6X"K!QT1#I2eT*=c1])I`rfG\'Y/jrT],u@44RZJi0/u`Fp1pM:4RPY--Tc7rq_D":gnDdLH<m[p
%LdEUpD[V0Fk.3)6,ittJSk)9hNB?t,;cHEXiuW"9?'WIJ*6Z%:pMC"a>c'_lQWYsgb?aN05i1@/Gs?$9GurIC&bG0<>*L?`f[!1a
%ict1,p"UKq$6!)u)rLO@9rm-I-Jqk<Kq6f`="=.YQUl2fSto0HCt:*4]9R^N?-(/%B@X"8mcWgu[=gJFk.PH.FB@Qub,Qci\I[7K
%1CDRs7!\GG+!qGDP^;,CD^-:DVoL<Rh\@%5++F$@/!pn=>31&*=j[\VMd07=^AP/1h.jQgS+Z5Nd_5R?iRHu^MX&H,r_,)GH^4%I
%9:7?2EZ+,ObN7dugNbRPP.\N@dBUP_^.MOR/'\h&:'<=X`LE$N\dZ)*p@seRe'T,!k?U+/Tp?+;=lk:ZkE9Ppi@MlF(3B@nEbD+p
%jjhOfXEYI+j)X^4;bh6d]S[+[Npi*Q!:"k#V8_66>e5[&Kn=Ls=-MB'>01uLAfX\E-_9AFo]o9WJ8biCcC9_kL)FHE*'+ICQ]*X]
%8*5.XijXmm\N-ohG9`MK<Bg?K`<:Xp)!rf<Z+N,d=[+\4pipd9([Q^2HeQaB=e_[\LYIks'&JFlTi"2ka=qs^Pu\o;@QMSDQM2s4
%n[q;1LdH"M771H):e"`Rag.C9^%1U4"a3$jc_^G$MeRFF4%f6IL;N2$-F!+>[\B2IG]\'!I/D=kjR;Sfs6fV`9E+in=ZX9BrURSP
%?\/X$QB2V9r6(G4P!?VVju6Y[q^4!_<^1n9FV^>frr0\2^]GdVV=ap/k7GnE@$A[q*V,f+nqaRi\XceCnX*iAns-+JZ&tJ+W0g9/
%7eE"`kTdc-OdRVUZ"Ua572=!Mf+uFbM3Y8_/;`B.ONJ-_o45!J&9Be!Fru<I/bD/l-886b`/Fk+f(>3<8OPl<]M9)&[G'WT)p3]^
%L<%ej$],_OF._\p;+$iRn^J4UESWd(2imT^poEsh5Q[)0rJK`_F-VUd"21!gD,tY'>d#G)9_*VuV`fg:;8)EVGa1]5Z03G9G-1__
%.2?&G9jGm=3HQ%W`K&EKhKK[9r19[URn()]&iYHIP[d`R4(A,R76@FWA`06/6#)A.qIC.Cr.m1H#\I4Zq0JMmkolKiPq(q)/3laR
%ar2f,lB"5gPB,80`j!Z/Z9$,(JQk=$CXke:\bHPV>[*lOP%]3DOK6N]4CuKr\\;Ub\m)ITL_4+Z@EFV/>bXJoTt',d-k"T=P=_9=
%q(8TjM%(_gc<An&0ThARFla4cFI-DR%=,sMA[t)LmAH=$U03LSrB-3CH)`r/-kZL<jn][l6^HS3@8PdoPfIPOjpW#:\TU'q*o:.u
%G\jJ?o!ke;N[kO5/BT[*jkK6*nZp3Z]91_Nn-aFn0!L8eBeG[S4iAt2IKnYKmJCWNYk.4QFu-o!kih0fDF\'FHh,E/d!c:EW3!D2
%>f:`gq&@a/hb:bl4MZB613V_':(1n$RNZ0$"K'/VcB]VnC*p-jMg;]lEe.NBc?&6[7pPt0G9dB;PL6V<B*(0@D_%:PNCQJtcZa\p
%k/-@uqukJ.ak1;]TJ;0hHg7Ybl[]e_bBFTj22U$'A!hJ-`5.d3/;ct^(M<?WKWtP%ismPA<-6%A(L-`"A"q)Pk_Dj!1m*[]3<]1J
%i'G/#nl@N:W8^J?[D<"*$Ct6"PDTOn];UGe4-c8Lg3I.+c%-TtZu[c%i6RhoS3p7ElsG^V_*tB'KtJ^7L3/DR6S(,R^h-iI(;:A;
%0>arhk?;>jDMar7Mt3;l(j89Wc-^:f)G/!5,S<OWV<4\eR-LMu!_c&h*s$Gn-$U?fmHH[$oNURZ1(t$#[B-AK2NiIKqbj[Salki"
%pm7;M]P3mB;a08HM=0JEUq8!=jG]MZE+$7!p,7qR>&$&+n3,6OBUW%\;"%!R972LlA[Wshd`3%L5SWlRP0YQP<P.%]3627rKWJkX
%c=C'[LYfl7BRRP#_^XQ+9t8\lb@lfBC<FG<BXja.Jf6h0;Fc<%QGd11=:%_3Zb2!`:47i3Y%_O'=PcOsl0d&fR'^/]dHRAPYuB]N
%U1$/LFE[PWqdkT`X02gSr+Ob7IsgJ5TO;"UrjLJM#:)&A<kCnWH?&Xm6B'#EgYJhbR3;kYB4'17G&"S6U@$89AQ>m0XLkg#>d#(*
%\@q)W*oZfq:[^Rr%c<C.b]JBm>c%"WiTDQ_%sZoQWkY1EjX:t3/dO=70nZ6(TDF8:UCc)N?MWMXBp%oeF#c;(p/H#p'A0\dgPTTl
%j5/2NoDK/7mmdPni/&L!^BD$=rntqEC^U_B.l%r)[[!j0E8nlC@p?0TAYiWDgJShU1k`oX@-Se'Xk22@H<W)u4LPE)b3O=h.ktW[
%3ogq.U-=9/o[oHlr]RL(&_hm[kF9h!b#Q\O$Z/30MF!=JZpiLnI`s[V7Em=UB8!^tXN7HC&_`*XVpH3DC9;R7H-0Sb/Ol9f[["-l
%LNSSm5rPTREK=pin_gZ(9Y4Hi]#M1ORp2:pa0oMjXc+s*Ksi\aA<",h[U__5"7OP;>G;mD+D6aNaj3j&R68HrTI:.dN>C*.5"b(_
%UKXDHjb&P.:eU.tjtf,s[:j67#\hEWJH:-)BMgXiOWpHP(C2P@j&pEqHfUKqnZ3uPjtu[S<g'^<VU>mF::)a2n0OZki#@^tcGE2#
%b[)NaQ"JSjI0jOp8Y^"di@MOFXPe-N*m]-hd2jr]1+W[CRS,anU`PB0d$RPoBF@h:bf!Aj`3Z\LA_;^n-m=%sR%O-4JkLK*9.^Pe
%rHOtbY',Y7`BEU#r[cpRmDE5[\X67e)UI,8$U[3u(,7R,:*g[V3/MEV_cb?s5Vnq!*I?]#Nsj7lV(K)'eF(E;<;V")E)tao[.;t3
%IVtbFs&7=H*t_$T"ct)HPm%NP>f8DJ)(ge`LFi3U\=dAqNZi)9ei^#C+/NSh!6R?ajH(02"t.]3`?M0a^SQXc0TjAZ/-Y$*9iOi_
%)T6:I9GN7+GFh_=/4fh_J*^3lr=<lRk-Xc9$eE`6lkBJrQmYDEIEKtc8nl]7THSq)EUG3*4l@%KL%F'R`>_Jd6%Af-*sX"0Tg;a2
%(h,m9'Pr[rH&>Ns28IEM8'[F=JH"meD2GqlUe=<E2p@`<3-F?r^M60e9fsu-(nJJhj*-H_]#7A:gP^g`ah4rMch\:n8s,0bc.r2r
%2ebPP5#h0:#=QIm!@.)%+O&WlH=ZY!'.>BD=HYYo;h7Nc8=CO*fn"9:49j,"GqtJY@c92!>H_=fF//osNJLFH'?Tfrn=ofqW:GTa
%F<GKT14iWI:'!7K$"C;8)!-ko'MCe_6>8M3LgYjos7i+MoRj1l(?O1o6(&[4H-T*%K9/fMD]pHD4GP9hl&*U%cIp%.fr/\4OQJ&Q
%M*4(ZP['Jh7tNGBC@PBd#srt-E,?db#l@V&YC+J(<kK,*+*NN<(-[-rcOkcN=9KqUKT']R'Zid:'B876"lsqq"9DQCJG2_\hVqC"
%2gVKc:=I($HEJqD"X`Nga[/k0@Q+&Q("pIJFO!QA?-#t7b`OPHN-C=-cPN=n3HF!`6\J+spI*/#<^JP54J3BK_jo\%b*!Z7_[Nr@
%Qk"5/QOY%5f<c]1:c)08D[=Ckb$2W-4AgSfF,205B5_\+;c`M&G4#o='0]=To0RKB+.aBSC@K_U8F3A.*$Vc-Cs6?mB5j(QDiUlQ
%jI/P#22k%]c>K9I".@(Yn#XXc]1F:mjMRZ.8\:L';''H7p0;R]-15BR:7Z\<M-]\@9uQ44Yd\g`E-+uA?.&l-FQ.0R2]k3=5378,
%'.fEEJ^[R0S+L-Lookslr[n[/(?5Lj6MUBINo;WI$;QFk84paee^U6#g=^/XLuPUoonXsB+Y";W\>)^@+"Ne>g^TAsUi-6udh\1F
%WO:6KT]9!kRI!mU]6I=9odGV4+^g5)ld;IkG-;5m2MC>KEE^.RihS(<qEgPh;;meM$m6.6OJtmsl&hB6Ndb^kg1eEhgjO%]EDf81
%/.\I*IWSUZ?0"s\=*;V8s/<TBh9I)bqKhe0^V_]#,WTY9RlD[r8S^_\olGK2)Hhds$)^<u-S_>,S[cdG1P3kM4X1ELU;JT/V4@io
%LoV%A:L3/G.b%DK+h=JQG=,.tB?lBTQBZA-AQt,>g<RfT/:9socZOY15FfL60WTd)HugN%Q6Q'o_2a6#e&iiDB!HPA:JgMo[_seE
%c"(l]B##NMK<`\ZSmTtNf4=TS>s(CEFo.t!=[!cC:"71qEC3+[DJ0/"h$q=W@79;<L-iS0muYErKt!AF-q\\N&a3Wdo&>Bn7+'i;
%#Re4rM%KLHH!K0%31%\-=[f!db4p-5e:1hq:`"isMAUY0DDHT4Ah2'i2bkbfBqs\]U1(]!G=!Cdd18XN\qWh[:?WJ*hoM`-L0=;;
%pdZuSgc1u94-c71%F`i%j6eHD(O,?o2SX6Uk.]rklGX(c\$m<rP=9,nchbQ4nK/LEYK\a\Ll!@+rT6R3bb(ocF.?N!'25k;G#(XQ
%>0j/5W?LU.U_S)d+gJ)&Ahih]W'teTbEhA&I_)OP,1^\Cen>n]&=qW@lVEltc^;Pm1Wu4Qa$H6sECn_(\14Q,OUFPDK?4BR:D`^&
%(ed^*TX"X5,,9iP1rT<5;WXqPMS*]o_D8A5.qa9D"ptINOc_rK)Qlp[_E'@aiR;4C^s^c"&$L(F\cBiT=[>RK`.`2b?A>%4<j0^[
%1C/t!/8rbQ3Pl(+:F69uHMC%Y9hLLI8%;q9NFTg2'-G^E8F[=(GtC]l/'dp_%EZReJ]_I!,9m1E/qrVSTQh&E(\aL3JOO</C"b;L
%V?19)Ju:^@ou#$;a'M-u-mq!>fQRX)<<N:6U.7UICtHN87k*D*2eFHfmqh8*XU9HK@B#:Pm9k2*4Q`e+)4XYrFZfF7H^FjZL`pGW
%2$8Q]FFt<7?kOD370,rWL9cW4g!6.B`3*jQL:A'oG^#HrD*;/^T2s^qm7"p;K]qdr=arb21,m67*91R$L)=S)HJULs<7!!>4rOUl
%rlC[o_$HMNO^A62WYQkY?$Z4%n4K+o'[LaQF"g`%I2\K:)WPe/#0r2iin5?4P8-*ANnrN1/B:L<]`uNV!]/EHMB"QaW(MI]1/?Bd
%%>i<*D+/@4-uQ">m>!ebMMO$cJg*#6`RZ(7[R%i/n$i2mb!5Nmo<:`-8LTR<&Sol/lNj5NM*XDqCn9B;-mme(>QK9&A`!]Z')a_D
%QViQ&.</>tpnLRn7`fAEQIT9^2Q`Z`95]\e19_[pWe),QSmfnhgH4ZEK0%7?c$XPY))J<I+crX7oKTlZ$>%EU".X'G&=<9rL5Vj_
%b(*k.o5)>;n\BXUF>,t2jhi;tI.ubm/.9h+)JJAXl;t"lIUW?*Dr;7t*qI;UPj<3H1aRP7/0s<s1u.)FMQ:iCl3n7R'H-8<R`%s\
%gP^gV#gq>mZ^u2k15qWd_Z\n\p?"iW1o:UV%eFt%<&CIV3oH\7p6`d+*(dD-VhQs^F1ZN0'"_nKC>rYV[ce-6?c67E<F'(3qX*[)
%nHdOqmB`D@K7'EDYWdtP8W`)(Wu)6??mak%p^B>9Qd&*<7gMEn*!A.cG-WG=$GZHFM-nb-%5CO'jug=5^dLZGf<jG45lB3GeUAq8
%kg<o.=+CSG,iT7epu6SZPISJ]<k+k@URDI^KoR9mSn2_pW?h[D&A33A!H#J,n*D=)X4jNrc=R^WcB+kfC1L]%,d7-#mIm8_4G%_L
%pfUD]Tcd4''uM>HOD"JXN8PanGppf;,>mSGNBH-obH]K]]Q-Z"d"PCc?p'P$N4qX<(CckN`"jKKSV_(bZuf[)"I?p/Hh1;8TtI-j
%O85!Y$j,jV'nmO:.gR2s>0j<f'Kd/3hN69.(d+N7AO_!]Jai.G2"ffuGbEV,_L)B<cXJrB2:MOCJ4@@UKgk**Ge>cU`]=qX/PD"D
%P(DR0FK)rk1cu3l^hWu]%ujfE/K>g-7uUL,i=V0X9AR=U&$/k;)TP)+eQj?gE/BHu6A@_fdLOK<i7(-b.c*D@Ki:?k]Uq6+M-i-q
%.MGU+S'dR-Mtu+U;3uqNWHYfj`e/PD[nlk<&V*Z/O(YUJ#7,L2'oEVpFGqpl9PYm(6Xl/i6aiU*)YeaT'`u"ESJbm>pcDp)dFYV4
%oY0NKa056n7DjA#kj8"7:[/EuA0`W:)\>0l\<7D]q:1LY@SAN(L;k-qAO)<oMeS?X`!@KHgA@jX3=NV??%p5#)+mQ@M!b<)[QDD%
%Wp>%4Q^CpS2]'`up7nZYchS6o5QZIqWC>b@V-nhn*2Ag+0nB)K$F=eS1'"6:</'Tp"3a,!5t'*#Cnrq/hGjY$1"/\:#'N']#_:`K
%Oa3:pFRc"t9Q^`d3_BWjGH-""[0+d]gJ![f!Ta71,Oq3&HjEoL>LF,)Lf6YlG0lA>G-U$-5adEiLuNuIR,qkt"1t8Y"QX"\M(S8e
%7MoDX:A7.OHgO(12@?AfY8mTGWUK`Wg&^8*1dL63"%[j)dG(fEJ891GB"W9eYQ<`MU3;&N9Z^jI&"rgebXD+(TG.h&Gjtbt";PiS
%%q*'OZ&G/Q<^$LB^X#jS!*1r5`T,qS3$dn$H@4"kEg/LA@e&g#_@[o=55I<?&@`he$pjp*RFMJ2H4#L7d`r9+H]6>gY[[E5[1Es4
%eaI?6N;J[]DBJN32)qNUkdHqS^sk+=+ca,69F#0N:6Ke'SCqAibE/j]S\\ha]IC!u&j+Vts/1TP(NAXj,hK)O3,UB1Mat:*f$etb
%J3AY8W"D\[@aT(Hq`%V`XC.IN0^Bb.+-KH(`;]4[?66=4gCh-`.j'?i:):1hSK7EKql1tt,nRO%%HA&5ZU`@<47)**;GD*6aa#m4
%@-"&R+>@h5:iOCp77BLMjJ&Fm0QN;e]40iqW$!d7;,n/E\L8u<@cX8d+>@h5=:c<0Y:R1MjJ'"(+EC=a&.lCn"^W?m;*5C$\Yq.e
%LtllhJ]L880chQs$j%Xi<<d)h>a-*/6>kBm3(>M-%5&L.-o;3gS/3(H6nTqu/dT!92/n)9f,=cUcDqDWpc'oc#^Dlk)[&4I.h8`?
%3%m8tCn0)s">nD]%^*UWW&b2lS<k6!/hZE!0"AEi3s](r'HZTt]U'[EEH,<3&?rYm4pY7q<$,@RED_/rYdgVr#[H0F\bUfhXb$,J
%\@@aTTPT2R&%Gin"^H%e;*V9(HATK+CeN%Z[?K79CscD$h;YG9>[6(@WF7o@GP:6'YNl:3>ut:d8Si&u8,k[-/SYD@Ydc)-fZgMM
%i7(Upc5<sQfYD=80>kEh9:fR3EF[BGDEU%lIE!B">'Jg:JNcpP*af=0iY=fiZpn=W:^(@FSs_Q09k#7M?O(aAd9rfJF(ZZ$X7#2)
%MIiAFfq1;])rYnhZdj$+4`@hP_)m#9XJ\Y\UV->*IP/3hV.q8h5T.5F&LX\b6JuJV5)M";'K)7l*eYd_53A>'_djm]h,d/6U9?[[
%B]>b__PbZt%"WT9W_)PV^Un.q%hO0F53_m6rWoD:H-9]rrur5V>I.OmJ/T:qJB5cO%Nmr@Lj#/4l4S1"S7*]^Z>d)A;eK<D=#IDS
%icQY%H?U^!Z(Qd0W\1QWqX*[)rWp-BgLiZ`X#eK`_$Yn,oB&N$[qp<$eXH$B!99VPigSGafY[^T1\8/N/4kfSm`n..=,l;p`3U,k
%ka`l52c&&ThfbIGRQ!8jPBCsDPb2]&hX\A-+k:C9;>eq5)_nR(E97bDA[8cl,75kJ[mQt@-$t+6SBhX1WT`OYm49N+eVGr6=;fM\
%YKAVpdkt,:g;*.$S"6-C41]jao*bLO?GN\C;jWTBY?!1Mk!fc8?-uPkAI+B949.sGo1pUf-0>1K$7UgTdfI;4f9Y&X,AV.*ERYU1
%,ju,'?8EMdRO3=AcEl>31lMZq^2BS8-QAie`?<2Q4p4tg4o+3fWp:P.:ihnD#Bs^Y#=`!8^[9.]<ZH/)B[eo][!QeD>qCAQQ-'65
%9]CC`6YfEie],.=543-08W)E5FnFnVc3`F1rq/TX:ujc,.^/7'R^"GIDIm5Z(JP"\6["$[hPJM;1]smiW\^=hKtsj(kID9o"o9]0
%_PCB$F?L:*``R.0Re_qi8%6h=;b]leb-6!G]eHS]k!fdVYZoLP7]$NQc]Q`X;,TNCKU1r#P]K4)K[nA=KuC,4>0b&R61:_sVHG,?
%Wq/W4Ek8qt(lo6!h*1-PZ9W<bBl4gtVqmBsm$k$mJK:PmiV1lMBXEeCHM0mi$-ZjIY-5!,ZU;'FVk./QQaAP9SG>-g].XAJauitY
%-$H<GgMRjh'qO/EkYGb:6a_*tr(2Hdg!X[B%A]DKP)O-ATPJl,!qQiDI8Bgi%Ps/N/C@Nim$cm4RM\U8_E4MK:u/!o\u5r%bdb2s
%kP$'(h)sgq1I)iH3NTet-;=KH6`f(lHjA)Z`ZhfW&h2C3qNfd?EEefQDKmj1EpCgOG0N#:n,[hH#jXX16p1*f\ti!Y6g25NL2m7@
%g$OE@Z@s.2V4oif/-(*>PtpM%kSC[=a]-f`1)T_o`!hgoA;no4$oG1VSN7.8>r89>.[F.+p:T4L86A-bYNh9PI_U2U]:hC(md'"$
%pDa#nlfERh);HT5EWR7b/GQkthS?^&9M("bb@;UrBI65p",5=!%kf'oM9;+:2TC(t]N-r/Hf44S)h>Ck$8EUm`cm'b'+FO7n*XT-
%+Q!!SmRBKIa7jUn2ZgEq0+VkX1*g@o)e_0^i.lrp8EW[*B%auf7[X/aXBR<$nDcU1RjG&EDcCocpjp``$.V1p=K<Cj4Vi3XRN'^M
%A"3#11Sbu;j>C]0R-mA`-.BYqp*:9LYB>K_"ro$92"%#SQu]TN8GAn*r[@+n&Hml`\cB=Ne7.\cj5^GfPVrm8b=FR*mXb:(?X#SP
%"t)NBmq<*ST^"*dnFc4jnCd\bB,pZ[/T2C`DB1ld^>G%RqJdXCI"U=2`1bq)&-B:'gD-qU=DUn;Y:[=*]LIJ'-7_p,_.k2\PDj@@
%:i.'/)h!^nN]o'<D40#anbA1]ci]kif-oUh7;%snkh)!`is(EiC_/Mod1]0C@B_Q#RTfnQr:Gu_c?:QFW<OMHml/>R8s7%C"?1fg
%W%DH0eU"cVXpqHu6.8mS?u)DWaQe)sp1$@J<]AHQg<DV&)WU*2klt`_VG2>'=l\n>1"PD6mPbDe;(jMtYlWF3:A;K]eT9Au4PsQk
%irG6Y%^+s`F'SBL/3]Nqcq)\BFW42kV1sOJI2%c>%[2XaIY=T<=KV0?*@MaqC%nq;B2J2c)YeT%AGGAug_iSpDp"mQ[]Q/l:Ucr<
%&\Q]K%>9%#*V@Qhq$@grWeGGNSeeYTUicl;bG*b;h1X\nST^ubS\:f66eg_*Y\C]s([dd$DB:sqIdFq7lP"O=bsgn?B?W=b'ZWKU
%:d0qhK9o'S/^73E/8*21H9X$l+IBRe&C0-n6(m7IB:sA%OuJ7GnP3sDD*KoA[aMEu5gikOY\(PpF9Y,l(3uLEctX>h4G*R22a^K.
%DQ@sqJhp5K9+B7\4#5%O^>9_H]l2)``Jo47\'MN**T<ha51hYD3i!6sQ5R"9)2SdhN2Y?9qYcA1(1gS=3(]7%4k^3L*J+YaGtSUf
%*$#pH3A,Nq6cVoHUNdRCjn@Y^.!paAI3oiI"Y[F*%WXrtDlR-7%3VIJf%@Y$"u(o3GoCs$-Wmt3$$dD?$Z[ttNc9r;*!@/2]0I\:
%ICXU[]6ErC+ofg4b"kOq+ZJuiF57\sq:dR)Vp@S>VkC["J\?Y'811(rj*+OF_['RI6-=JM@P3oEcXjR.6R;]G]*?q'^&O)\\Qi20
%r!@Auhd;nbpn7-1_8#<55n'<A;A*Qd%DYdD$<pVV\Uk6:=]NIA0-i&B$%tT(=G+"$;HQ.+)[D'D":5eEa>BqVM:hMV<=h]m8ounC
%GqriR=RQn3<uP\e7W"N'0Y\]O22*iT\R0m"f#jLe!WUUK#6UJo=X"&:`\>qX`*bia!FQ\=bI2O9\k*%%*CKnH.fuG^p3D0(K!275
%"T]'MqGPO+_3+pX0EickVc/KLJl$=D\t'Hh#,"ql&ncS#d;VtNqJ`_s/8U'TJ06-a:"#j$,!0R;!@d*f.b"G8T#J)b4gWY7P/bhr
%P&Y:YN$Y#iD3IRHA(UFuL2(.k@C,eZA\CS-[JLaCR5p-)YRad`ia2n0^bjH(#)qCh3)BCZLJXX/HPL?n?0Or6/fdA3WMX(c%Yu]a
%j&#kShn*a,_6VU_/;QjNJcf.(/[Eru6@]M9620%QG+@?qm!'U_lpGf%<g-LJ+NL]^XUOqMC^45tcq=.D&9&Z5Y0&LL89/tA=M)1l
%EnNW<CWn4EC0qs.*JrNB"<8cA=sXue$u:g)rW1kIc#c%YnYdHDg!NY"Cu?`<U!&ru:cBmgm=E?668qQBX\/B9/Q@H]<Rk!FOg-<u
%*-UT+4#fs49dE>Wgb6HUG%+r+AV*>MXXT!hjUI;jEO=1+dQfVlT7.]%:mhe(jJ@t)S`YSW"HK>G6_%;uO'8?g=4CG7^fRh'GZGe"
%_0@BkY<?XI@$cK3"CW4#f++p+!PWbic-_XXKlB3$^/IWJ?U4:ip5U:gLm]%4*H4OD]12K0a\a/`jdQ^l:aEZgCUZjgWr.Xp&rJpK
%2^G^p!N.Xr.pbSr\Md%*@21&!9R:RG4t-Z]'k143'g#^'"G@I[Cn+m)bA2g)Vc1DDZh9E3\5.PajHe1(!IYO/U)_(E4LAdu;.l5j
%(e>\VDj*#uM2BYpYpnl>Hb.'^4WLn_`FVse_4dHTjf2n.,8>XZ0*WS-RcDad#6D`ML^kuo^^o>T9*@E7aaon+q(nhcc4`RQT$EhJ
%cf%%%no#Z:3l@Kp?PK-B2]4@V=,j(KI)`G3;Qn$10'W$5.S-jr-=P"?5bAS+9,7YnJ;-:?r=Ms(iIK3^CUV-H2A(`teY!(-K&D"p
%#r4T*L)Rt&R>aUH>+m#2VF80r^'J=#`$E?2@+/,KBc"8&W*5>-$oRSa4TISHqcD]b!3rc\*att_D8@FoR6Xu4)!"_1OCfAs[Hf>U
%PVh^gH/_d5""Gr2YSm5ep]H]n;MGU,=2IS"2j+Jl]af"%hMQN.-<'oQe)`h+ej>U1dqJ"i%tn.*"%'"en>X6/4L$q#9k0&T^b=I[
%.dpYufO-F1o7_PD!)!!],=6q/ArEgk<JKd2r01I-bt(rmGVo@u`Y6Cm6[['C8.20@S_l&rE\a0s@>5>NNP?#&j>%Yh5t!I9&X3k=
%ki`GFm8Mud;s#0);>%)Y\0ZA,nNNs9S%MiD.3pDb$rh5%<90jZ=MWd_UnR4)o@;$iL86%\SVP5QaX/m<0tJ"*>`?cp;(EOlJ.!ZV
%Eap2MWhjg*:eho/GlaM+5bG6fcs0F'Br^b_3jcV&e0oE""TY?N;Mg\S"KZB5d+D4#!2l't,qPE^,Ou*6ecM,Jg&gN3l_oD:mLL#U
%\S-_G!m'NWTT?"V%3gs;jS=umC7I^@Vcl.A$)hH-/(Pmph'Y`E"0`DgqJHF'i*\>Cjd<,CMVj8eG#dQQ@G#7a-]G!tc*XpDgWugX
%PUgND6m&m'nTC[a6M552lAO'BAB#sgIUc0+e@'K-_lU]tbo4+/G0AOC5`Au#*NRs<dG/-AbJN0ei^GG'\-:Zg&CAUT9ncApduNA7
%7i`MVk9BGUKk\'-@tdf\g'"Fp;K\tGB:G?'`MdE3VP3R\ONcPq:=_6Gk4TcB95ef)f),W!ie)cEPgR5U>Bt6TAOJ`-iiVt:c]YgB
%*.GB"=oS]o/I7ARZO\'^+9SLP_=nS+#Fc+FU?Y4W<1FkKI;i+LiQX7V:l5]F?u*S)V08noQ`i/i`!Q)-%P=]U:JhOnLrkV0XaDOp
%Yc<AP5s<Zt;jmA&*=SE2/\Zq3@1j9Mkcgdjr0F_93ro2sg;M&C"@-uX7U578&kq)#kjt3k9D6fGqB**pgG:UBZg3'bHr$,gX+Z'\
%S3.V7b^@I8]+hI!GjZJnBf(BI9r@VNV._\Q=X[<)W[-d:#-<o=3#e%9C.OSjHm6iNBF(^9[Fr\n\u<h)4%^>EO:J'e+YB@"6YSXF
%(^_.E$<U8g6EtNhI3.YFC:-hG!B0#tb=Tj;a"gKtAcVXjRV7Z`cAf(oqBOK-bk5T(fEYRu?C\`&0fP4kCY2DHd*;k]e!47G7]g2@
%lFOa\AY-OQKUeN>:;C[s?okc.lKr2KLD1gM38:2bCR-@[CI>Yf:tCQ^1YsG1"/+d1N8^,_"-^l2"upIj/O2mG/A!'rk!B]ANs53L
%eVmre2;%Q1NFjuJU6.Gq$j_s#bQZeD,mptPMYID2).c1#c7;"Eo%Vp'X8jT,dj?URA/lfD<13NHULV>OQp^pj_V0am_+VU'M<(tt
%-A5iJX(SA8oa]/$*7OWZ)0gL<T>mrm3bq/I5%4if:%C+AC7eoGDA<?s#+31s806TkX4[*<d'$?*J]`T2Pf3l0L.46i_0pgc!!BiL
%2H(['MlMW]S@BL"*39?4F1TCl-V0\]RB;7,>N3:1;"nHKoc^-!rp:op$'aW]DELZ]<!T7.Vob-qLU#g=LO%ip_']E@?WU3kd\$2r
%#Cp_f"A^(Va!J,<Z-,m?3`N9&geau[IRY1n4C>21_eARrc-;2eBi;GBnK>irWooMD,s<X^B-Vj<+H7o./^Aq[%GpW\e&+UQla40Z
%dXp^qgduo_Nd+Hl-`T.)cA+1a5]9b2Ls5K>C)]cm1V,4=a4;Xk"l\gL$F9-Cj)1KLKp/n6AQlN@3@2]Z$3n+^\17130F\A?DO.,:
%=e%uP5tNhjE0dp/_q&?LNoYO*0X:c2:HK&k%p?QHcB)7T,*V2uHq/T+aqN_t`o=#K(8-7oMF16B$/rt%3*?mG]-'3\7Rq[/V,9(f
%B/EJ"!`WL6W4WKeiiZ!9#\EtnIHmK;Z+Efr<)>S(>?oSGB4UR>BU(Wr9;i6]Su76a@HGa5/'Z.'Vn$$5S*(7g3@Qcjr52.uNl"'L
%+OFrFL-/6t7#61_\hJ6=2Fn_oWA>5+C4\^Q8Tk))NnEBs+sGS(oi+i[lSYQ2RWZLt<:9R8iAJ-+)7)'+jT0/,YWd4]5sY#S/db%#
%77*WR9WP<"lfHQc&XZ/mZ>pZKfo$3:8u+VX/%m9/%F`=E$C4I)C4qb=FGC(gqh-b,ON7G"JOrXWj5(99C>$ZtMf.pfl5[ORT!#'N
%c*#22m0X()D\rBh8j\I';8o2fSXS'H;R<+&\?2DnQC>C(j+@Qr;W3hMD(<qBd9"O&N(h$.aW(fMFhDNe[5'3?b2*E0U'=@Oe%hDK
%=adlgdKC1$`'@UDPab)1rD[g3@9\P'\(VNcD"/Wb.C,F^)bB2`a/QEY+`7ZuV<Ek"6BOZLC5Er9C#O4I6-b8QR1?&LcRg*^%ccjp
%DI%O='Vu>?d(K+rNJW@3LLE_Ab)dE5)!q_E!K79`.Ws"N]^hGZ7YOc"6k&uC>*@[0:s4N;]*K"oHoeM^0/-mNCo*L4KEQ?Sb".u(
%9rCD_VXusV4:X$2]50+M*s?tbEfLM@k!b'9?m2mcZ\(=l@T%_dN)]tY24go:9r8!=lOc,Y`)0[C_DfBT1,q'Y(N3TeYrsHbXU\Ca
%T=>fYE7]i4[dc,BMsL@U-K/ouEPGt*6\:&K<b+bZ3Ft?@ZR>qV+;?=J\MLS:FKdqZ?9t'Lr@#^[V^h`=@C?`AFU[TY>@:-Ca7(E6
%-!^oa,4J-pX@8.R'?n>)mhM&`0X;QqXAE,r)oe>'bVH3@Wo`5g%j3,AcrX-j".W2X(X&$Qju%QeI\P]sq*6o6HC*[=YS.4".Lm9h
%I+314/d"LGL#PH4L=Pu8/7;3<^hmF0H>aLJ49^H4_jP*bA^VUB*f6AZ"K[Qr=64:%`u$9sVn"[SDS;V(Taur!ag)$mM[2"h((^ip
%ZGG>`]s69\UV6KM)+cGXHS$(rUStk88t`/M#6Z'(^/-gNoJ[D7XGfZpL/l*qkn]Y&l#[]RMbYTU!n%(bD,i+O)6X$W_N'1[m/KUa
%k:uIBYV;arVSukDKQ<.UT'/$.F@P5L)!S9l_R\GFMHZH#>+!^M>3&:`0#Mmao\f^46fSLV$M3FGL'<(Qj`D7IOhmS!FR+K(,85[=
%)L%errD9T<L`\np0Og#m=Hu$^Yr5+R&O`>^98qra$u"pLNs49I2RXc=#cJaVN*?QQr4*AM$ALT6Vs`Jt==<u3[1@G+-\;mG6]&6`
%UZ-=hF6;Q*K8a)/_g'BJ'\Y_2!Eqo2R!geKg()9XKCmKX$iQN+/eMa.R.G&)GCajfr>F%<X@tGLj0^^F7C3-fZ6R"k$@t]42O=dX
%3[ZZU_32&l8aj)@ZKT>R\n!*n?p;Yj+!PPP=qI.d^_PgUk%/flcf)_>bH(b7)&8J\OSR<1,23a#'>Ul$QejUoIR';(&kJ(@cCA]@
%X9B6Q#]WbXU5VL%6f'3EQDTFlK%Um,2kf4*IW/$41IJIOM-u.FQ,(/P>d&$G&@%dkaI@icCMK*_beL"W*Y1m37sDtqg&0s2,Z;'Z
%!J7_QY*!8H4k3ERMTLO-,YI$;k8MPl##:Z9=N[-uD$\d9#>Ar34*=IUV&<o5P7/b3bG_YtBBl?G#n/0uBoj_SW@5pTYqp?>'VNjS
%qoqkcOWDsTllH0*&.lV6beV,.dE%bu'N^#Q:MS)sWi'Sr&KAgIo^"+]<tLU&p1]3"6CM_U62VOi_nkMSk/mJAcQRc<;Yu:J[%b*&
%XX9u]LbT8cbmS`EG'epO?3ZXW'`fqc`K'/8fcZ_B1P&^=TK'1rXu6@s"("NRAZTH-/C"Lfq[r?q8F^lXTbpYfU+e4SU#BB)Ait>$
%is7uSSuC1P]PqBjbulQop5nQ+Y8b:XE],m0J2&gd9Ia8+LGPHS_H!Z_p=me7gYL0pOjXH,`ak>Z/q@:GY9S^f!6,>\Kj),")Dj\k
%ckU_T]uIp^q/-AJ8=lUWXcCbn$a;p&>PmN_&F9>BW[/iB!DLXn<+gljY+9E`O>@rpB)-fETd"X"U(dn&U9R59EB^STX'ZW66:WH"
%`aVBX.u5%.Sp-'+c`6I78=AcGQ!iV&hkS)V*/KXuX^_)<N@For"hV?lE!:j(=;3QYmi&R%):T`Q2LQH"RdY?nd*>[N::G%Qh-ld<
%681=0hm+eP[RB7[Rbd"UQ1Qtk<P`rNI"S+n7g8MjQ=H#?F>XNt[+s/T.7E@8a(3/n5Z+7^m8/=]aU5#B?tjTX#V61C"Y`?\He?"7
%&<I@l"q7?*.2iN=lZ<p6`/(atY2qd!"d$_sIu4kOYG]$A=,rA?/8Bl$3FPJo=f7s3QCf,ADBo2_nc:N\F&Um3B;!83]W-9@\QPH3
%QthMjU^_u.C[%;V4r@1af<4$Y.pBl)hqOMc$Io077DeC7JG#q]-M?.kUOR"0Z[=7nN,:"^(Geh,ed.$UFUjD"[!S@$I!aN*Nn?*@
%%!*^RJZ/]!:i\^&ZSg6h"+sUCb-jm&93.``U;W/53Wc[WS)\E$[tAC368pOACN(/O`:th)oRR!UZe\9B=9,$41M+`fX=s2_6Hp[\
%bpPT/4]DqQEA)CQX@%LhcT#beU;CJ48%MN\"+#p%bJhia3#+_rWsj_CM&6s_%7cP%5<D+5jM+?'$lDYHc\='0`SU)gpIKkS_16IS
%>U`E02R+]UDO,H8gP-tj4H2u7IhslZa\\QV5#a-G#g6n;_UuoMdkQScTGf^B6p4i1:H-,2M/oA/<35_Bi,hZ\5sp;FhpRCq0?B9-
%k!bV-DR9Rt=#PPdcmcJkgk@qN<eNDSG@M+*2PZ!p`.\JtCk,)&d>npl6a9a'eH>Jf[Zm,GG`5E^Z@*e2/G_&G[s[*jQ0A91c6$6I
%)0MK5,JCrgYs<Wn[H"Q+hiJfdXbfENnaJ-\.:ijn)mY?p_Sg%,MO>'l)*c#C,bt]rc<cK(R@P.[kU>i7@aYn\hd,3:JHY%l/,?3h
%>=AQ,c21sSLXf$c(7X2\$9J56,[*6.?r9PV-ENOVA_$Pdpk=iJA`piB5`iPaW&#ihV`5o`D!7EDZD="6MupmR8"pB:-cEpsZ^Id"
%S"aF4M[J>a"p3h:)@J`MkfL.F9+$.ng<[I^L=$u[?g4DN/5GNH+_?T+A?rsYQeS?5%18aq&F)B(=Kfo0)+g_3@=&8mP#5[:f+oA]
%R>`TA$])8H!6OFQ)$6is")n%)`[4!OeT9ddcnf9_MAc'Ug:AViFD`'jiC&o)4[kOT35V(eQ/-6@[\]u8fE)s@F56N=H,TP!L@@kP
%^;WaHeZK-7%7(<8NF>?FD5/gT&iarJ@gJ<V,?NUdpNnKC65nLW'D_e]2!e.e[4#<+49cBKhY5IJWigOor'a]tT*A^X5[)9&QiS4]
%2$;Q*Jsa\0S-LJX+PnH=9E7q5%Q7J$]@OW=ZG(l)pf(8>`(/Bt#7KS&$#`[k.g:Wkh>4_C2!1t2Ke^V>dE*$KA3_+#BS5d^no6gO
%0:\B-bSBp^;G`$";;OaCdBMgXk3(,e^qg+M0[ACT'FB^m@^:(",G@D5'cKf=I3-s%^r6fVFU5-$VKj:l8sFqKNfB`e,a-6%.nmkg
%jWfYoP=<HhPl\c^FPc9"EP$'u;O[lXOI_l.:rpKU#_;7]d;XWiV:[=7d\_g_bq1,rLO^0QSlO*HVunVZ=iYg+.mQ.Tm[NoW0:&/]
%!,_imTOGu$:]iW@@tNKlH:,Q,7+^K%XF[&&`4+p!RM(416Z59lJsE2&"D%UrK[^M4m3d9aVUNqV@BK'Hn[ARA\s:8.UunhN<A\%b
%HLk)NWC:@jq)m&2=ZbKuc-A@sEB+tUh7\K-%>uur0$K<d/6ndB=)6=nC]Q7Z'GBY%Q;dNI0>1/Pc`d81F4LBVbe!^iM\_E"7-_US
%mgAJDV87/8;\>U,)_o/HLee;2,-fn-2k`:Vj$01;(B#H2FH#;.j-`NQd$BDJbgKJ*XBQ67GJHSIZn"t;(h<?-cl$EXDOQ/sTj!i(
%_lceF4u<fT%KoIZ5S-fT!ru3/B*]BW3\7Y!I\uKRebsN:muY"8<sc5PEs/(<5S2+eC0'jKq2a\tNJTri(_'S8X_S]+T:DT/Xu$u'
%D4P_1YRksPGc:R;EjC3ZB<+j;'laWQ->OO,)`eHU_#YfUT5HDn[P\PP*_8[i=iUXoQ`45a?6>G1.]D'BKJdpcf^jZk!oc'cA`g_+
%<_J0DN'%>b9GW'F0ilecAnlU3BOlk)$<Wo5TgW,ZdDSBR"B'DMCjBe3%!Z;5m`=4>9$i%\F406n!;PTd5Q0,Vn%X2GlarcPIJW$T
%X7+sDo%eLCdJ10DbdU&m@6n]6K!5NA]Q*IPrCK'*kShI?P7@aDdZu$S1]k&c3+>"1\.4=-<MP2f?*3n,.Kg[#/F?$@KVL%i&J<4/
%-pOoX)BcPVbCYS>">u%(*mS`;)_RZ^V!h.Cb7e@;PAQ!3f\sMWArukBmMGKhfMr]&JVH.N<mLE%_f&1/]X_J=TuJ#h8LR+V+jBfV
%bX31JLku,+UihYr>@g@RJe^fnfa+cWMn5beU[\=@=cj`D..lBscpQ98I9ZduR)DiN:G>("8Bs*iSqD_Lj*nVe\nC`4P]0"rnC@%j
%g"0f'(/Cp<mF)CrS)iP/H5[q7L_J:62'(2]bMYSXFDqR#pJ2e*F@F(r_ZS`A@F2bkdPfs8Gd2m"QLJ0<U[#r>4er'8/DV^F[crX\
%LK);Scp3F.FW0hL%7TIh/Rf$^n&s7VWFc74&)M%[64_l];_r/^&O1q)gl8IjRq*HGL0%\sN]*$lY5j;!Vic4YPR\PQoT9nh<b8'-
%O=mK'I[jp7`?<\/0YIck&`FH]j4@g&Uu:u0K%Lo,`58_a*_3W_8K/*BK^78"/Ei\tiU!qh??n>6-<gf>!5]?A4m[,cC&gF\4j*t)
%"\_rLeP#S/`lFF3*b;!D&Y*+(=p43iJ]a?nKuLMK1/MXn):f2h#XM0P=?W&S5dV)Sqi1K.bV;*:F9r.'4mZYogVq(()uuT#o]Z\2
%NmhfHQCPSJ//H=i^"jHkD_S4')<XTu!C.(GSY7(XOg5(3ocbTD8M5LS4#-X6((45Ij%qfC.E[4%^u0Zd#RVG71!21UjRG*9=/QrN
%#JbQ=<<i+-ZYGe203=&MT!UR54TW.V>ucU/;h/Nl/;alDWluSaWXpL8>N?E)*1]5ojYC5F_Tlqsm`>!V[gk591'd:NQpl%H(m>C&
%fQf)$(.5$$:4d=3!9ME-R4IWNQdu/o75HQb(%\:,0uNT.5V[)bVCnE6P6I@'MIS')!->us-?:7[2T#^X+%=3U'G<R[&#DXGq8aa=
%GTPL:PjVuD,GYI#IKuFra9ZrHj;>dE>&Q6H^Kj(AZ&`bgd2Ui]Pi,(#=_@rDO8*m&LLJUa-EjJr16!.n*Zfk1Jr-uS8q6=`/gaY/
%.g/B]#$0<]F97T<:fHu?-%_BY"sRL%k5aCcA"f`&aK2A`9Y'UAoM!#7Z83]E.0,87')5GmXKl;f\u-'FpX%1K0aNmn,iD@T!QD2B
%DdTBi>&8*ZhcoW1#?XC*ngMt!`Ej+Pl(2-bQOt'i?"$?A.8"8JS**&3Br2m#4*\Mo"hD4&`O;*EYX4Ht`B#h5=io/R*$kpt0gtFl
%S3HX*]/Ik?;4Qo>;o6R+<l7;H#m88a#mne@m^?A`)*D#DFAom(Fk%#08TB-BJOp-1!T9QYb)]Y,?EGp(^oh_p-'#(&R2ZJI*alrM
%4H\Qt<)7*%'_=+(7U?TOb$Wpl!YTpbLFPV_:,0>R_>com@O]hVPm<.Ee;q\>*42H$[b"_8c:8S0cNR,dZ%KhO)W<h^Q!LTrD@FX6
%Zbp_sM4h_3QGBJ%o2P0mibfLE(kD\9,i+kSXl6=cros@_Q5+@[S#N1;LsqO<]tlNP!<>sG"@Ekrc!e(!ir?$a-`Q.)F_R4e=t@Lm
%C?QkX:S#')4`(=-#@c;DY$8eWRADYV1@'+&.Zr?pI[j;,P^V-J9KDoO6b360EtoZg,]2S(=(D4U45XLFi#5F^9[9o=P!_c-FS^(Z
%ek^17UNq856DW(e.6u7[+kDN^S+LGH-sXF.TM=LUR"a!P)aO_Wl3+Ia_+CuW=?9R68#eNq`Nj+9+\6i*j]#09Wtj\9$U^(j7#9F.
%a_;H#LIR['1b<_'X;_Y\P+a<XJsR1Gncrh25XKY1&+TqW'4tAb"ct"^mg'Id`kel*%HGrsK#DBRR'r*!30XGb!`sBWR`;[BUNH^p
%8P-1fqPp5T:qNCr6\,1K91Gd<C,@oE0kX8*"q]gC+u.9^)Y\8RVNoF1&X!/%!t]h1>ni+Q*3An,+8<?4!X&BbUek;F(D]Atp/TId
%qh.8+Bce,3isnmd[&9bu#Xt?Cjgp3c2ab#])bLshrm;E96p]p(b8R==o*-0Y\;Qs:AoKkTVo4tBiF+:445@jE3h5I[CCV#S![Ll^
%[YtZi0J%*E3V%5LJkL?(Lpd?8W$1lP2OhtSf\QaaPWQcdmN19mh%*Q&h%[ZrcBfFUTFO"A/OG/VmS65\(?k?u]9%$FAeKK][YJ25
%(bW"a23(J8hR4(3GZn?V5PV]tr=7$(P#dVV#ZE8[b9T40b9`d.B.!QX8;3;)<l>1V-?kjA<:E4e[%8Ft*JBrW*)"k_b:&B(*X*TS
%SUlb6:1GSaCq+TInVS7IUAgJ0O2>Y<(qr1@>m_P3IL`Fq7PS?qY,>CX1"A6A9K\=KmgAC8MO3ZS-B2TNR!ZjhJ>3/H3qe#V`ck^S
%ii1ToalA]WTqK\6-=C!!V6OOq0W5>ElE!cObGeS^P4eEFEt<qUg"4E9c))OQ[bEcR?8F>:J0?WS0h(7;qOsr/#Z=fkldW'[Q3Kqq
%I$JG\,ID,?n+-fVLK*T'N00cIWfFh+d:bll)Km%Y,,24YdEu,;X*>1'q5MAOJKeA:nb2?(duXRWH5sB1d`%"pQEF,.rjHeVr?KQS
%qTY_Z1B\+K5euqD#a"J*+Q@4!dO7D"XID\i2F=JVq"5@!2A?Ysb*P_HSJ=O<;n:1rLeZ=*&3U=O<fFOT:J7K@=)"qV"@W:2l*R>d
%:+Rb44*LlXW\_</O9-WOL6p'bNI\+_cm`hp%4,,l?@:53],CAg:Fka9]C,I2K'L8(+"Up(!c2DYb_Ie.`G9t8@a"k'MXV$K4[d\[
%lWn-"(&b8F1]6A@:RVBEe$rNaWY`3dTV'>rEn+NM;&(Sp1`Iek$jplDAee6#i)2J5VJLs!SrsHhNc[+Z;4:Z8<#TuZem'bG^BXk,
%kOf),([RKN4XG7'`do[AbZ6c6=lsmt.mY&#A]:(L72XrR7SbPi+p'5uA0db-[[*:s$SDg(32Yo?V28<t?;tP=3Ft*Rf3t8Ao,+Y?
%b*V"M7Uac7*r5qbT>RM;NPc<>-5,'4F#USES@&tbOe_Vd=!=(p'j=!j2=57^HqU.sr(ULsWUhf=X%Z3&blE67_`Hu6\i&5l!m^jM
%)H.`LGfd4_VMmEl.rOV)27(H%GVj%D3t,<IPj#q!JO;"O":JA\NF3u)ls@)OS=CEuj%-sC:-;r9CP1-(1Dj1_n')#0oX0mDK\hPR
%5W8O"CdSB%.7c$d!+]!a/6!nuA;1E;Y-`:uB^V2mFc&FYDFUt5R6U\ZFPma6BPk/3]bN-0eW"3\q4pm'a<IX(SnuY;1Q6':!T@(R
%+ok&KfJn02$RcrJ*`+/%7lHMr5AN^h1_'9fg]c,PoO!?`SD9kNZ&W8"1aMb5+uCo72.NZ^'@"l)&p=Bq@T9sIf#r=c-1a0fM5ff'
%E#U&tT=.a^$d@=o)Np.nld0T-.Z[\2*eNF*4:CCqL0ql,!E5H+m'19K,Vu&Ka0V`,R,mrpiaQb)8(Tm8=Q;TK`ba&n_O6D<?lG+5
%O@j7M>]/bN4)Bqh+p.tD!;E`>%Y`Ni>e1m.&SUiO3>`d*+GB$=""Ia*.a$(@maXO4[FSkRF(9;?`GEJjU4j$Wo'=r\Q22K]L<*)O
%0L+^c.[JFf$n2geM%h7bP=0F+`S-uWc!k6B$aNMQ:'K6R@EP\)d^X)p1FNoM6]B:C1dpH5F0*-n806jU8fI#aQ>3`6-4T04>PWOc
%i$X?8_Z>LB<o^Quo/MeVDb-!.ArYW_=5I&dRC.^&m!A&`YfmBKJOE4J0<6k'?kF_?"^`pln&n(H@XC5tDhD.TUuhRn,RA'u\KE;<
%&Gue>\DGnD()*+)`?u<$-'S(c(#mD%akBn.XD<%&b.q?IJ83d*4SLWgJSh%91V/*9)XBG*>?iZf5c)S2'A,)f&$'fSQGA0,WX#2X
%p($4*\I)VOH=@^qAi)m[#C[gJ/Y\]2H?-OG?$/P;HaV:;ou<D7W`i:pp(!\ZA_/:Hq:qgul@_FG0tRh&O!YP(moYR>k8>Ouo!`/U
%alJr&j@f79TeF/,l!.&iV-0eJLN4gejiaPG2S45P&csEVC6;@D$r`Xr".(j#+P#=_<n#*FlBir4P1@WTj4]#nV6l\1$C7u$W@c#d
%CM[M:L/Jqc<;/8/hU>#4fS8/=!W19QCMLp$`/^+ZX=p[_7r^'rDBckeA9(q4$'J=K5U!o\jR":0VtBpZR3qa\p:b33&RMP<UK%ft
%QtiK9*BeF)BR"PIUsDd^rGFiJ#1WAU9uZG*D?^J[VEZVQDJ$[gZc"6u_k7!2\!!.`/*c)W)eslnK/D'WQJVVYE)o289E$lu,X:"3
%Y3R.m(Y3+jjYUS2->.4_<J!"ETk<Z,FeMJ]966_#R>fs$0ftm[\T?)[IN_C>T8qmtI*(l"jiTlU%'OL4L5;<N3O?f)#$E^1j)1D<
%)8E4M/8qP!Ss3D4-)9WX<Y-Qi(B7`UP(C>(^-uWq&`6%P?:g<L_9gIIaT.1HN&HQ('UBqXisa&[Y[(=^jKk*KaL)lNY1"WIU4M>T
%4)uoVb7NaU@"P:\k1n&.de$UUA7kl4E+\0G#UL]bDRT%@G`dOo<RtKO7<[\$?q!Om89Me;'H)Ia>fPnok3bKUD+\=?#>2O86uH$S
%'84H/."X/JO=BD\L(:a/A$9i0A9=(!k!EqiMRub0@m_:`K2<n*J3+.&Mai@.7o/q0c900Ac^):ZOBG(22@4Dr%`:>K+N&7K#.if/
%4,2a0SH0VO[Vc7f-:$_ahWs;gAmLl>:1MFlq:h25fPA$VrYS(GF)rGpVq!Wm"9ApAc-%$s0fG`Q2:mYF7qF7:6@1gG(uhX;fKB7N
%X-4S,%tJE&$g7&cSNEA4GU;KgSF@@[\R_4El>Y%Kc??j`/k8BS%*K$=c@tS/G"n/]eM62C4BZ;X`iW<*GnV2#AVR.Co,P*((c03X
%Nk$Eu<U[dDc%WH`i&Tp\BnXId3As--\ag^R%u5FK4NBk-,mAUpM[BKiRIe9;f%&`%Sn#G4_r._Rk3A?=5I2=_gY^%SNcegsVHBq=
%i@9jYg4eZkV/leX0a*0FpY\"m<9IP#N]Cp30K5G1g,VQeS^(`Po0RN2N2kW8N^8PbFG:?@MrKGfrnHQp?<OJn'Z]?13Pk6S"p6sY
%)afG'jn-Ou=eGiQfo9trX^&Aq!=rQl7]DA%'+XDqn6UYF#hqKS)_Y1i[1p9n*(SO^NNo"jLHKVrK2L2X(1Lga/[`lodC=&)]WINh
%JJk$)(d&A>XOA%G758,iN11%)SB;\VdC>2m)<3ZZF/CobV?FtRk:uD=a-,OP?rWA1+YiDn6'-.)GKX)LKeWYs(d/Z>@oacIi<7.#
%<S8qMAM7b@nNpSfXgZ@)MnqGEbbC49.kb>AEYhe%EH1F+C)&g*?&[[6c+,ME7o)TZbZ"shhF_$XX7?U&G`.KZ9rBR4&A4=sXMlm'
%g<m+*`H8=bERNk%FTa[:nZ=+HK:iEm`Yq%a%:q8/6P'DW`aWn,2!$)3@<&Wu&2/FMUu"(CckSJij)VS;S<SjV4r#*UERF_:Q)ba'
%lJ0cn3J^m?-f[m"9[\b2ST-N5A#CbF4rlA\1J9H;p<0C#;N/bB#-a)^fXErS:_\P&'a)YsM4<lt]71IkGMsnR*Hg'%`%>26e]<U;
%RoSBZDW5DFE2P&FUd]F=1)%^S1GNm?RN?Q[@e%.=B%XV5RMA\)BShk*#9U"q&iZkdE)pH#Y'BaY;IUJ+]`oc;1^l/h7S/P'2^L69
%N5W4Fo)'@K0bS^ZTQWNY<Z+$4YRs7B8S3(_pl1X/CrF[MJ>lepLgd!>d+,X^!AQtra17#B@FLGuJ$0naM,FL-'/<m]Lj_5p0tBnL
%^%)^JHm,]9Bo&en)k;U![)#Sp(D:12?_/[%X/3P$JJbJ^SD@fZikc^IEpsU',ZI6jdgtJ_>33mjS<oE(3VdXFGb\1JB+i'gM2."+
%NblAGKitf'[)7UMf6h-M7P6?04W%t?6)guqVRWH4,5?;W*(DD'D]3'b8a%-Ti@lqs,[nA!%a4(T7lS:n/;3krbU<J)6+p\G7VP:1
%Rqrq%__F($n=cfX/(H?;n&F!R_g"TtT&G=en%pi=`='Ycc8#enB@2\P[;)nn=1D'8K..WF7o0U=5GB.5atUJmdcj@XN1A`ZJm]FL
%6CV7?)nPOEnfl,CPdZkh#W=/X;[Y87a7W%VN9iIFS"*Uu<I\k&@U]:bi>$O0dg@af%2`M-3*Y@HT1O`6JVrih]a7u")O/,/qogJT
%673I:'bpKR5%,CN(HUNodear!_VcYh6/uLm#Mj+U,M@Uk!(T&=0Q8J:$ZS)`K>=s:_^:?<8plQ'$3-N@/pOd!-[`/H==KfM)FDDZ
%0./YdQsodW"F=?dre3u^oTN[&1+H]M2cPf',tn_[\R?,j>(37i&dF-<7,6:KKV:7?=LetLF6iT]2j*S12K,ArS4OPM2DjQM86?2C
%dcM-*N7cHjKFtjGo?&89Lc&XB:*L+2cd@Vk#X]OO,@;mQZ/Tj>iu3P(W#Ac0jlJi86^;]R&'dlc#3-5+Bt+q.',Q2V;g2?raY.a8
%g'I7W,eoV_a\\s2K19M=?s%;Pl^,_a`@\W4%H:cG-P>.En-6MOBnLtOR55"^0]*659ht2&^n`Z#S22#7"Xlm=%*%28/]a>7(rFD^
%QkYW\X;KgiJq40JmE-1Q;ueq0N@_Rjj.nQ8@#tq(jnCBOX9NBYVI4("qB3cXgkm9`/j-tSp(7s[+_$,##;h`Ss*Z$s%\[kFA#J:<
%BkAA`[s%0tKFs;(NjLT2Y\o7PH;FaBC1V!C&IeSj;NmXgJlApJF"d`lRBjaL+:/^;EKghs0ZE9EndC#S`&^,%@eF7N2uLHVCp9T2
%FDBF@)hK0!P*sK&5;7C/1c+oXQ/ZqObn$mXSoRI89^;C^fbC=C9=>gs'*ONlG,0CN&59?,`>V#rrkXh7&-VSHb]mD1Js@1_bfp^C
%-Uc`;(kVR]AA$'S9e9'j0Q`%WB#HYuS0=8,Ls0uXL1')D1d>R\_0B*QSRjS[lO[Gbm`Z6dF<(IHc4EZI>*S23754HT@#X_E&WBAU
%$7HaCED)b/F,")ra\_G[+d`Ne7PgSYQl@,XgPK'!UtPOpXpi,Rmcp8aQic[rirm2[-nEf$+dgKb9WpKE0S6#;Ap/o:7MdrZH"I=o
%_G99Z0a':[[-VA/\o0GP2nBV)K?HR^f?+U4W_2iT4$>:+1=M6UcLeoQGr`%t"1-\5m(hgt=]T^0"!\Z$0C7K0%!u]*M/`XX;$a,3
%EW`LVo>7JX=&R&W?j9)$,1RW=?pl5^UH,(QSjho$Je]+(\?/h1i0f"S4lZ["5`$G>&m-q;jb=?aL$i,_CP9K^cN.GcKYYMIZnZG(
%Jbe*skaN-NT9-D-$%]osMX]e_%sV7)VU5Dh'#p`"YlWm/m2%B_Lkpg@.U_mfB`*la^naJcl#e-N:':iu'MQ:\S%&"ob9sMX.c'3S
%$(.`PgtL$Vb]dE:cm\nthA5b^KaO2Er1X!sOp[QX`:KK+Qia#ohGh:Z")9ipJ2KnS7o05%qIe&''ejNpBK)gjB)N=BP'sZ5eE:;L
%>e#<pW<FCTc34WYcad[n^jIl<-9Q>M;i76]E<.kNO-$hl!COZh`J"[:;Pt'Q(GH!uei4I""l-r^bQU["-NQM&#0\Z-TFdV%(b14>
%M$k9,69OiJ2IJG\ioY'm.9jCE_?LDt'-#4$*(Wn;"&<B#)XYZO$n6$'B*5"2O[<[_VL[D(S_8Oed)gBGAAGd)_b/2Yb[&Dc`\)YS
%OKu=I$%Wc#?HWaD?j^!?IjP;!.In`R#gA<2Qt_5h&<O$o63tf[07XIM6=;A]aib!A\Z77doU-7ml\*'SCP9LU]8-j,1BI[A:%7S)
%&X_d#@g4;*E2pq)ClH1-blN9j"Julh#,_T)'RA7L'fjZd4i46PPe[VFf9oB9$29$T=trT<huJF;(kHB([]I&9!NappJQ@gf!i()"
%8@O8fO=&P<3[6=([XoO6d='h2cV4_9p3%0?$-^])=,9cVUDSONd46LsSl9J]VZc.FXXRbTc%@#nDAe!3f4+ED1BQT)XnZs,@(Zmo
%MRY>A"1`?grPf,%0ub[%KYXS?[\Hnj@$V97al7uhgo4#3`C:,,"!65s(II'@WV@S=<lq3@IVeeOS-!BW6fIR)%Tn!(Ej,R3lOjPB
%Cqr(7<k?][;[U^ml%%/An_27n$isG3$Qh&Ypi?QY0RmRIF$<tHoQB6t`oW<<Fuj$V%qYX6d=l_\B]1lE%Z*AKlSon=e"irJbqF1f
%D"C7'$pA6K:("W%e#HB_*GXc)=!h;\&#8K^g4j]'ao`%Xo";7.F8&"HGtnFrXa\^Pi$[$mK`\d=?GXne%-"EW"42ie@2!*$*bYIZ
%1?kt,12\;kHEdGGmkacXaGg"?g;<3P^7`#Jc-i$UG;Kb+8#)de/5H-/^X'R-+Z%hZ\UOZ?NV.K:8fW"$rH67mkPUm+l9)!BSVQS[
%G%UZk8OhLYLsIoVMt?nm6c\_NmW[<T8C$qP*1]R6aS$!^"u7*gaaVA1>%VaP3Z"krr?C#Kg>PBj$Q8)m'E-oLP-`I*4-Xs`_X]bs
%[cSjM_mZdhNaKfEF2(WNFu(G7iYV3)ZHcc.^>Z[kS/HdH\]Y;.YlbWEX3U1gZU,&FoY-QT*:1C!LRaJrmL-<HVIWK`^*"aQ,H-$Q
%>X^,IR=2nC`i\Rl293`--g1.kZC'8_U\,Yi='f!W\OS8&Eg>.`X,H&'^>11T09!WXQPt7cgspeYq0'd-lBTS[F`/+_`oYs7B%<l.
%UQ6(NDmr-0oCregfGlWLNPu]e*sc_6`##F'SLAi_muh^gn-')WcAabdl>J\60+#\?b^8@<,o[+>lnk,aT:KmmfmBV_.PC)$e#7kh
%]GD]?eoVdR0Be3hb'7Od>mqsE+RXs4b,mh.P1kDXBmW3ZXM(:Rl,pUt%/34=jhf]_N.AqtHf<+e#!6BL)'bU<-FP@M+]\$=#/^^3
%@8L]`*Db95s30+g.]T1.9f5(a'I-f4.!sX!JD)ej0,?RJFJnJZ&R'diG8C/L(V3p4=s-RZ[U.h;Trk\")A^:KK&']h!NQ9_lZBgT
%:ajl!DWd=%(ZGg.Y?;Sdk^"DFQ?0WD$<[.QVX('a`g\ou??/q/+ZWou,NIi.m$=9,YEqO9E$nrdH7;9>e+n;IE`[8moJ.IX*re$+
%0;C*aauEla3AfC%1A7lN,ND,CMas\[mtAC5;EA5>ibI7(p-RE4)ec7&6cNF>E8*7EL0]dnH3kK>%>Y\kC=',m+RE\4,:WH7KY<=K
%*L9Z'5ZChG]JK7:/AagORBed<8YbY6J2Ag0EX^;%#(kc,fmB#?et4M[mZbEGb@m=mg6B:(fE6<WPeDpDaZ0T;YH`\D.qLBmN^PE8
%AZl`R[1\_;pltE8/sO&J;h7$qN4l0t+q:t]!AE21jhfUW30hmFe)H*:$glko]o5Wbh'R0koeMEQFmj.CF?"+&=/YA\TP4_mW>(0:
%g4QPp*?ga6FM5=nSl`@,"p2=I\$>VSZ`L5q@HA^9=QG,tOnBp8A(uUAA.#D@E&X>fQPCdV?C?+:8O_??,O-:Jan2+$G?FgtKr,['
%U@k"/oFEIXFctTiF5oU8$ZOoW:0o&)Q/L.0H:QR8d=n6;1ug2BIblfdG1YAl&\K81rL'/lRrq!X3]V+c[TTVMo6-&T?)W$7pk5$!
%1\5dL'07d"$)0o$ddhE#)'m:fPo!_6ZoKQgpYHtOb/rD?@+FRmZ&;1S&c`^?iTB+7?Pn(!drd6.aNJ>kS:ck=HsNrb06Fk2QF#E`
%drsAUZKS'FN42uqjFrL.DWoG69,a[M#(nRM%JUD0rBeF1p^>6PSVNPY.-2'u]V(8gd,r3^Mcs!3lUJbGRPo0r?3#!'CL8K7+bV6$
%'YJtc1hFt/@g\$Q;<[C&r)PZoiWQor.an'5''lPMoXcNQ-\$Y$K")!QoXcNQ_)cpOhZ\oCY2nZUD8rHn>S'^H7"XJUpF_,d8l!(S
%D"Vf1?//"+ikEJV"7M7pSe:E8^H"2K&KD0IEP\+W#EQKu4p%OdE0*Uc@%=hWYluT.KlVC*LZF]3bI2A1`a'^Q8\B6og]\1R"eWfD
%bG(`=Jo2A1Cde*ECqC&)%^+W!Z#chs`G`Ld0^UV?!'B#)G!0m77(Xjj!kZC)B,@D'oOEkmG8\Z"Zg9<&+(%Q^OcIdSi\>7"I!6:-
%12>oj-/#,Z*74uh8u+Vp2+Vm.6\gYJ+kbtcl3K+*aY&m/@rEX5DXqWnc5aI.0B:]=J<W:DZ-..kKK:_*].eJWBP=g_eiWVB2i_0:
%(U#@00'tL`r*^SW9Sd.XEfSsGp>$46I:A5mAK1GM.<Z<fAV#IillsmDFW9t2Ykf_Wgt`O37IiEJh1[&(5jN'B>o2ZYMfU&nAJ(i/
%jeUI5:64^o\Jgbq;=3(&L;h4H9lGgS]r&>"j;Q\HV),A/%=(8IS62+Q'D('UXNP"FeN7Yl>Xf-):27GQ]JUCn#Hoa3@oB!`3jVm>
%0$oTc=Vip8?-qk7_OZ-/[(8AP'gY<ib6Q(6A$ii;qa.@,+>W0lN)j$GRV*(5?09R;<cP"eA_`jR$P#\a*K!p@?<u:/=o!&5-((pE
%EXGuU"TDPTAZWK@HVkF5c)SsV_Y\CTh;m<\33+Z)(8,+iXLaX:XrFDo"k5ELW_5L1RY_EQ/knah]<gch^rg,!eV/P3q?s>VI8m?Z
%b,S)?`mUNE?6<?\C1_4elI'=a]5q.]%!%R^3304E4%m8mlB8CS9G,RMWsSRNK2i_U!@jQHX"Kf=RZcg5U'(qbgn_NM:f(0#=`k%[
%5UacXFX\`]U5LE;:TGBM3me$0d`#:*XLdI%9H#f/9"gS`/R;J$!R3l/d7JJKqjX'R(W[VO6S=n?i&5*=4IX+/+HqMAl6>o<O`DVq
%Kp:?l.]G%fQtSK>W@kJE$pe/iFiagmn't!P+eXt\Uq.6?&:PeQ,rZGS&r]dkacb_U3iOaXA&6KZ<&Z\@m$q#k-,F[rS5`SaNX$Zu
%M,]g%1mZo6W@mYOWnBX8?*NUVHf<2J$_^nO3->o1JSGWh>m_.,\T$h#8g67Xe7CGM"QS!CcUg&!fUTND8Lb1*EU)NsP=NhWF[L-,
%eD4$_e4'*?E]@3>,(M`#/#P!T\MVd0=]Q?[.<X\FR8MRi:8jXQR0L`c&aIBO]Fa?`+cH2?-e)_020.kTW6:^"D0`>tK9S!rk]BQE
%UB\3I$$DXQe).dOK>YFg2eZC6I43\OaY3-b32.3Q>nW,S[6-=S?(?Pn$$@+*RMS.nZ8Nb,EBlm(MNSB-T.];mA[]ohN)VYWN)(8)
%4&Us]V[EM7UC3\HUeDC\T.U;Udk1B;.6+]0HC?lte$m>qbHro'>0a&SbT0=[YDg'fhVH9Fa^Rk;KV;VpP#.M71X`S!$$D):aNAS-
%Eua&H-CToj(B]b'KO#I<+XYf^0^;Pf0,'S]PRs('U"!Y7FW/.ILDb&\/DkSB>t>eI4&bFm/7hl5.!8*-2MdiCI[4NGSnCgS&-f$b
%f.'*]SPtk.CmJ:'?&3WF)6#4kN#i,$/t3F8F!9)1Qs\!-Fd7r'(sT3=XCbIc=&N=5!=ts;lFOEIeK.#V9BHJ5*1TTC)'NT`\!-*_
%8<e?\A'<sJi3T%IFm8Rp/R6#FSs)!ci52G)V8dD+9h^e@`V=Ns)<O/7$QuXK.Zqc.:04Le;m>N'd&3f(A@`$epNj`RM]``"Oc;uB
%.uZTXFJj-Z>`!Pk366;ZN4;,u+=cVD\o>QlHdd[=(ER!LT/2#,$kciuZ!KG4;(RRX#c#bc7OuXWU("VhNODfi"M+T"K;QHZEtM_G
%NNlF2Jf5J^Pm`!mKThq;b+=Mni%]jG(PMu?)7iZ-!f2m%&uX$omtDI.1$@OT.\\T?\YL@6\`(cCJD(*D&U+Hc0qF^G^Dg*,Yc!aE
%(GPC]-",8@?k$@c94u[X@"u`BY3NGHec/C4><96(5P+!Rg;n4kN%UI/p)PI3E^;chO*O*Y>D`IuJh%YQpI7n`Ws4+T[8^5)>Y"mM
%Fe[[.*=_T%aXmeQQ#]6U>F&`/ac_Q%/X]FPbTIYGh(d1p\^dYYS0F;>[P`X[(GPo9aCg*06p4)7j3b*K#U#'I[i8*/_N#!I@8]RT
%Mj'GR9JnGL(mDk*)RgSRbF*@>m9]"p\BS*M'/;,415t-10eNGG(plbj$\NJq.k**fY0=?m-giZt+/d$tXFe(tiZ^sdQ0jlb\ANQV
%S.6@uJBZuhL'rMAo5R6SMfg,3g;\gS-lECLc;_;u7]batKSt&igoc>t&ZA*.pVMQ@n/eg$:4p`;]$ah=J_67Ui51'"D&3GT_"G9R
%B>EoSUMqBlj^&a7"oiER`u=nn@7>COZJS^C+*7!Wd'FopBABtu"QAO@^*P^.Y/,M?CuZrl^24(e]^XcE=HpRdW*p<]oGjsAXm!J#
%(Y7>U2$Ha$$aYcGm9(VD`F.I<nk==%I)IGLGRFuq9I(jq`G5H;oYPe[iN[^Uh1@5".VsoW[tVAZF="PAZ5Vo;/M(2R:3DJe),GEf
%]#?`k'_XqhgO`k46nuV''_33-/'T[2T3)K!73s8GlJa(uW37C&n!W4%Pn1D/`N?G-X^JY-lElU&^MWCBM<a`Ap^K\.B=GkKUTQ,X
%D+5l7BUd`le5!Tgq;CDQQ#luBCeG[o'8"jPL_JhhS_+]&2_.,[k-]&6QT@%,/XB2"P0Rg#d*n\!\=:ukZ0"5e:><pse4jWbFf$DK
%`+[ni==>#'P:`h)BT#/Re!82oUBu[3Ze5BiMY)b3fj`q$,G3(o_)VP#L3)#l8uYrl/4>!ijDi@R$eS807(.mPk[d;g_]<#U^7hfs
%5m@OS@'MRCClm9N\m3DfLFkh2V/?WEX=RorfHTXMq@.p+@btm<qHAh^mMB<u[:14W/K-d7f+p5cS@^]6qX)e?XFnNC3]#@h$dqQ7
%f"qG2;k_[kU*f.r\#d!qqQE1gMko1&"rNRSSKFSWc^_BMW>Hp@CD!PQ4h_ZtEj.)sD9u!\M`AH!J/`8U"M+tk0d/]cN^(2X%])51
%h$qe9^__M@F3[tPXE)HeAC@>qb\kF(GkV2_3ajV?`IVrI^07g$e9.UgKn=nb@;N?rW&:-I(;Io&;UmZu_E1[J;O.U`4&ITo=TDMe
%o@14GKJ"=9"ud95'BbtkTo(/>2G<F2Odi0Yr\n2:eolWM#Tiu!U)$).:M6V3[^gu%e:PnCs17H/&O=Crkj5[T#@d2H)Bk5u/D#TF
%G#$jNeu<ASPLV*pa4+qIKpWWQ4BNg\lr.>q:.sof0<DN5FAgh$bHS=tNikS1Kp*;1d@rTW$>7d`Xu"MGmkZ,h$_<?E1qK^l*UPOQ
%M@1@T+LG[;0eupOb9==\A@1EdbN$`64)EeaVkP2dcuJ&J%.o_'Q&$2LY/XgAaP&JnG,M#;DU/VjK7t(L]V;)k7QL7UC_g3//CTl:
%FrI'8;p\:oMTH`LD&;:As"#CjXZHD3PHW,3`>)76Zh6XKlU4=i4ZfQY'BIZLdq7X*H$1r9W^&BkdpfSC'@5Z^ee%N:SY\$bTUc6r
%0)ud53f?<FQu*YffsNc-A&TAnI7J>'=dHY[/)r0?R1NtN_HDg^/Jp1U=l4&l8iJi&1=OogQTI<)2ToR:2K-*;ND_a'AoUJEDk:)G
%hlp#K68ON*,e:uPhj0R>36>uYEMf+oT%#TOfkG.AkEGSlIc6UsSl>H#Q!SV\I=8pM40!;:?.``#'>:skfcDoH)Rh8+d^.e,b7<8?
%4d]eP37>tsQ6"!uedVcR3-N!<'&=S:bDW^LMEhPO0;Po0,0[kPgCGqk[6isdS/GnI:^L^FZ/>bKl,[&qFQJ]4d&,Y'Rk2]tS5t[d
%8@=>Z/!k'X?;>?:Z3995hj[9ToY)?u:1>EfP_oYa[J/pELrNLo/N8/*O_k;=#S("uf3/Odg#7V((BR`M1kD0@r`FJGed?Q,,cEPS
%]"i]d4K97s+:F?J<Y/;Na4@=rRp;q&/"Ca[U;d"a5c`"d3OThcnNn4R9b[3F/bS9E-`;s;2.I[k\Y8X#f%Al@23tjt&JtP6/'?KE
%_PPqgaJ9mDa`d8Zg5s2gSd>Mn'Ef$eE3lNAHHkMEegjF:fta#W"O*pIX(fjRZ9gU>)bkOR;8>EJ4Qq(cOVrXX7IG/)@8I#C&-g"j
%JqUWk,q_EHL-^#D>I7Gcl-oflAMV0@eY00]I._2IPpgMDZH-K;C&<D547fm=Nb34EJ"Q%Q^4QPH#%M'7`B0PD2Ag8C``iQY+<r.7
%&kVFcs%`NmWb2OB%#GuVd?AVaBR6K=R9jXAbDu@0,2sGj,>HmNN<rBB%u#.WTLRVY,ZBS,.b,gb,R2_m!<"q='',SVlJ!j6;$H&<
%`&#m/Yg(8_-2!L+J/!Mu(^r38EUCuHT_tM:&""XpeP&NgV*S#fJlTnq*gt^j^/R'^@:<'5BaCpfU&qV(F2,]+/#jGUG_*Y?Y:iKW
%Jjt8a0:Q`9-c`]W,5-P#;LLlqh*nHu^8^,"Mt1_LC)0/GN>WIh>"shP-]XA;]ssr'-dA@7@Y,h\>0(63h`^tp1JgcP7U4s/7ocBN
%9!_Afi+mTdZ>?9^cl>%u0]qq-,)HZqSr7eq$urZW#m9*YNOo[hMTm.n'M+q]?O%n3",akdd"9UERLNT!GV:O0!Lt`J(E(Pup]ND@
%kcb+*,*L/2HB*7;ip)Vm=$0flDAJ+hQ>FB>]9+Wq[+OMq8SF=raULVP,?"j)!2ot,cr!%[[_X]F6:PEF]mBL/J.qEcHFWSkLo)86
%pi`#6F+Gf060"no9rj7PSK5(^0oC9M4Y^,.@AN'J2'^TRblh?@98N$B5S$3a$0D`g9@@jH(?^o\1ItUXUCm:-?tj^6.AY*<->br4
%gfS=RQp2-rV7ZjWgs_W=#0l,B+uP3Z)Z*7$a;%=h+G7NEZs>au*o-kZ+j<,X1_VU0RPAe9KA]!?9ftlGGtIg"+%tu@W5t!6Tcoo<
%d#k@jd!+-0Hp3=/g0p6!=AVJWZH,lG"@buh*+T\UQfMRJ%#&7[&-giAA?7D6HRQfuM(E`ppPX^NLY%GQ&T^^-]UG2idVL=-[Zj5d
%U5'pMpihbRUYfq[Lb&i`[K0'f$^iH=(CI+VI.X#E(5-F1M:%5>F[>4t+YUeI$#N0ePHJGX[X9CcbTLU3Hm8h`'=g4\T89m@`=oH^
%QnQE.V-8PWA'%]gWCTm)QHcb,5:iTn899Yc`>'LCC*nueI4JAX%H2DQdD@(W6Khm"W?[K;$7\E.]%E9G%E';WA[f`\%]IXD<8#Kk
%1(2>cFs8+`1$%`J,m,9\!*k90&$l'T2'\L;#FD!1kI[Cn"uMc6!hI`uRR<UN4eX'nR6grVW=XlHJl*.nN..[?TGW6t/j((^2qEgb
%.7Cun;K9br74'aX\Nip]L(jh3WK4VK-lN+3ZHmGRq5>-;b#=D'&JR8Na+#KN%(L[aK@"`>;"eR[4\I\7H-ITGLsSF;%-:<>@R-fV
%jA=bHJ5h.&JoSRZ'nd&AYJcPT0;!]d#"tg\nlS%mYqbiUfMp<QPn0\K,^TH]OH'T<m`PTl:1qItV?<ZJ"J/,l+AP$*K#\NJcO9qL
%<&*q\HG*qo;!9jfN3jX@YoOTOP9!(AcK8ZheF4qRbE+n-/r'YTij#q4QjYcA1ulB[FBDPP&ZcpB7<TUrS[7;af79`1n/nS4WPsMn
%J`K9P&=$P@mHLH2<uk\.gudm-9PR1Ap,I"oglSNqdN[ZeJSQGWduj"*R*Mi^S2%./$#kM=)H"tMR`CYbAkBBD+8C*qNH:o()$Nf5
%KNo@]A4R't`&+=+3P;CX#sm5[0\Z;"F3k#k)0!f*ZJk>p>W.Vh&7QEs?lZ!d^aZajZEXei(=c%H6_R$.AF]o=RV@Tqg1S?=i':s5
%+VrV[]&BHBHRR>,Ee4[\-BSU\$`%5@Q%b8rIuSoMpIm/HX9DL5$WiccKcDAfeTBKRKGKmn@a)MNE[81ZYUQa;.g$7"<=kt+V&5<R
%i,Ehp(jg'I52UJ2ihPCPBWn)dq7n2(.Or:r_NG;C<V+WHGmo5@>Pnpr'MD;rLl9+o$l:LEW]Pkh"-HPpEPrl,T;eiQkBOXNEImjL
%4C642Fs&o5VjYS:B97A!1-=,:;:.8`:f](P<P0XHW[63i@UQR9F?*T!.Ad^s2EZFHT2gG\66G/-VPR#;Gldaa="NW'V1GF7`hJR\
%3/tS/,fD0a-/ReLdZIN&Kd?tj,#+PCkin9#CjctJBLMpM@\o12Q]tUuOTu\aFiuI_>d5@/ZuuOWft;UI.7U"?#h_*fiXYQ>arp(B
%3Z647U)8.k)p3CP"^(k-@b['d*m;\M;\e@&KT6,fKXb(&iL':4^+WUL#Zq`iB$V.e%@iU>4kWT'Ql@utPX>e/aarD3&qW);.1\N\
%@eRdr!^/h%'k*4kBH0[.As%O/+:/9u1m0[fo)n8)5@)4%\Ql;Z[J:bl?'$7-Ct_:S2h[!/lQn?cMAEp6&!7b2dDBmN72G`t712MM
%GV%-nSmW/`XpK,h,\=Q#`V:)#-!(;V=!DH(_M\XbbslY9m_Z>-O]\q1V9P,N^1?HHejea<E4/[r-ju-b,-tT%]X4HtArs4;\XmM$
%0T9>;XhN*eC+p%c't!\.24LR<9GipMjGf<MJF45mRsbJ\"c3%uKHXnu@0A\L5D9CdooG`8RWr?<*PlG*Ln>9gGU];@?D#7k$a<qA
%+o2%n&HRFu0+_8@h#iMG"q_l,q[o_s856Ws&?]OYF+m_-H_q8qH0bRdUUW9iBG&k&EM7Fr7g/]-0o8hm%BWDs.PR^9PY5HQ'_.+t
%\MOnkpa[B2;un>J"rk+.J5[dt&Jp3@/B%/-Q*=>@l&mYTJkR=R^h.mPWoXF/K\;Z9'gbI5"N<+\$DOFcR40=Xg*53J/q]3*d?/LB
%Ce_'(!$l&3,06`%&g%Hk(rt)OW+s8V!un+gIn2s%acOHXRr=5#_Jb;Y@UufU@uC4FTa>t@k0ObB&VZl`R7E>U/J`K]*_7mTl=?g%
%AEuPJQH(0;8EZ*-i8UsJ!tdGCF>G\s?pPo%QHTnk0+5gea6'DB.5XL5iYGt>;7#@<d>]#Q#lh:-Xg,To8dT+ep!gX3]Q;g'^oRpR
%Kb&[oN<&O<Xo3qKNi,6_h=_`I(:XXS-LF0bNkc9)4#ScW.S[t_*oc:8]PC.<-]d:uknl8F(:4pTcBRRWNlHJ\_RuFRTub/30[ck5
%-6k>mUeh%PPV7l=H!3!pFU*]mbWXqo:nSt+:oU9\:,!kfe)MXqR\N80LX$AjgDsUb1&BfBB*3Z3Qp&KTckV=:>Qh3ccZ;!I&hGFj
%DNpScWAS)_#jkMh%YJ6R>QA1l1R/k@E^ZV;dt^35Lqq>B#qd74_<0Vq"P]#_@j6Zl$c!'680uq9BWfC[6TH.O9]I7PSIDb_ApB\r
%-O\=_A7,g<i(X\JY38M-Wf+/6E>+puISqtC/MIGcOV$Uk-+$s/%T3\"eNlQ+%uqjLBYr^1WD^/DY\Va>N(0+:C8$"\%+Nn-(47Kg
%o<-DP#'E<C1VR/kYK((91gjF\j@[PkUDNCR#Y??<(]g`^`D"_hn<MW;1BX.#"^W1dZ?^=KNlQAO$@\e>;@YdVH(_-j)3^$D%P^%0
%n:G,^8W-#VLCup]ihsK=e$&phAt(Y8P:<&+fN_-.G::7a)W6.]L(`8*Pn68&:MRc)ZUj\`(*mPP9C5h"1ka(=`%BfAB<tY[<dXTW
%0]-7k%QV:oSi7#=)1/)\=!:^6fEOkpE7!NOoPurGRp&.DqPfbIiKTU@_*-a4`Xr+<:8u4p(DJi8H6I,$5+;o,#o7bPHa(W;PsAip
%4q%YQ111TY$WF8i3p,fS-6j8,h3ar/W^Db@,Qi7`mL3K3;;dlOFC_fP*ATfU%5cilnC=D]K[%G/Zr3\IW\">J6nLCR.>S;g-k`^h
%_o8K4-Aimb+L%Wb[KpZu,.0"=REQrTV^95GHU1MULQs]OiPZo:W*G3:V)/no??1.Kk+U3:!4mlg9:j%fEaZ=%U(chc=q5nD@%Bu.
%O\s23=]dVnU9M/!!YXM'mP2sa&d-Sd:<aqE";*!sj29NV:4%dt6k9#ba%R^WqhSZ%Kd_OCj/KMGp)_ElOJ:r==W4$o3!,P$]8K?o
%oH8[lYpd*kn'$s4JB0UQf`A)M+cPcR@"]P)MHHRlZ--2M$\q5`/&_n@i8iAN@^p2)_;AAsa`C9J0asntafI<uB#gZelr]c=Hl!AV
%bZs*5=VT)RjhGK#0c6EYl**FoPD132.$i\]Se4TFJsC1F5L[KUV38>ULSV"GDF&(eeuo=V'ZC-B=qCfr@oZUY2]Tao]A*u%B[?ur
%'WM2&gANI*Sg<Q&9C,LA%W$U!(l)ct%P6H[:kqAD.:j-b@(XbK/dJ?J:e\ee#@2>?iB(!<OXp?62O;ghl"W4gC8!m`C>nNfaN^Ns
%;DUrs&]aK&Le=!pmcI0Y=[C=+^ms9rRLVb%Z'@.I8N)M%h*_!WaS+\&S.lnnf2;2d'^XDnW^KqY*8(aKR^(B%>MLS[.083DnUj2?
%$[btlE!phQqF9B(mu0'[l#@+^q8?a3jtI[8Y\d77--Hi#([%UK7j!km,'GfYLI#C1"%&eCT-.Zq]FsfW@iNl.2+MQ"HP#bgW$Skr
%EA#,/7t"iR%N[E]!8\kJL"%t"6R\WTDTRG$4_b9)EKqae>:u1c;//Sj*Z>i&C=pNg+QXU*)6hF`?(WB*11cAq`c6ZoeHJ8RD(am7
%EQFI,LO;i":0M@li[^jj$iV@.JBq\(7%jf,ro,o(F[5Wc6M?JXcAdnUEJRc!"6)B_#V:Kgk]cm?d3,V=&i_%!Eo;K_b]-I_/<F_8
%9XQ'0$N5_)$Rf#:Cp8Vgjq.`4E6RN-;iJ2\&^%Ib\R\j:#o?ek<`*fuH/BX0IVE+e%[(Gs:ob\clQY#JdQJS;IOVr:rM1aX`^&*$
%=+f6I"Eui\dDpnBq'tBi7/u=$c0Gu[4bF4GcY2Oa`+D/bEkXZ8BT>E3e,n8=\I_k2UaQ5QMZQY?Phk,\!jQ/V#DS5^/G^B$lI:@E
%%R%Z_:+rtFg-N%uLK#ge#d>bNJUN;>7U`#A&K_%kHL.s?QTZUmoEOKh`AeN,P&j%fM)^/$-@D<=ilI*,cQU.l8IdJh`!fe?idoeW
%XW9c)*tVFP,4eDT1c[t#GfI*`c$8<6)s9a^#"jO#@r[F1B#[eSTOs_6>QimieHM<(#Y,dqJ:Y[X<%dhIej<7-0U40SQgAg1Ca4BW
%:*XTfREK.r.I@uL6BRtg'YI)f6C8nMJFV'"9Bli&+p9#M+*UKD$0^7",#?j&Y<^gfOYR]Dk'ia7f]Wcu+`6pLLYE$/=`,jfW)u);
%fgP-r)0[sM>7h2gAKn&VV'Y%:@3;1>.EPneYrY<WSXI^SJTO<E:23)V-\N/ONj]dWIH1\=aH*lP'0Ph2-W$N_<NmZ;#^D)7l\9J:
%9cN/AJM##GEt>ZHEkb.>6\kcU6PNX5W*3WRMjI`m'b5m5'h3D)/Y[=/2?fa&6dSAM2@;m.r9i889=,E.5QOr-q0'<5#^r(QcrD74
%2Xl^"C'/joA@HR](//H'=S"dUl6q&j!@K[i_r#,^8d2p=r'2iMH_kH:Qj$t+F.&uh'JG#t#YO:OMiH-jfqem3HR4$oWL:t)?qpOB
%a,^dP6nP>R7-1@&51Vt+DL8ORekjKC(?YuJUeDYC.LP2QS9cSo=_a7_U'%,9ZIr^TE,[]Y1^oaB;:oQ:/!"N1fL)S@8ao"s1aj<]
%MptW>1X=k;!$ek\MFkV-c$ktLH+`F!-=NN%U?teUDidESm&$L/4B/i&UfNQ$*<egI,Z_3o;Ap!f(N#:/752esa#K:d@R/6&4t)^E
%2O#gYh8uHBK$1l%ZnR)`I]terJk%<2^UY!4-a!LN"kD/W6B:iY.5_.h&GhcRN!`TNNPM"i*RXj`?RUN^+Di6qYGk`uBoXKU'm4/`
%:i+6+T2207LoiqKo]WqtEX1:k6=4h>Ca#t$m+;OB&?oTmk[RM.8aM5^+ts<P$VW/=Ei)$,-@?363d`&\/8C:TETj%rH\FgH3PE]P
%U^GZ'i\JsmL3a2nj2a*(MTF8s@U_/h/c\?Q#P?66:?$92fM(iH<PYn#%`!.n;ES,;HK=jJ/1Vo6%kXS,,3B>#ASfS7dn;\ch;ub4
%#4/p3\jpS,,N5h^;Xf)*V3Y)ZngpmI-sf1pKN]@JQl!i0NNi+,+jD]`JtJ&![`[2e1V8YL$&+!8e@$[-a;&2tPl>Q"?&niW&6^Sl
%MiE)d76gZc(ZY<XJ/q,fF@-[_,ECn\A:(bSZ-"(HXGK"=2$>JAAIQj:-To4Z)$>PcY&E27@Qb<Vr4F3(@j;ckUJOpQ^&ij)Pd3tX
%5K?c!!OW&2`gk0`M9+nh=]e..#_;u'kd+M**AJ[V3`)*@;3r.i#[8hdKR(@>iCN3Q)]A0hPYNK<Nqh*j$eu^9A:rZba-&tYK\a.H
%H7:4k\74JbUbU#nJ0,eOUbV=#aNKX'U`F5UN6P!%d?m0E;HehhZb-ePP57Qn?Go-m#"dCM$BqKkj?1Aq_j=g-OtT3V,;hM\&0^qg
%*)T0r]+2cA`iI2?A4d>^dW]GAV@g64R"L\aEa@?ecj+n:Yj#$)qBg@L/.([N`I89RFl^`4@_\h,d-.(*]nUnfYdD8T8%)*u"L*`:
%_V2f%B"t7>K:)*;RF`]K6U.Ir_@]GGYEedV^_%ZdP]M[2F08OaM?:n!F/@eMVaDTfbfL\\D(sH@0#8>HmL0(rQ]DL'+13DW&.Rdo
%2]6Y=fQ7Z?k=L@L6oj!1$fcGd=(!ZBL]HL"+KECncE[n'NQ7q]o0t.\8].SQWJKWg&dhDX`@)NfNad[bLLO#T22$3\UH;U4"JRFO
%oM;aE;@=SDTd*FEFIG0YU8)<?VOf.;V=22nofNt:e>#\hWS90:7D^ANV'FBr.$6k,<t>9b8dc(SG0)LXPX>'$/#=nQ6:!XH<hD&3
%"T6'pYJV:gIjm8P&n]8b=Rp^RjG1f_#rLRLL",+N3cYpDJmAN,Q]=J;67,.nY66Yc@Y<lO'5^Le$=RR=%7dcLiYNV.@Mk2N&UGA*
%,2aIZCF"Th8O7t5'Y)RG5e<>9PC\E&g0*Md&Cr>)o+7'\%5Be\i"XuWp/K1SE6K"!e<bd"WS.#+\rLS%AM6KS2#d,(@$dSL2KAk-
%/J,l*DIeF.KQ@!3V%TQ,g%([>c\)`mlG#T5Vt15g'nirJ]EdffCu@a>3-`$25gMj:_3;d,'TYM2nhT_=6,7%]6SX#I-qCLu$1t'[
%:dXkm,HX5]?m>pDF=r&)Mj4uHm6b<?.-=A)i'preoeI6I/oC;%#nm%R+cPo3.*NBsDhLo$78.F^Z'#Xt#AsS[15c7diDnm'<*Iki
%>uUh+L-&'+,NoEJ#>Q-3;NR3gQ4;.noP?Kke4F/fjQLRb=<.,V@>'CZ)fHi*[M7/IC^3V6V?SrJ#B>9&"pRpCQU$-P:ThM..`eV'
%C3[*&qmaX[(pQ3-V]Ho)]F?10O^o$HQ`*N=?&@G+o/h"ePUSJ2b$5cT[KDpJOZ#kiJVr!NB#r#j`gk7#qHR,A[ReU)2$npP8I,g\
%ULF]m'E<c`MGQ)SI!G*)%aC&BmR*+G>=-$O`"%qh&`$+-oCres&'mMB*^:"8WJ0pk,H)d+\1i9MC_/YYk(j\@@MS]*<jpBgGiBA:
%E/H8*d9nY/_StY>;H=df;I_G&qi],(Tc9t@I[V2iE82nWIe`M$ajG.u1r\88Mm!F=,2c:XT+b`s$HF&&E3(0#O!>BsMiH@]i&G'h
%H5B["O*P53.HrNp1U+A1S^90]T$;>JRLuofgC#/\LMHOjV)H;l9.f\;g(K6r(/uY)(Hs2bfocSOUU#$BQ:g.EaO0PQ1DeWHfN)ck
%O@Z@U^N:bh/BL$[mDkM`/3%KVH)i)9:k``912dnr3`=$]LKuHUqpaQICZ^"0\hXWZoL]fI7'eJj)%I:aLs40%aT\%_$+Q.L]#&Y:
%+d!#pMQnR-pAf&QfWT"M0d/`:kd.cV?k74X7j"[Dgjl1KC2edKPt\Y4ZSkVW=NX`D$a^5Gque2hV8ju@FZsq1f`:E$X'Uo3N,O>l
%(rXWe;P8Kl..727l.YX_3Dt9_N%bk*d'.Rr!ZGOjeM(&[>C[&j_0tH:0ju$o%T&\6Q+`#JK;jXCeKB0Q`Z@cU"#(LEQFp`fQ.Ylo
%Gp]hL>%%E,K9VZ,22#G7K=MU:"Tb3.#jJF7/U\)"kZ<eA'iUnc)))ZXK;V1!b*HLD.<'tM^GljBhDiKT&9G,a\['k6Ub1TK6DS7k
%+$#SfS)#+OhC$^lOjr\rWcC?XVj!bN-=eF!c\fT$-RGDK^<eoWe;,eGV;r5eoW^#]U<rG)$mfeBC-3ZV3tBp4CG'0+3hZk!jAH?s
%,ug!^G5/t"r_eXhR;XD!'A6rm5LW]Plt@V0*Kh2KK,JkG#423GkDPjeLdU#48X`qZ.-XEh0VEqfLX^S0dZ=SE)WM+bASA@jSCSC"
%cSt$,g'(Yf`e(!q:.*?=UbF[D9oFIF+s-V%nDV#oH#.bg.t&kq9fj=sM%i2]`sXUqaAljkU6*W%Ei!Jn`":pB@M094-p#uMlnn]+
%c.\m?/!^uG7p#Ar#YYg`gHmpT7ZB=NZ-Rk7#IQ,q";,^\]:$BPn%$/POaC?$Qm,-^i\(:a+M^Il$'t[e]f^a9-Faen=BF>fD[*-I
%,U0#&(P\X0Y;Atr_?u,dIPJ'>;bQKQ/>bH6)PS"cY`d(smXpaf!f8n`=G`-alL:@]^-T&e"(/Gq+-q%-TTB^,[l0"o>/VY;G8@6=
%<i!`.UtQ_E8"KjPE+UGdj_SgcLeaC;k\-Vnb)I]-0To4bURPHHR%lKWl;If1!g!<PAtU.,'MH(f>Uf;o-m.*("iGW+A77C]&#(9l
%k`GfF&T/<%C5[NPLLfOi,mg$;#NQ]S#%Odf(!>Ckg(GAj`=3AL7@(0.6PR140QX'W*B!^VH.cQKTaWPD8&F)uYmaBp?HKHJ,l;T&
%BuF1>A3Z%&Q+SgC0m2b)(R#;acU%nN>YC*3NgrIiD^)n)U4q9]9X?>@56u:M4h3Ye;8iI>bb+#P3/BeZ6A_,LBd>lgQuTAI,6\ZV
%NEufSJS)PJ$7dARK3go=Fsh%`0K$/D+l(DcVH4sH'pJ\0Nc"bW2B"WP,?A7nG/#6BQS`K!Lbiq#$u-V],/6E^,\(qLkSX_V_r.pK
%2'uLHVAUO?*45#ed33@H,.7ZuV5?87>]bi6Z9sYRi+`">HLUM`&`f?6'e84"c5EIW<oc']S!b#p-hJ!gmte02K$b/r6%*RE`&^d9
%)5Sr6>`H$]3/PNG28^gR\\ja)K/J(mSY`DGVu@lXT1]Yl9EgqPcmJ-"0SNau^tGV%L0SH0Hipi[>_k'k6fU8]6Y3U8:53.E-)-,k
%/1J:f-XX[UaQ"Q?$j$Hk\mTMi/_:XHg#>\[<^\0Q;/h`@k=LOh`o(g!%:D_37+$.2:.&o6/MJfDqVk:m`&[8^l:Nm<(a%kU1!7j2
%ajPAW23#<VSN,%M^"#XtAnZHoBmg4Z`'F_:Z6M8!Jc\9<]:@13"VN(I[/n]t0b9?b&"gp'2H23P"gm0"3%-8"_":3+X>#j0_%&Q]
%(>&]MdKJPKL+Ek)/K>:Y@?F2?I#"0(OA39%6+8GS9qi/q4@QF+R7p,:B?@UhP:h7eloW\u%ZP*/f8Z#Ve;$_R+BSKjm!bgB03d=c
%-hZF%aq\NA2te34WZq):QmRA$o-Hhi8pE([bg0f:+K6,C^8%"3+Hcd-e:NJiC;C?@5$Ol.V-KdGoGW]=@,HLp.i'I@L(3G*fHrG/
%Ckqqo6\X>UiX;X-4:m9q4oqp5a[74p=cZVh/[&!WoO0d+k8:fK/6W";99@jX.H?\AWA]N-:e1ro7]=rf0eUNXF`Vga'EEa+*5HJ5
%c?BGjaB"le0#`3]@=L%EHLd1$S7XD<h(DdX[Xh&Z3,9H:Kl#T3Qh?niiYS^G-:V[B/5OL7Lk1(Vh/b?/4r\CuY]\US_\!gH'8+o(
%K1Q,fB7&kMVe-Wj!!:F*n)+<t:X.ain79n/R7Xhh_hmC^Aji)7n$!SK$-i+R?1DOr=HV`:cbd$@N/%H_nC8.%_3U=34qK-ofukOu
%/5@YsQ@cu#?sE=mo0aCJ,pP7tPSo&j4QQ9!`89MnOS)(N#DBZbG/!E;6WsgdEcn>6[QPZ[`%nFQ:m/O+H,mh?5e*H!<(B7ZO9+W%
%=c+#1T[4&RJAjV[.%)dF=TVGt.;?uF1^GAf#\dNb5:gu^dA=+a()p^"204eI&i]r4FJ8qNR36%HN*Ju_a'^4$Uum:WALgV7#,*Z@
%nm3`:Mf]5MWEQRFQWu.b`0!S+Ce<a.RLd9:)h_Iu:p[)\$=mkgE'h$lX?nI]TqV8$KLj@LIaF%<J(G?41=`non!$YhO@*LOoGD2B
%(_@<QN[gWOOi/B)TafbL-O^g*PY>>P/fI>EPg-0aG^*J9:SVMa0sm?!\PA,r[rP$)cRk='9sl;+9FQ1cO@qqAMbk6M9jW_"`SO&T
%`"M=UdWpm5A.bouGtgE/@oOqa6qHfP9i2EH6%Ssq`n5rJ/+=`Z1U%I%QB_Yt3SIAg)Q00l%Q*+L#<51-55M@:F"Q?S6Hk:'98goo
%EGUJEUO9/iG3,gqKGOXdRA4JUlH_9g,kIOf!#K]s]*gV+Bl&/@F7'%-?g5*j#;oA&3DJ'8jlj->8X&g04j8V=ib&pg\]P)_RYVJq
%?3R-XJF-o^-l]35kt"suUXCBqj2qZE1WtHbB`Ks!]^\I[Lr$_:HD\L&b?]kT`$k\E)6Z6%NksPD*lH('EgXPW%UFrYo;14YiW>3=
%Nm)7$@oJMMN6.3Pf8..r%M1<K!)a7E&9UMqC##-]SfgVOi`()Ed5st-qa$eJ"Y'o#Sr1W4P\aC1Ke_O7\dnJ/:dT19$E;A"phPrL
%-?>b],$g@;e<5o,k2W1LR`g3]5!#YhV/d.="`b86.mSj4/CB6lK%q"UWL$KBkW:a.KFDB4#?,[r1_h;I`Q??63i]5p@[c4H%Km:K
%$'<<h@6:=fMuiN7e7EA6Bo%_tm,44:EMsC=1;RB-6RZYbZ"d`1YcKIqQCM@4&X/e;SZ^#"1>RRd;R(l^Rc7;-'lm+<>W-Cj8$lZN
%U5q7<06dn%YTcr,BtWf]N!/<SUQD-6XYPDS0YC[Udh28mOl@'JUkEG*gKWgg5kFb%The-/9<bJL@CJ$s"11Lmc%pc_Bh*C^I!5#S
%?M8Rn'0U#t0k-Z$'ZQ0C1(#.X*#L-,-[)fpGQk=Hfp/Y>5l0.JJqO?$)WJD+m0[fhN9c%:jNt6c(AIu[Bdf=FIKWL;6:o:0OI.Wd
%3jMb<#t"`qaF/l`A&U5?/8[:h1@e%7f#0e,1)W0*N</b0SFWp_fHM$nQ)P9UEm.$?XP!"jB$#Kt^JSGD@Q'b9Oi"k+/]'U0-n)Y^
%_i.OQ.#s[r6t9X.,&/Vir1qu5L11iDY_YCH5+CA%L*uNmOeH=gO(V,H:+WP?q,1Ep"C_roE%,7I@\boTJOS-lO9t&A%OiP#7Mp4?
%,U,lX.9lAfOKsQNpOeFb(M.U-hB^4[*Wq&93!C-,@qVQ5+uU1qN0#e:q9G\4E3UgSa<3l_(:%/,,8I"7"+51N@6d,NR%kol)F6U>
%ia!)BhMrB<17(<GTOn=XUBPa7WlemnDtV!lo6BY)h;b(Q329T'Jk5TiYc(c`Bp#+CCaVPQ4$(fq[FdCZ6<.R]4%Y@s.%q2i9h.6n
%i):cW'gb$G*!2-a8CQCV%0='n"Z'?kLU>^u(BR]k$^hbAjt[F@PSq7T&T*BoQ@fAfnL9trO$6#f,K(42Y-+R"Yn[:bmXe)&>F\rQ
%:>0N*<%_&Y`'o_q+]R>Xq/:_H"u?;2""uYg=Fl[Q>?QdQ-.N^l@6;bfM@&.U';Q&9H-F.u\71@]O^bRH#BkDBO;qrbmpI?C,E+#B
%iEBYBQ_uX;2nKK7=%Ijp@KOi*j=VGMLsGTPq(,6*Ym"&6.Oo9c^6AY;:bOV8O:8I(a]N)*P+[-\!RT;K#!d8bcC5W0'7^]3;%"NP
%@*5;]f,%.gKPq1e,*XDA98"sM-d4ISAPi]KVZM72Td6W^n_piC[f"U.^+flkC)h=iY/k,"aWP5Olt;)BPK`8Fp]q"nm-([Pj;@)u
%/8em-TG-l\%QL3m\KiFRUNSn_J5/\;8-9M*]%//`r,Ya9;3!)\5BgR[jr4(VQopHG1l";]I43-"a)s<'lbEcs+!6@s!ih.lEt2Q;
%HgY%Z4Vd<Dfq73*;!PSE_16gp\X"Tub]B""&Do!)K05!lb7i4N<WSe=;M!Bfc3Y0k1.Mgu:)GG+A[XToDpMu8d(mpi$$"%mcJ\qL
%327F^M5Lqo8il_>K[,1p.E[uKggXYmR\R]h,;6oD,dSX4pn;6'/**3ubd$gjiuDJDY'ULqmRoI'+e2IO5"BW*W'$TnM4HZ@3GS3n
%"<I$doI3P"_TdK88'J<a!TEY+'Q$Tg/hY'jA91Wq6b15OkR1b*)l-_[jPmG^&<>!Xd\sW+e=>eF\J!nVZ^=;#<lg\)Yi4!/%UaUC
%BTBtp@*Uc_k/`i&J3563RT5crR;5!ZiL'cV>r"*Tr#5/W8l=?-Cr[$#6('MARo(+IR>2i)Ao\m_:b4=*A"G)=E5`]PGq:fro+5uk
%3`&UN)<NZ?RoFubCpV9P#FH_ILbF?n7\>YhW:]X_MH8p!j\[-q@qCu?D'K$h?-q\AbcJ-5\NGn^G.%F<,9+sO3->:WAQ04L1hD[U
%O2<(^7nPT-T"MU-*uAlV[BPQ8#;3J/L>*V$Ms;Wm-qM29B]3@P.#6C^7(6393GIT@#"Fe,NV"Un7<@+%b(>;9:U0"\L5#LR[N%_4
%@-GdRbIKXmggKgq=ghj#KRs94,UYFh/Z7`mP6Q\ENWLqd,_!miCnJslb@?+p)f3&cPYu6V-*-g8)Q(l%3_X!;)8OfT8t$oha-"C!
%AV&sm$J2BMb/n<03_mfTb3=A&%V8>?^T!Y]gP(;\*f!(2eSsk7'`U[`<)*cWS4j8>O*j\N<_PMb3=@Q!Kp2g?]#ueMrKtPeK.-IM
%d)gAso-N0k!9F>D_3Z[Egug*74It7D/"j2irCHF]MC,5*o3K?X9R\/'[O[_MCW@ok*.aTlZ;N/4*$bg&'I\7"mTa=dqk;6:*0Qii
%;JZXQk6qO"R0A5ldh^8FN^rMO.\,M>4\Og--*i&!7X[j:8R^\OTT'A=gs^X'AW]nYk_GusMELho+d'Z&*V([I:c$OQ!$943a@T$`
%,\@P?#<=b(CJ$;A,hW3/T#6XO6(1CL$FteAN[7"%#WaOsV?U:^=sq.:$/&Gc3Md$J+]SY*+_Z8^NIsJkJcP-Q3<2'a1DX3c_.E-o
%#uL0P^+\?b*.=?A-LcL"5#0u??`tZm;>JU'732\O,tfZ\'NqToENN!+a,ZA\LHWpL*VX$Nb6rE^*/(Q!k*Y1^29.gY^c:/80:5IN
%i7Q6nE1HFh/q4_$.-YqM!JW\))OP#rKoLEt:8"\.)DBAK7?+2S=jf9M7QigZNVf$;Z7BVDf3FaaBAD**B$)"c24[2kj1\JgbYcBB
%otkQ"_imR34sXQq;[7IUB+a0G;g<IX(ai8fZMYFkmX&dJbi-O?Ok6K"`MnF7'u>gWhLs7K**jPs(SI)u/l&+50R>6SS7k]gjHX;7
%P6[M"G!V%5^-q07=e$6fgkRno3.bBdp=LS2_\8f$_2>jN(?_XU'J#8VML-70TLa'(1%RE"\?#-R$5BCa[[c)$4E2(FPo,>l-gjed
%Nm601+c!*[)O@lHZY:mZ&pN;Mj_0%_*A/=lS?W3dZ0Ma53K"IsiW.a%Kd,rP"B8rb'/@Rg96l8:+Kd\@[%O<X%)EMBR[gKXe076k
%LPFui"S"`u*17mdM&S11&!nj(PTF_!LWmQOC%q@le*M%3&W8)!gmZQA_at3A:LV0*S>;n/"rm!(cnB#AE*fK`Y2pWZ4G*Od0;Zm3
%Mh,Cf1-??@:7`:DMfVdQiR!$O>WD[#7eWhAhN<>4!t.UXf?(86WVEFM`&"K60aen!GehGq.4O%/j?V\$<B9$CQo^K2%?mS.V@@pB
%^0#eX2j(!I,<Tha+MpjJ'#GZQ*34U/SX)9"32Jn8TL^j[S5_)iQVolS"m`)RSYCbcB/k>W.3>"1&"]!E_.eb$<-KAoD?6?n\g\\J
%%UMCRYZ!_FnK,P<YjL[=7WM+OJ-3cC$]2dJ_&Yt)kMY9oYeshBD"&8CY$Y'b3,MHR><7HB-i!d&!$Qu!pejms01^nq`;AU2j[qlE
%-P=LZ,/me4V^61n.-PEmi%-p.*)fH6Vh@ql;l3rAH="%u?Wt)f&6tjJJieR,0N<#CiN*Ij"fKV(_kFA0E!gUlUm;4'kS,BmYS,5K
%o-Lsr#6Y8W2NS2C%X.%%5/RK##"5]VE8^A&Y0S:.jU+g<5p1.O*-CP*Ke17G-Xecl)CWDP+L+,inKLO;I,<4!j[%h%<B8tO^juo1
%`IQu/g"n.b3$9toQpSSoaj2^NE9[HsEt/4GX`uiu!2lb%.u[@+3"8+sC=4Y0)?_rLV16*3PGJ`d)e"&S5r7kG:W&&(rCmSCd%1s8
%:$<olDre^kUnDC,<O;srn2qF7CDq6Cn$H)fhgR-8,0Ki_5nZt)FkW2c>*rlMF'YXs8=A@kq*RKD1;=FkLt$r+nse2_9FD(#:&Pq,
%XANHFT8!Y$9Dh8[S\]L@>^'WZr3h`hl\DBgh_a"OA&qmmE"s2jIcL/n^sZ6fT-&*TXT<lLCaZhS(&6%i<:4J[2\6lu]iF&N!_$P4
%<8oh:9(;H8Lu2lXp9P=FnXdV5:Pms7\Uc7bL\sW/NUK=@q2GY!(qLFWN@qY9dPDG!8h,@*>*7]u_R4d;+MT@WLf'<qj>XsNRGf^<
%D];)VUfIclRjKPYMK?jWKQ"aDX2o3o!DUEb^R7P;[.?sk8Xo$^)<<_F:U*8cOl(tJL7LD]r'm%n9Y$&Y7VNR(E<Z/t#0cl_ns]aJ
%Js?%i#1E;UnXE^D;jg.)e$,4]XiPF<87rUJ,/4^b`I?bsnf'HUF]fkZ*G.&";[W)b$m!&iKhZ^jRH7g-<oA2gEtkh:I8_:Y/eOQ2
%IE0(aI1,N`]ttKX9cjK"C6&!.8,@f@p'l'aCs37`VNE!E/J%`U]I5Z'KCp8>69nQ#2]0Z,P%6i8A9[-]RDScsp`*'/(<e]=FrWDS
%Vj),"$.%-g"nG@sN):>02dPSQ#!>>%P=:S>\qTV_X!8fCPjjZano/7(#i?K-A$IhDI:AKV$T!HS8e2EEY`oB?a-$L?ptdFY0)cX5
%-W+<Dg"Rt2Ri5SS!=.AK5)5-DN:oa"H&I6LL?rb%NkuR="]ldD>cja6q4*T$R46jZJUFV"Z:,KjTIXLN0F"rsIfd62NpTQcOu"_,
%DmW>t+(]eo6)ickgDeC.e5E_6^;>emj@qBl*,9Imb-Se'\;f--_tHPl#H,CRp'[^JA,53DhFJnXXL?!Z.5?J6BaXUS;rTph/DSul
%E'RY`E,S^!LW*WZhT4rcKYEYe]ocQ0\DRMa7LP/J$MR!t(ZETT]b+i!+]^r(7StUAZ;*E;K]jA+jB/:(DiVI6#@HuWkQhleik=TX
%i_&c%]Jnmn/rD*&mkdF6n_VdT.AT&EHW)^.-\D(^!t:i[pI5OW+j8lY@HU#GXO+YkN/Ifm0d2C4=4m(aJ8_Ae#\d/Q[gc<C'K9D0
%&%+*^+\VUmAuoPeI,i+(c^+sqeA1`<EeJ@1`Bf$.'#%Lo&EYo%e8CWdnPd:`-^+9F+;f*)P:Q3S,/0c:7)DVg&`3jbk7RfIpdWIg
%0+pQuUP2c:QLTrH`/#i%Ro9D/@4?Gq^BkSubP:3f!<,5ab"6E+V7HX<h^6-'O8+G<M1XZCpnm5od?0=]B%tC@_D_lKS;&SND\tu`
%!\36"bp@r!:^lC=:<V5pj'/T:;9JZgKdK\;9)>[386Mfg`]$:TG.4O'9*aqsLi6083;,cYT1Cm"9N`LPJ]>$m1j=iPL4,HtGmNE!
%AfOno9),iCXgsrJHm=mbd6UD"7eoRbD\BoG`.,i$:(b3W'?Qo#Df//BhEU97)4cBQAP7(a%,[P%OmjA@hV/6*`+#e^97m@["EcB<
%pI6r*T7u`.hnTit$M^J6Nl'*C^8[MF[Y=10#51e!i1!s/EQ\EtkrVb?9_mQ++b^"bn_W>%<01RHpP)$L)-b8XNWY-r<,+AZI-QDY
%l/&,7raBLMZs:#E]`Um5(V=UCp81k`d+^O(W.C(#!qrL9nVAc,WCDCNXGA2>Wct-#\CrP(`.O@cH3[>Ih&sBu>9%5^lDBI+3.Q$7
%Dr@j005X/*Fe8cpJb(c/3LY0G.PU<^%Xl7Y-@?RVZt3+kTeA<Ke'2I,O<Jn=L)e8rD.S`O(e@c2@_@QE!OuHribc3f$LoGf2nW#1
%n>6DmD4!b:drgQ,L.NlC-mJn?8!_Bt*5=SbRVRfL-9r&BQP=g+_-iWLR\b4\fIYT<=D/,[=kVW)c'Z[*\XV;^$/bo#M&JM@"]%E4
%#jiV?41*ML/Ca)aWaZiZ2`2_#2TP.o6sqanDR-Mk6Ud-nTs!A`ZJ/4CPh8]<4Lh@*fM*Ji"#Mr%BsbJ,MDtXJNa]%VlV8?8*1<RE
%#<)IQL"/n0?\B@HWga7<%68n`B?2O#Rp>GfThRN&TkM#_9K.ica'MC&%Tm^,N:&qCW&[7)m`J0'h=R5""XJ>1qV;m;f[!g@0I;Eo
%#Kf>52L":n;DNHh/m8F"L[)TO$Fe\,E`d4R=E;Qj:q:9j['L&+8BYc1R+tO]JbQ$G/.?tRE`3sP0;*.aj9BoenkpMf2$EIuJ`DbI
%asDi'Ng'OH1i>qSJ9t+$gdE/Q("Y!o4,2;@9hF-9EPq/j+E$dtNl.Er$AP$p3EiI%WGI\Ir59S.4'!\n1:Tmrjc)MCgbo60V:oA#
%i21*eIak$G0HkC1NOPO%.q*4k[@er_$OAFTE)TDcg^.P2UCWZ>L;?Ss/>!s*i/Ts.*#-1_q@I7.Nk_+n&\&U/ho8s\)(U.T3.sh:
%fkCX"8XUF+o!cG&L]h;7'e!q$kapgQj/!qc7/5N(*53Q03C)>bGg&:")eDH\'PpetaUfD]!4[NCR$N^god^'uYWRLiQ32*$)'Kh(
%i+@V;l_M=5(`Kq98/B#N;]#S)'Z!Ks=h[67gk<hgFNG-)ko"FIV@pC;]iYTr][A#gAht31e.!1]Mqr`?VQ'F30H,c*io^cG%(\.r
%DJJ*c"sn45c'D"LA-q$J;@]g-!]Nh@k%#omRtO(fL!)3\;o)NQgmG8`9u=7G+?i,8U88:d9X?F_;%"<A#%_aP$O=-%(u/M3+@\s@
%gc"B[66P3$ob8U/D(!B^VC=(d,/W8-?m2ET$\Or*1T,3T(u1@^#Fq5,\1)W]&bqNV*_Vcr4Fin&j0Wh,ZiuW-Z)&juRjJR9RiHns
%L*Q'Ib27s4M!5DTMkJ%UAD'ZI(n.:!1dY+1@E:$%r\hL?i?4m0^C=s,d]jM$9lD(r7YBTY,=SGAkhD>%`,ogHDats$cA'#l/0iqt
%(;3G-J/IB"jD>5)"m\FigS#r_k.'/S+BtaQ[mSF8<pFk,9.<Ni-I!qS`&9.uTtlI!\P3c*#REHMG3CH;6\*p".,![5gEo0)Cd/fk
%2Ur5QcE4Hj`-hWT+L(5u%%MUo2BgLVQ;c:Vi(EYg!H!Ig(3119b1T83.uS].(`If4VP@%t"':BcAKffZ-;A8N3l2VcB7[uu)Mi#\
%Ca);a;[`i()3qF#mQrHV"`+kJ%Us46Y>%b[@'(0I9dg3Jgm"u/BpNWHY"b$bTr[.*'W@s^UnY7_["pS9<C<H/3!jC%"`'k9SE$JO
%D'D1h(b1<kVJKgE0SHInqpJ34g8%go!AhdGVH2n6b1*:j.pk!_:r"LuMt*'8Uc+beW&LA;D;UNsjNMb:qO?MZ6_+;g6`;t6ktms0
%KtlP&cf)6F'_jkgC&:b24ru'\jd@h/4U]a46Wn]Wde<?Q;j92rOXoY>e2:$7%WZ<KUeM(oR#+W3,:RMn_e>7hcdi5mB[bclE^Lu'
%'U9EdELrjEX.lL#mF^#7NIoN;"*%pc$/-(;bt5qWd#J5(HKAcq9N)n)2#<V5HO2er('fM$B2aG3>Dg^\LBWQhU9iAT@`[4:RKf'M
%%\+Pn=u8UVfs(TT'q65EiB9iY-6EaoTtiVg']#Ejg/+FRnXlRgURBO!'#J:6>:e`b,&qoqLriN#WAt/?6)iP1EleaKGR[UL-3qf@
%I%Wa2WJ+2P$I-"r8H?t%ZWVF.itRpk%lbbH'q3B4#`4A\PT:mG&J;#Mc%agfB:_GrIhXk@Zf+]7B#df$/C2P#@jY4nA2\E4O;aq5
%Cm$Sj6"m1d;</7>gIcbEeA)sXK$1%Wi$HRoZB7]EV6'#cH.P[(B#A27SLlXf,#47EXSiFJ$08FUZ83!'/1DO\"[Y/4PRYSAnHDP-
%L-\hfD,].GXK"r)(Jm#-NXI=kWVoduK;U@3"K%.Q,W'Jc;lFsnNhkH@3S?r4iN+ioA7OgHZHRucD-CtMCq>eO1!7V8AW$<nL6G>0
%R)eGP=\^k4F,=SlA5`j;PRT#[U-%42%[7F5cJa6A<YFtTF8d#?N=L2S3D;@!%Amp[AD<sqNFK2U!.uj`MoeGh-hTBbBh'b&U+mu6
%q]V,AEgUZ6V2jU^\?(bDSF18Kg!mlA)*(AK1ho3S"I![I/(!BkA\JW-;imu@_dl-T7]a(>Z:Q]=k)3]Sg!T/4V_HdXa8gabQu(tg
%>T#p`f`9NI'#U0Co/dirY*a#*l6>JJ=6q>h/VhG;fF.%aK#pK7.o:%a$#q9/]!Ic?EhLQj&54uNX`-!J`FMmhIVLl:2NX8V*W^5n
%`aY^('o3T_FXIF9#0I?W7AcjK90Ro)Z:XrSBp>B'_k7GIVc'fl0P-Y?.G86m?pe.YP0G8O-ql)CLgT3h.?nYU+CQB_al\u;+A+*9
%N#)Sm74?j!P]P*TP\f"6Q'ra=SDP*!8L`=h7i;H%V.=WiBH3k5ClCVXH9oY"q\Tu8ZB/m;Q1&6S2U#i^DZ\$M$]Ie?82`=]I8M-?
%kf43%+PHO/>AAtiODJT#N4r-lW>c5?:E\>)6Oo9MBbj5tI0EhmP^O!F'F,Fb+k`Z1Z92e]3hi,n,<Kb`,-jqD'!e2EEZBWAZH_1L
%'=-R/#H9uqfjG",W'LaCn76:9PVhkCc*<(c]FU)S'C$>HZJgko?VSr[#NO!#&`TZ@hED*RUCU>e*$C^qXWonRA;f+d8dX1TJOQI;
%fc[>!Nn0u0`A7[LL'"Zc(cC(k>L(;'nO*E2e.T8(]>2?ghdbn$&'0LM$029oA>=iS3<j#hJ`@lYKP\:)Gg[=h%3I]am1b[WAd-J!
%bosAY'pB7M5S6qF>enl9Kof"j+IBgc&[E!sib3`KljG'_Z/]0sfeC=R[W;e<:!MV.)alSfn?/"<N>;Y"jqueH7)TWc,9,2Nc9mY8
%W05SnB4O@<G,/`+(u>C6A0BQE@/-GHh_<fIBi[b_%_t'n;Fi\e*6%.(.G<4pF&"1;eAC0M9$'OEKPfg!fkAAU;bAqM&&TNdA0V_M
%/%9&qrt+.G`,hbc;k+GC)FMW$D[6D`Nfji-3?SJta[V"@U*pb*9elsrhrQ<?:qc3hCTJ[(MG5r;3CJ&E.ekZsNl4m@!G)5'$N't%
%"&IeE;kP/\%2[@D/f?c0]l#dgpW[gH5\e^.iRi](EX`sL&G*7p@n4DIaHNkR0g?Sj[A<MoAF)jb?k/,9_:Y*fN(M$DMB,8h9cf0d
%l#R-`&gfO!Msi&,Rj)*F):&o"'i/XrfG&Oabt]_:NarFYGhCL_#pc"@CBVjB;A_=)=g<=2L$_F^OC;Qr!t).Z$6.(h@Y@O6FC:&k
%%`Bc3Wdk`%G30iU<MZrDCeE1Wb#^UUMPN!ECf_"$k:"ssncarY6Eh'slpW?*RugWi*e<YS.X)7"g=9*IMSFn893ebOrL+_elm3>?
%25NP4!m-2]ckZ%A%Xh'2^`t?)g=:.2"^dI/N3"j]mPSPVBea3>_W9`b&#`/K9"&0VGnt_n.;DeLf<?77@>_^pa:rm&F2Vkb+$j.5
%i&/Ks"JPr?&1We2^HCpFY`r$7Ztm5_`d!2CdjN'.QXa=u&p%\^f=mPe<RS9.#?dX?:"9g*UB/e#7GP]K.%G'nN/.?*oZW#\B(;<6
%2*)HNPqoL0LNE!,KPOI+*K<(S[1`n!bj_b!1).UIiN:4b_]DOG>E]<nY.hcT.7TD?H*V7%)K6h0+(3eHR`8tb50RCK*<CM1%W'D#
%F'ct-XV')+DC.>Q"3,iOU"4c1Jl/DQ@0S..3Y8elSnO,;3VYE3>,OsJ_R"D35raq3p6=C41i$PN_s=9UCYqk6]S9u,Fq#-,-5lS^
%(/INQ^'<NX5h=HMJjq=3CZ'$%rWpN4^("(5EYrRfnkT\5R`%6>.4S(i\CG(ihGT(c3DeY;<eN@#K!=[-@-pRf:`a$3RTbchYGS*0
%At9:C)FukS:oEr#K6pL@[2\Da-n[i$!*M79Y/V0?^c%]D`;)cJ\q6sl]KO<;VX-@h_3BTuf9'!iWRVLS`.Y^mXYM1<0P+:KUY(oN
%>l$0_>\XaNm0&rp@!L5OJ-$%9X*1kOC5u>c#Qr/X9OZJC?osWRm:3'UUrO0LN<1$P8r"]5*ln@_;Dh0f7qg@#W7n/V5Kc\u/SREY
%Z(_A"9i`c;!7rZr3ehS(/f@3f-T0onUH7K&fMdUkj@G7VA<.>Q[N+*qW0Yf`4J+Zd+ssF6XDoX3A$"XiMnij=kFp;-$-cr"*&.p_
%FX5,&_Pu'BIgSop6#.p;3n.mY!iC.J@WJ&5*H5IZMPZUE91,P1mt#O=1JhgG>VoHEe7aEN)Bq&`%pM::.?Kurj'ptVJ4E=t>P&b=
%1tWFD-VA+&Y"2Y%UNTU7:_kpOqIM08-u-p'$TJS165:q<R%B%"9pp2,_p2_i-#-^7e37[YFpapt?A9`^*/'b*>s^K(:m7G.dIi*U
%6B12.93Y*"(4oo$,;LUE`Ub?l%PR<AWVu!q#.-=EWg>5ig5Db9WC!Nu&n`'2^8"!2=TgT"-!VUG667Ll#_J-P5Rj0=-OhCUJD_SU
%IbHS7&Z4J9IG/n`XdEZqq\oGVk\9Sg,DK4?e)W@I=SF@kg@p;_,kcNkJV?335\V]bX^4JLSW7N/HZLFA^0[0nVdl3U&p`Ur[3AaA
%OjgR9D,K:LZ$3$3.c&.R*5.6!VR/0<&5"nX"'gI=fQ7g!`GK0\)mHU\U^?PlR5@F&%P<fm[$AM$i>5J=Zt[TiVR=rNVF*B/%6U'\
%PbCe6+O_$+bXNdjNGLo&11E<C2+s=f<We]n+$90o^3$<@Q5j5"JutHT,]r:t(MC>-V5YUN&opI-e[k=oQ4>dL8jUn!04*0K=dh<W
%b+toV*bfHrj\!uO1=TieQ&^5(_\F\]"uh1"L;hq3"dP+4RO(Yl8BSn#;HiD9kCCt``am-#n>%MU'V8+:8Q.StSn*j.D&?gkP6M(%
%4um%C8$[1,-u$iVZ3BEkab3n,=%Uiii/#?9"\GJS%P-X3'0clP/qT4G?'-"G'^7S]9p<L7!4tT[Kh*Erd5coB-70XIBM+A`n,c?^
%&V)^0XVIDd7n61c<IAm>R[Kj>,Bjb[kmT[XT]$(q:%o>,.6'A33?1'*NMcB(oKgGca-m@2eEG->Us/$n4iE5:Nl4(mps?T.jFP\m
%`lh%jiC+Eb/I4-Lkg5Mf2M[2#Ph`@BjAC\X?")+dY)g4oXD%05=]3Y9bU<%p/O\iZ"%=KU4:@#nkEmTb1Rlg%GDF"&PFp*d\qXqo
%;'<l$",RLEcV>A*VBL_N:0WD`*=+sRJ;HiX[KT$g!hu[T!Q`<Ucqn2<U+dbAG`o"mLI2`OMb*ocL*i1B0qs8S-=t?):P#32+g]uI
%j[,0fVYk,/3`"`Unl0:0U.5V+RRg2fT-Bsr"dN_VckM9>bbkN9U#/GE+&]lTQ?As$3,$BO[\)!@=XO\W(c8V^coK's-4N$P\29d:
%2)#A':sbfPRH@)f"RFK_a)Y$qSDc`*(5\?,]$Su/%.ohLcH57Q-N@@VG<`8hX7Ahqn>YC<ZW;-/\^=`(YB+d5^/R0b^*WB;s8Ci]
%2Z@;mr5YA[CQIb?jJ2_KIgbCO]'k?^RiB[WeJ`n^&*\[1h'l(uFkgXWJ"0/LYZ'FBl.*?^<:XQ\Q.(0T%dT*hVoI'2.4qV[Hg)X:
%?bLCF)ZD^eaQ_;40-f69O%SG#H6(T%#D^!6qDBeDgb$&=m<EE>L\#/lg,gi>)X5kW_6eC#eFn2]Xcm?S\]pu%?^Hgi*u"$AZek!`
%(gjFi^IGcDrctcr5-0.?0-=N6>$t=ZWF(9,1Aed#(rNi!*l<1Y0ft''bR^&rkFh4!]p$b08YaklX'P]Mpo6t/LAC>Q%I!AVFDBWq
%7ZgDO48*NGc<L;0_qD/6CQCNaY:%GM/@+>3p$^MjSBFFR4?;9PlW*q_("qWRSbk:AAo";Gn*QZijCX.t7DG2^7\R*KH5G@Qc5V=_
%d0M?hGAAibgGCZEIdqdKb:BSO07Q!aG-+^-[5nKJ9\Qm]F)Imudb1\'FXldrqHa3Eik4gE,`CfXn)<s%H2C*\*)>DCbAupYh<NR<
%`Kn\#\dQToQf#Tq8o;=bB<95bi,H]9g`WV;hH6$^X)`is-gl1.M=B8EeuEr7b1rD;l+\uT_!X"S\m0f'E3.6BFh+b02qI*9*6)*I
%qp4PJhIu.oKn_B/\m1uk/Cj`u20KH[e^g?;iO51r7R5]W2Mfc3GPIte&j?B[A-)M:gT.L,rhrKR8-(.qgV$tSg23@MG>eB,'s=0,
%^foiqgT=PG9BV@RYiY!Ke#cea&$-8Lb#p=%"]kXAo]7gs]2rct^K^#0YSr7@X`%Wa6b1>Y,RRI,hd3A2lJ2C1n9hnqGKtSO'X8*>
%^OFG<!c\h.PKnVgYI:c=.5mi(p[OR=O+u&!fClXJc<E6FBYH'krQq35)O8TgX4cl?RRK^=j!B*mT2g8hX+.N]c.\EeQsMPD$:gh4
%-3(UT)1=1-:ql[$GI38;A'e4`^X+BXXq(B1A;onV^"M-gB&U>olY^3&QKj4G%7;T:N1<P6n4>\11;O]"2HTDT%/-/.2P'#G?B.>+
%!=BeS8*:2"fp>!qqDG[<N8Zl$88\jm5RYe+7Fq62+.%570t9Zli:_'tPto#:G[0PLE@;@JaZ+%\ngg7&"+N3elFlRWrEKeOHoMV6
%&ptEemo@qC5@<VdX`I=6-TRF>:@X#rRd]:'hShIsB,p#Sk&BZ!MXpShA8Eg+>)f@RXnKGY(MrRCR0p'pJ[aVS(rL%-1"l.%nt8(0
%CAjsL;U^[)HD/l8UJf%P4G8%CW.^TS(rO_qA;e*].r=9pQ$QZ*p0k#L3[h4D&"jgrhSobK)]OLUCR"AjM^6<$2m7^$Q6(U%fKsja
%K>+u+pfiJcIK/AUR=6dX+c_.+oGRp^@>nT;s)&F"EELf'<CHa*dbOg'Ok/RJIMpo)h#;k1=i5:L$ot!=]\&>4"=oq4d-&&p;)h#Q
%Xc1(,Y1P<[XbQ!%/2ETDpVsioi5Sk_X>HES`_NX5gFHklqXK_tNGl(PX6Jp0qsfh5T/J4mDS&d!Wu]f\^!0/r.$#@KV#Q[.psICc
%GkjG?O%&+Nm5WI^aIo/#a-G`G$@(H`6bP!X;]D;al6g'_qmja!;_mk)78n'-pU<KX@aLHfO^un6jF%^r((ANh0//cc^$5i>[I"ch
%QeJW%)T>%Z)Z>#V"dW,"8ES*f@/uXSm8X)dhHKV7XlCTY$f1Y:N_U%XG_,TgXk%jl575(Je$WPX.^5cA>"++V<r^1dCc.-`(92M#
%E^:[6m_r]tpM3lr`h/N7k:&Lgo;bsW'Kj1@BA[<*J`0Rd0W_cc^P:.72f"Z[)(0cr`nk=.8E)n3CVL'b'mM[L<+2tdVhk6C<O8V\
%lc4\pqlO4J#9s4\Ru>:K-j-09m>Y!h8s-puMtph<,>ef]L-]/`,8c9C2d2=l,@!".#bu2UM]uXMLfflcCMR%4Sfs.`.3Me(8M&"T
%*2J9h`o+n3m#=mo8s-rK@o:7N.0%;$1Qo!kp4"2#V9gPEkblm#`M2^Y;CkG&_$l5i4m]F%L#0eA0D/2%7G/WV=Hk"^)4";&1VGW_
%(fOAs?!^skki]PtDKoK]#d<cf(d9pun@XQaH5HOmK9>.00!9\1!>FVe:UUfDj7u]ni\r4_oGq'-9>K2.h,pjMR2PI/=4u2Wn\/&^
%&WHIln\-p<f7maA>O<[f@rZ@m`3gMseFB\"hUVV[]@p@h)_#34]W7$9[K#m%QLtN3mXp"9clPc08+9;[Z:!^R*&"(f0;EL!N!_\!
%nM2"9UYMC0Xcd$6)Nb:'U/4*aVJj5FZ2[LWVsX=f[DmBbo'LK?EZPI&/pD'NX`M#i_Zk%Y2lj@bHLq'OS%5c+G-01s.7?)8o^18W
%0&''S+%e>X0UFL"AQV2GFqNHJ&<K`"D.92D5*Rc.V,-]aAD_C.P3jXs[S"[Ahar8lrd-$g6g<4`\F`Q!\I.k<cpXYVWp072.(]A6
%cRi+0Ht\-,M[eja(rkG\NFKhR/d:FiT^QJoFr_$@P'lT*h<H>eldj1'qp[jcchb0a/F2MSEYg-3loR8SQBZe8e>[@!FFc0:k>TN_
%_<[l[>[Rt/(A^lMf6NK5S/73N)hZm8mCuTg*?NgY7CM'H3ZYE4#nP-,=]g:oW\a2^_&#W$O;p_[`"h1sciaH11]>>mhm*3*0`Ab7
%!"TRn>TWcla8Xu$s**i0^#H99rni;"s,JU<%(?0PdNa$f*U?Hd8TO1h*Dh[9JD5Rn52WWkGO4q7Z62t/%&iX`T6+klX_&ca1lKS_
%+0OgsQrA+clkBT9kBcl<<8VGM7dJCDLXrCG*;5O*F*iQT/MOcb(\CF:.'Su/FS6@OWp"fQG9?=fDpV9`=l(BF-l!fNfKs1$1h-nr
%?hN7W>Pm&HG37/kB!S\0XJl%V/f6Z.PPo80rLJR9Xk(.K8;X`9ak9ZYB\iKZhJ1PdG<3.sSQ;Z:4P-c"[\*5&GDHTn1FqAKa!\Rl
%MV7+bE:)>^=Vqhi:9BZV<mZ;]l.]i,bt9"2L^fN9qAPj/_MZ?fLi5X@m?>e.KP_7nf_@/I`eSHD[[.92SR7[CcmO<ZJQX?F^OdX&
%a%HV_=ioL&rmab#Ualm.]jtr()&lo%L6o1(AScT/)d^O=Qa,N2dZ]R4/8TPC.h(btA&HIiCS51Tb>es(rKEF7-dH@4$qNISn-l].
%C#hMm=#*AV]SU4L1226Kaf(gndr<2OM?!^tY_g15_k=moMMtsPS*91+nk7,4%!]_Ki1H'iH>gDn5M+aU4rafP6Q7,-K-@$!qVaC\
%0b*X2=F:2lpiGt_Rde[oNFN%=BG$W7n6X0-V(mCt?dnX3_^X;"XAiDRNf2DG>#p(QlI7dDIpbZrThf;S:aiVQTMd4"okS:W)8ga_
%5].![%JoW4pt`!Y^Yc0dBJjmHeUh#rYc[^QN:FZ]"8n_!4.==-TY6aj/XAQNcpgbtZX)nnjYQP5<\/:4FR7V9B7!(%o4Pa?.'cVE
%p$MPRO(lp))=cIJdEL9mJI,FHL@:lC?Yg9BK_W=%G)V"!"G3m!@u,5qTsnN",@JP?15<%S@ph1M@9`>543#p50kbK;Cr[CI0o!W,
%n__`ZH^-o0A>AR*hYYEg0E%jae#D^,.ZJ)CHBD<G^@'DMR?-g_HRW@A)&fZ;2.(n2Z<QSE*d)4):MS.f,"g+Zrr!a>&S=i1jEN2C
%TRRZu$dX"af:\S7SR0"=GFie5BC;FA0C+TaA'=NdjJ=a!g\r$H<+t%Q4(tS6VE"LDTgIq[I]%<nA1F<X^IBuI`$B-45ZsXaX,'U&
%lK=j!jus4ZpM#S73c@,@lr3qC5?GZ*r@5_2bEL6>8L$53LXRY2EqGP^@eHBu&q2"rUn=O<X!N%N%AcMCrm;)J.Q!Z8^m@oB#Ju:f
%*eBs0bM"#7TW]P<E54iTM@<q#"29)JM.OS:M5LB6PV(`1?"885@&'tY?H.0B(>hp`FKEXpQ7c6TcPpY@rE1^^D/QH"NO?;of&d<1
%BObms0SV:8g=us'<fNV5=+Cu>V!;39Oc@o%YrXgEkJlfB=IgD3F/f0!O-Vh.BK0LEDQqX$2m$-RTMm:[QjgV[2eS2%2HO]+UTMk%
%=oj?Z)T!?4d!m@L?ip:gP^sd"Y/H]g3T`pB+]kD!K,^B+lfS7'qI>J%,U,+4>edu,W9bP\.</:e?.l:Q^>1DP$gmZ%22YM8V-h""
%?,=\S6aMd[Nb;I[d3G*)6b/(DcFR/#ArYe)3Wuj37Tqk:!kGj(>'o"Cf?5ZE1m,)'bH3,VGo+j@:1)DP$!4V<e]qKtOI26th60]S
%GuuJ?^EM^ak:YKZZ\(>f6,1E@+J,KXdb1hjeV_)LI.slIqi?J/\;]b#S4gg/duHEO`-)Ni]up*GnOXneRH`D.(E4((%FlB=D["DA
%RD/V<&iSu<0R8,4pp<qSN3H1']6rpGh?Z#j%64QH;OSOt#%PcJO*f?@$J>oKFAP5Zd",Oi8,Db=^5]>3+fT[tqH(;ZXBfOjkp9i5
%BIjkr6D8'D'E.PBfo\-Se3_R(RIIC^07L]jL0kdq4SWi-fEt*,]Wq@t]KY#86(Rj0]a>b98*B^@F(=\DHON?oq,&6#H''hOLDe6o
%_<p+s.\1nSn@2L)m6=PtjJW7M(,o&#rqY3FpU2UFF&g<OiAeUlgA#V,$mB3/&'#l((a"b?^B"lC\TgP;G^MCZs4KAj(?BJ?_*Jf^
%Ia)1Y4R_<shSi=:Ls[]g4b?(r95uDuk[PZFbj;k%gDEW6Q[)Z<jI`c-1+ej-62XjGj_;bDfGY"okW5jl+'3u:1),Mp>&nc[Jrm@5
%f'F<WcK7PKCTt:)d1Z4D(%Lh[1ZJ8AL5):^0ipVf*I(,pgaGuSI[ub'0>lK>Qh"S^\b_'u1,3gSF]T.(7WRl)JWkal#rJTI^C3h"
%&rr+uGW,`>K'X\X[YIbPcG$4Yfn@8OMM>H1*i3q6k1\Sg>3Abrdms;UTY9;jA[fb8*=DD(;^u28a+.M5[AE#3pN\]CFOJrk0pLG6
%-r%#CY[j"gI@@9tVcgd4R6CD9fhu106_NF89(:#!V:jZX;Ft9skPWDh5-?60%D:29jW'AU0RWAgqC>-u9cn#]*JD'W2B$'7kO6^J
%EJW_[$*jCsGAtMF8Cn[0D<pe.ZYG@@U!9L4cd,e>mGq3](n-Z^V:n5KRJk>/rpNu/IuF)?gPqEXhchLkPMFMo[C'3h/Tjh"LS`6f
%ZZ8n.PdWX'j;ouO@u:5s>\Q%[#CKoMf9`U?A"htMg:d=1UIM)h0N4F,>=`WnIfmGn0^%4'h/dm<1Pg2EPCG!P.E;D05<o0cA,b4l
%Vmf%3mr#GfSi0f&2Xq_<]'72R[r/\GH#4ps)UFR\^hY^YEW2o):(,_>:R]h@.b=7_@AVg3EL00N[qH<\dc]37QgODpHUjE-[T)MB
%pN"l->">uY066PTA#giFDk5TAPJOYQ05>j9A.ho4=7.JHbf#s`rV"#+ZV"#VT=uRfJ!OoOZrq_Td4//rQi-@WrA"+dPs1g@8h!ni
%e!\N;b:*1,>">ECm7O:#k.$^]c0@m6GM\E6^6hB:a`G+>r:C$SkdQ_9I+>$@TN^&E[cgnm3?o\lfc[s%p3[^%r!3/\a0mcGgR_]>
%oA.KYG@N/u=DH;`]#"QW:HqZsF*O4sYa1Gp<189dXf_S"CMm.Q=*VqRs%-AbY%pI4:pT5c+ECt]Idf]dTF[V)Hn15?s$jF=7+<TA
%4kkuhD_$6`.Mk=DV+.RirC>0>TC=cT;eC.97pJ$4jI4W6C3q=M1]0`pgNRsVCF1(W(N$q`g0ZjXG4,mc%ehosmD#q]rfZO0r0lmF
%ZhF-c1aRUiAnO-/mpV9`4YOgXBA'QY@^h80PB5uD^^Daj@iSWhm.>M6)j)R,3b,bTXrUW*?FYR$r5H.b]CpL$*q.g4A(M4g.)qi!
%g6"`e\=mD@<m9=?QL0@I&"seDoX?fB==nI(AWO=e^V+2CZ+k/Q4,[<MCYj<Z*cK`l/c0Gmg4:8iaaWT0ET#7L*<j/qKe-o,:"uNE
%;(ib)`gc[He,HtKp1F'hpW\o"?%746Bob4?nYZ8/2Jk\L'6tL>hn\h.Sdt?5gO,2,X>'3Y[gp<k$gmJ-4l3@Ap3-E"BPHMoiT%h#
%D0*?qO14HFG('&NRW`4#G2Tujr5]1-(9Z>&SS[;GlT8W9_10KPOn!VnpUBI:s6Xb(S+'g.rF!9DO14HFG5X@qCKia[A@%:??_m!A
%%MH#bL6=s7-J)d9gL9$$\*NR-rO99%5JJgO)m@"7(,hrXG!4]ba4p:;[d/G6m`1gbIkX')WGtfd4fa.N0Hcj%Is0'QLa[DI0_EII
%+$*isMP(UcM2"X)+_d]p-CAoF[%LnVYL-*O,8h\h2sHlZOnR,TEW=!ji`e\S2jb7>;;cEOR2*c=S:rgk,X?O=-'FuC>juFnd<RQ7
%O:7UJn+qKHX4>nr8.87Bn4>h;;G$]^BB%-ras.4f!-;Z,F.CTT<Pa\>a/'O3>DWPMF!tQhlM6LZSTdQbR7*b77^R%-agqdg)/Sl"
%,Xsq"?B4J]n1;5Eq&kDaQK;]?"r-5]n%-5k-s+TtA9XVheKOCfB.%uYUoQNm4O%4oXa[jCO::[2M$ZO4/c<DD@X@^MjnaNLefLGJ
%`Yah3#du(P59YV%Rh1TESe5V\#g\DQFrQON$I?lH_`11T3,B*h_Ca*+%H4P9L4<bi%!(',T9S44TXM@XfP)WmioBmOTpC`]:o1E=
%[[`9IO7<9-QVX7&EP>=h-dS&6O-AuhIDTW%OS!m&mknj0D\$..gAURdH-s)og!&[.A`Hn6-:K9qD-Ci=<^+D^9laU?GMA,"2uZh/
%fo'#[=_BDOYr?H(`Xp(cIBe&?F4Ss?Q$W!@n/h?,OG8gF05AW'-$/Ndlc6cBeCr"Wk\`9Lhi#7_Y&ps?ag:XXhf@Z/89DA_`=J9p
%E4EV68\!=hVhqQQMC8)`(^p$%LWY\(.=]Z)<:f9oL9&Ygm&Tf_q2>,nTP=2P^O2dSX-0OP=AY0u3;,`;i*/*60AC!/R]#kDdm%(o
%ebgi+p2<[4?`GUHI_oW,b%j6>EA(R81etVF^msP&J(;j$s)O`nDL<88!QD0gC%g6tl5Z4-&sZ=[7Vfc^ZkuSCNZ7ZO/$+9kY5\lQ
%IAa9\^+:lUs'2qhgq\bun_RSgDg,SB*[]G1-gN3cIk*'ZBpY-<iIW=jZWaOYYL^-5^7Deo"bcB[QO`6MV57U?n%g,/Ses\/@Q8`s
%,;CkL?`<_u]=aT)pP.Mf?[BQg5nh;&7&1ZP\G?b)1e8D$1I,1kk=cR++h51h1l$Qb-.d3Io&mP04*H6q5&r7P5="56ll_$-gkm-G
%e\uO&j4ZVXk+a'p+$H2MII#eHbha`7Q'4]+@s0rgW?8Sgl#rpQ)-N40YN_t;^Wmh(Xm[!IjDuOG/oe:%c+jrFV_2jg)RX+<nh@Lr
%Mr4:$q\RBI0K^VAo&C.M^t\>MjRRfqhu@Q^Sb85Eh]*8U=8lIsBiQkEP-&(DS:5J(.]k#s^N@ebVX:4%i+@48j%O>9pRdoW\T"aY
%XSJ:EmseIgjc?U!5PoBi0PuaJ\F]*4\(..4qL;Ytl)E8*^-P6#db6cC:5#@,8hYIkf0:p%"3k]Z27$no_<B.c>,tX^CAY]rL<l<1
%cS0jp\G1H'DUR2lFT8J(q+9Ia*pWIqk6k/+f0<&,27oL\W-#Up0'*cpS`pZOErXD?FS!6WrM/)K2lk')0<^n:oM$Ck:9F7!c_SA:
%b'*fQPPFSW[b5D%Nil.R2-P>s[;)C$C=f(<.K9-q\<$oCrH#5f?)L"*KiU[*\(gYDJ+ZOpp)h8_"mS/dPFTY'GLGldNX&thqk[6`
%G.0dN,Fu'\7T4]3rYt08kOKh$s7ZDMel(r(s#C)NHO+fcDPOp)3nno?"S7Wo74Km]47'kR"9Mm.ijJ);m,+KOcb$?(l1k7Z=5e&2
%I!F(\+@\:+"R`p>`KuYSdK9$MMf45'0&,sZad.&%YV%LfcSmR$_m7gQFmaKt>J3GQ+E_h-;a7e)l3hLla,:-kW5*;mKl33t-pAJG
%7<7#i`-iWWHBi4hDZ,6XM?!+j9NK-,;J=?eHDAU#AZXX0ak12<1$PK>g8Hh=:+?LVdWV[>daf:\HM+h"Y4d%8>"q5I=3PZ\HZZj$
%gMZ[Z[oF>hS`?EH`bN+L05[:;mBmk'F>/X=V8\X)X7W.7mF=8jn$UW:MG`Vo91R5p95U6l8dCoQ):(<klePU:d]8XValKK71:c7]
%WEj5i3i-`mpnX$AG,1T6Fm2a`^ih#Lhg=7DYH:limb_fX-6dT6FF(R$8uGib7bH-4qMs`,kB8=8ak`A1E,"3^:<h"o907?V1*?;*
%l_!(bcJHI8IC&ZeC$5+0m(eTcdoC&FEi&S%V7Vq<Ss`Zjh5PO4SNgkcQaOSSV:B=o=4s]7lFh-#X3=Za?aeZk6Y$+V01[e>rn0]Q
%Xu0CpQ,\_cqkVV6B0a$>cWX?`Lt/O`PGs1=m$0?7TemN7Gp8`cm\-''Qslg-[:EU8A0tOKJut5C4.4rl>]SEkC!<s+T,(K-C:?7&
%n%%(Fm]ZMpp?dedCmF_=5hc(9>CY-`D))6<J)"D:(NaVSF+;^5HHEco*atnUGLl'(?F/7^\!+p"]'`qIj>]\bcolea43^Cp9sV[f
%2HtYV0Apo\G!NsVZsUGn47&QmCZpVt]:sNFr1lZcVmK=uUXls9<g-7T;/b#X?+=)2K;\*EhO;bk@Qdn"Irs+PkgP#eld.1Trd)TI
%#FWoA1jemnE]]P(_&MVbCI%'#AEM*ZnpTmDguiIphXm4(Ok%3ml03.Q?`])hk9#tb]We\?CHSclP-Jo3p*pN?oNcPu>I6,uPBTmi
%XKU^]B)hjn-7XH:O#,)W]TX<mbI!mX[]3uDm3N$Hfu<pM,['A2r_1XgF!jg?LC[U[m8j1[$+H+WrJ]&pmPZW`S?uuVF\?[XQ*tch
%R8GVJ4dr:?p^\FloH`-]<nj?bYNm]gpZ.rq^KIVg:Q@4mb/]q*<p,^1'D[gY/Mj$`pnin\8/(gcB7`oaVM2c9$ie3!$X`dKab8Qn
%XZYp^DD0I]&c.oP6[a1u?$OV@e5C1FZ;:/L3kaufrikb;lLrL<Seh"5luDQ.(49HDq=4cVms!%jj%]b"R=+#YB4be1X(EkF9M4t)
%2L_X$>%m?%c[$bbU)(JMG3@UZ.5@7KVf1pWIe;0U7cW!E3Sgfa<,_4P"$O5k?RIim3o*sI'cJanRRf[hI/Y6_SF3:!doAl4f47R&
%+th8qIaZqUDsk),RJlc`#Apoulo2?`NfW=HBn(!en'A>7X)d+.rJrJ"U[AZkcPfXZj%m7oAH0MaSh<6IX-_\mFr+K:X0pNqAh0#D
%C=uUSrCD7s2%2=J!mg`2DQbd%jU]Bf2/i*Qc_^'X0;FA0d'm:D:<ok/ZhRh5X-\8bHU?/PB?e*Mm#c`54o(n;I':7[gH"kb-69E>
%[kL"T>L)`*VLG''<^0=pmX-7A;,g@RpCk)QYGFaU+8H^sm:>W-oZs,WVK6X$:+$],fb^]ch/B-T:*L^$cC&'^IIdk=5;rmE5IL*0
%jW<+Z+4`bZcK--l]&+$:*o3L8?F"oXCYehQo.5mrbWTZAlq8.D-@3,ol]#)1Ng9$M]m!^q?b1gNhoCdFDKP$%F+WG??1qIHjL+a'
%XDuWIW2hr,FqJ)'60D!c^=Aori_!P341"+!EoJI@kP%q=4gQ(;cnfda+2@SYro+eDS^cD0>N^1q-Lu'!I+kD;s0uU8h7[uAn(S!b
%'R/8HFt]B/8Z,n.OgFAD1Wnd42(ItpO$bs71]SM"[3d=R(N.1@X_Yc^c^V`6`Z')5@9h/<RINF49[g0l;T3ooEO*WK\9D[@]&4^F
%XOCLRe\8*q8S7W`r4&h8-PQE%l1^A7[p/*=07&1pGp7=J'^4ArNpF!rflO$@+I'F#!km&E.F:)%-YKQVrFTu^g:1\fj%f!eId9L^
%cfoo7P?kLAh6Ys=2]6LJ=ufOVkg&YJ8J&T!V0D*l[0*3G?JLGQ$<";cR7#IY3I7-\Hs4Fbc`<E6T"WGr*P7)l6ij5loX(PuX[bi#
%PD"eUETZGTl5#u!p]&d8c^WR+HY7KeFA?$JD?$-/#=!;nVkY5m)&(M&ml'RS7^Gb!2X2+G-:n_'O]Ct@ni8j;mCeF$*;&H$o_Qt1
%H;[H.5BYp2&kJbOFUO]VkdGuhgq.7*E$qnLQjIj-SY9tufee_X$bBWD1[H,pV5WYHMm]D0qW`*/a$DEBbhM;pAB0N`Q^.Bl&gNT8
%Ug'ZbZ?'nK/_#-fh_#VTd[mStiMDDmMjZd\KX5PQH.Q=Vn,5i/4gS5Q(%=Z*,--<.XYtWCX4sfW<GQF&3r?=lB<&SBBkgAkdONMA
%\.h]qDe?K,X#A&MZe46;i'I1tWr.(G:$9Z+`g7G9[e(Fsf#>rXA%t6>f5+NWk($T:WiJj(EG'QF4n;ZhHPC!UIk@#1X!dH2PGQUe
%GPCR<.goRBj#`;Of/r_mG4mjB2r$L@b2pnfX$#K,Iduq$f#(g!J$f%1HaNJ6jRCRHg.(u:p[@57bjR(Do$&*ejmr&-M<&.kIq*We
%HhtM<CWar?cLZ0?q;GM4IXSaDIQV9h5?r]0r+dK[>C'CUj#`\jU^mCAf,qcQ,X:(oJR;K.hckRs^YZf195\k7!WBUKSR;B)GFO';
%_lo!GF17_<0Kh]DIWmO#rj&0o1in_,I@5K-g5YpI>KJNWWRo(H[Hg?/guPA;cfjrMja-[_!r\!\oiL9_b]T*kk%stgd;lA\Q%"-M
%^Wrt\IfJ^jrD6)b(&LYLiGJn8nn@%Dh?*^:mI4e7s5Uf]_/DX:E-:oO2=]nub/rYU]CFgV]<j9$^%h/6p\LZ8V416N]VdusmU!O(
%IV&Q!j6J3k:Y\`jC3Z=fo'pr,Z\t%/6YBudh/l]#]t\F_rn;hkrVKRk>3B<*4K0D*0B_3jk,am3Q50skn'C8\8M6q@i'l*FI'kW2
%nE/,:gmIp'[8-:7-7A"[c[J>.?(SDf8VVQOl)1?UW32[=DUU,iqOIIprC)%M+XYI^o:6,Kqr-5@]sdS$[hjrUWXktm<Ym)GgsPcl
%_:MJh/,,+mX\Q:\hHX:]&H'7aFLukbiR`;HV9Flj5B_tI)gubh&QGZg^+LJ9%Se)$IC-^'"Aebu0A#YU^-0*>\R@`#qHttH?/9bt
%/9%e`m!\oJE:i4*H1l]j'?X6g5.SA:F6d7U\UIAOr0$RE_u9Cr>5(=mqV2"EV2)OPI5tJU\j,M7a7&CsVs\3hc?f6Tf'9D\lX]PM
%]?1$4I=@SiRZ!fQ?WjS8hafqKWU[4O/iERm]4&4rh00YsHgCCl;>cOlb/Em!a`h[1(3`NrLU0XScMlOlh3ja\\9qe10q+T(=P9>D
%i3"VJDVdVV@c`Sua(50USt*(Kb*0qJ?_42[r_bAP]^_0,gK?.q+$Af8SPI66S%8?7U-/&6mFUpRg[S!3G(.%p(KnH#+6g8V8(4T]
%qB!;;CWo!/c5]7EV`C4,jf.gheAp>*a]g:Ab1E0:h=C4m=iF>6[X;6^2f;i8jlm#0pZ7gnSQ>RKdl[0_g#j#Aj]eoQ]e7WZ=T)-h
%hjp5c0-&L1Q*'*6k@M7Ef#mDkmonC-GnlSBWOksK_6(gTjj="^.7Xn-h/`G7HX+;`Wr/iDB5`i;;u,;"S$7;?rfaJTK@fi-aq(!8
%CjG:=c'@kjqoR1GeZ$j%ntYTU&'L$;[m-,/\([&-VfO5Djc.FUcfJdMAnT9@;o*eUq<h_*]X,?:Q![[4?^4ujI$lCtD;AAIs7Z9F
%+aqUj\$*[>Vrs$MjkjGA\&u=d?gO#XDqimdqpkQ_jhk,q=$E(Y*g_q+^\_2PD9]8L^[Af2>413e*`&$P.jl!omA8'aWMR_9M<Vpe
%Y9mkJ+'91th<VgO=IYR;'<]#oS:&S7s5is<M<NWPl%qL2Ria!Fhl,>$Gh@<9F^k19`QlDs:J\Z\ooJEuM2`%,[jJP`S)2)A`q/?2
%X5<0/'CW$`K0ChE-71qFPWqt1*[b=.IqRT*W4tqgi-;R+EMC,eXjbnoDS-<'-[%Q&-E"K]LQaOeh)CO=42KrKgO0l4qGZhKA9;)@
%:>YsJcMlnB(LMW\>^?$RC\%"Uok8C+c-a5Hm17OVad6B&btYpAS@LBM0lBc\<jjNLakFSVn`1MLl'LIH-CZZS%k"tfM[.i\[N=dB
%]5_W^i7dOq[DQe2SYohtq;k\ufA[=5^L"PPZsCDS]OKd.p=NZ@]='`s`kV6,<qkIY2tON1Y'jDs]m[#'Hh.-CrQV6qf8b=KSm6(*
%f&j0&n!r0+^?5:AgLhJWB2<Dm\8FO31p7.t`S'R$T2".V^1?X">[KR?IX$;4l+NMN45p+TlgH0HDm+Y**.>M,rDF0/J,0$>p@\.Y
%hXORU>4JJ-**&V,btf@hVn@!.cID5uqu,$^qVlVf2,e;,l_d[NDi^>c0;i^DS,2OJg?qqZWd@YL2?3VSF61[EeB-LiRi>;^2fgq?
%C("ruGcs?Whmi:UcA*?3:Ku\8orXeMNU78N+5D*>T5NQ]FE4m:@m>2sHfK?\rUZ$*dDH3r)rA)SY<4t_+2=?Vio'P&]e<6$HM,[V
%\'phg*]a2)\MH,AiBq0p])&591#5s;K'D.?dtsJ39=;I$L#q"TR;cZrrlg!jh>*JHY:JFsmJ3OBbhFMgDe=H:Q(Q@On%Y[%RJGQm
%r0u;>^<YT*T6`_I1\eKNp#^nIhU0Tgm^:cnk>SM*c$-;DVjk;Xb(lHVooJQ[p0+*Gcd'`SI%5>Rf&t^JO!f*`=+7XPB:n!`C!=<E
%I+t'k9Q[JaIbB\BB6t:F_W5KM9n/a>]&c%XIs1/G>jM?jeaB4/Xf];)jK3VJ\(t88^UpPUNd$Q@bY9p$*mMr8^HXdrhO[rA>C?/;
%c.pdfIV\AZs1t9'rPP,L\YJs:LN=gJ^KL079CFh&K;m\Hr56E1IEh]=f@+[#?Z4`52ICb+lLB8^8[GZUn\i,Q0_aSGmQsmDoG<fh
%*e.AG]%qEDIXCbKdm>f1rIqH0T6@@$l,C9#qeG]CHJhjG=\j@uPLf&PPrI:^F4[miaVW^`f;CQjYHdJ-1CNoiSXDil]jbj4Y?IW0
%n(Pr:]D6^K[<):^IF3'&h3`?Q[oOHne)aBoS@:H?f:6Sm-Zm(?9\s`$<d'pLi6D2f0)NDuEjrr_-go%Mg-bVX`^/Z[]\0TRYONBS
%bHp'=]A]"KjPB0Up\*aWSl^8_Xm:,cCL)G`k[r/%hh2[Bg@FfWs4,!;N5%;q@/4/Jh$eq*2jYQgOo>1;i6fui:@RhncKATE1#3,L
%`p]eARif9cN+]/Ok_*1;o^m"qqS%"b<]dFQ@CJjac0!THkjIKOmHEg*Or+(?s3@sLrq,09G]N,D'0EV"g[W_AlZW2Rp$cksHgP"B
%ntWh+DVqP1H[bkcUPX#sI6C]ErN:=r^0Q56D^G4J44g&^>'IX@[7>FA<c3$J]Nk9BEMrZqac/BqMY6,72*L3]ICT3OIWt[.DuFQ"
%qCm!bli(h;hj\u^DY`/fS(3pRcRO]spHH@+p@M\gM=9<9[J$tKs5(oda8=2ShH[hqq6s(e!r(IBp=+`*\`KRkpRcRl51jUgCd4j\
%]!_+%e#pV"(Uhm1*\N38NJBUEf?4]*a%,O9nu%O=Mf.X)I;u[kmU5S0_41DB0/kA99/l8[I9DH"T,]LID-NR-:J5Je9C:$]D"9I,
%o?V<cbDXZcrT0SVn&b/"mb6ulCN!"K/)f'cm`L`qq>$;:D[mRbg:qRoX=d3&YHKQI2eQ/uI4-bOeo)VEHZ\;mQgUV1$]"8IB=4L9
%O*8!Yh6lh@R<r`K>kD`IIHDDqc.^5(H^eeXB4j8dXn_/Oj-B#WdGq]kX7m\XheX:6hg5+jrqbWuba8!(n+W."^VjoY-Sm-qZR>K_
%PI"&.?64QCEqm4hs691,qsMp[^O:G,1f6m)AFlns2Q!7p]8_00*Qms/fX\83F5uc_q_+EpG5:gnrVFt5k0$hKBCj<pSas,?nDNfh
%@^,_/\U2d`9oe4<pcI*HIq\>fQ@Nj&\&p6UMpqeQgd4?>&MT/I,AGLU@MWJ!L\J9mGt2Broi01LSqe1d*3b4d].<WsaG@onaH(fI
%62?l)rq>cps5C@E0AcKS:YpKd:K)Z4U[LDGiL>>qjVRsj<rDmX^V'79ci<M0XW*?#o]UMVq;\B6J(K-ls1?$mF*["s]p[c+qLeV*
%[pT!Z>LV=k:Of?^^YaM4o=+2fp:]@ro:oOiqVF=6nY<QXIcjLF^AR*)htc[^Idh6%pZMSUmTVo)l-4E:Hh?RCmsY64rI9+]eW9_$
%a7'!+SR;<_]a+$*jGWcUT7.^8J)g-m^%)*"s8'pRI.6^-n)W?L#HrOKl$FNM^4#I^+$B>jB>=@`rq.B5o&6'&Gj-RtIeL`"fDkMr
%5Q@AP?a'Fu]oW3ZNuu@7qsW=QrTWd#r;"mhJ,epIIsh:jGCTGZeOSTILYr-q5LX7pqWO,-IJgE9]_p7En,2/8HaeM)LHg1ajj3r$
%SNgHYCN&?r5Pa]-5Q9\i^O,//O8%PF;u`)#cN!I52o"t]:]GOKIfI)#([o'3b8[Y"'^C\D%mU*1T3omI5Q:99^$s"5s7F^6l^Rq;
%ooK,loB3l5s+?fUs2A42gjK%r>JL(1-Z?cmf#R6/o);i85PY5uDdU!25'jt&F8aD%nBpq-s*Xe--h@j5qo^A%]:L'kEqfNn?G;\S
%1R20_rUfifhR[e(PIEbN^]*QlVf.%RiT!_Kq",BeZP:mST=t'G^Y\bPMhh&Ao6L2g]q9]OerT75s7r3=*^$s's7#STDZB.<++JD0
%hJ]S?R/UZGlh^:h]^pn#h#5E_T=t6Q0:%+$o>qg;^\1:uio+7Y]Qr\tJ,-^"kJ&'n>BdjZiSC-^rPcOdF8,*piidfPn)%GTrpAPq
%s"40-hXur,TAKTV]m+Z!2nr*0h#I<4TDeYREI.4`^3o7;)h7kXrXZa7S)2@rgRisrrqaIs2o#7J46bbUK3qm]nbi\O^0gp#iQL-U
%FSYrcB%DRt'OWh]S@qDkaK/g*Cd)Z^hsU;6*r:)s@HlH.!&iu"g\8FloC1/Hp&2qVI>J^<fC+--LA:;F[F:FTp[?o8mos]m^@UR^
%QZm>\Eo=%g<BYWl,F>D!b[jlNLMm%;laL3teID$sF`"prZr_X#o1O6Z]m]4GL=d``+SSU;dZlcZhn+A4q#Og6s0m=p!4ZYsfrH6i
%!d5<4Dr&)sK.J\aDr&0Lql/1_;Z<4W2t)1C=6=3u+4=:$jaVTi);g;ra&<CbdY2leh#-`dYPODC5TYHZg)\Ph(AZ>AmV1SL^huBe
%ogcap<F>&&DLMH^m9>&R6g2.SGBu<^q;BiWUX*kL%BkYqLUS=UU`Q-+mIOQVc5thqCZ3skHY9"_Qe?mMkaV;:c%l'=B8>j@W!E4=
%fm=7/ir8C60"7kUn+RorIG"qpm/F])>>3#c%Bf=Zj@d(4O3=(SK)ae4DceO"f>iC7kWUK-^3+Ug*49[Uh7:YhrXN<4^.+ZhfG45@
%j6P%=iRdP37QplS)7M`^lZDd/p\OleetLh/cQ;!@!ngL)T!4]<.XK@k%rQmm<S-$,-%,S?m_XpCpr]PAV.Wp#[r6]g#&`1e\Jq_u
%^QPf"r8"8WW%-9-q:Vn%T73[fT>(3\p0HS9r"W/X(Nnh:s0Sd&Ns@WDDQN+fDr4LNrho=tG927hpVX3&hg=uR84`+5Ac@RahM%lp
%.Nmf/Cntt_1;1GLi",><S]q$/>o25b//&#DJ+M'iG<^S)pZ$TZDr6[[ri2Ysg-):%[O61dX.7,#Ejh*g)OCEZ^$qf1R2\/2rr1ZU
%nnW;nZh'TScZ\@jQ<5/%:N)"!2e4ID\[su?hr0[p5IgC1m%>FN]0uUNRJmQ>r25`9[<=ge:RaEArfXE`+!+27Y((tnJE.%1X"IY!
%552P`&&*!QGM^"Bp/6ala6R]1Hfa;bH4_7m*UB:SeE)LEeUt!Xs3BKONp=?!WqZ8DrcS!"Q[;balktF\NhZ@$5Nsr=m8%Zd($9L/
%rp2#lHDX/nN"C)YJe5RN=W;+$g?E,,mh8ad)5R%/XrlI!pu\?PRt&3Gi8I7kA-_VQ#C=052C!X9L##;bcS3d1-/k7`q4Q24]>d"h
%bg.&Zp/TPX'<177G0td:eT%Yel;p!>b6!YlH2ZTBQ]_k>D-)&\2p?\&<T+XtEAujNUoVZ8cBgJn4&J9'h$q0SeWX@NF6B)uBZ)3,
%g8`7IOl&HR[dPBW)m7>umBX[X(?)WNQI#9;rtqg9s)_:l?[_k>DnQil5.eBrl?_pN?KR4@?@NF[m;MnuMDnj*A%TNuUOW357OOmf
%2iuIK;AXfW[r6c^Z2;:Tp<&_b)Y%9o9;,u_Vi^L*o*^pYi<SS41,jNDDOGR:nAg5i9=J/mch),B4;&T8k(^M*rg'EC0_EM]_1D2V
%YZ9p`^\t;/^AY1qm%p&p55]r0G->JDC11,riF)oY[D,d%_=oY$r8;dFqoeQPqrP5tpE'<uHaK,td\iDTA^hT-]*PMQoXAYP.gIC+
%k,3gFpnpn3Z'Wc5?udYgEoOp9YJ,&58cA&R.u3CUAgu;hPg[.hGlqA5d!%-+'mr;qNh$3SqO:O$eGsu`i\'_PqH)^C%)N4]EhMmS
%e$'Y<iU]4Lc"2Y7b'(2=pW.M^j7DZCm?LR2dn@l!X"!8A>'=;&.d2f*Looh:S2[+uC;,&ZWSe0L1[c:7hm<GqX8+Be?/PnZ:H+3t
%@b?3[X8/>M%=:A]52RSih,Z%@gogAH*nbFHHpLtR=YA--j(bIuju6I_@"'ThYSXRj>_hnok'*6^>C%do@QI1%`-"!6hdq`Arkr+#
%`H4lKKBll(`;KW*h0L"5@X<C86`dSW<YW&LjRYN4h:21.p/YENEXAeK-'7"e(!jn.[b=)1Qn/"7[[$/o5(NR.ErAU+_-TfBYod48
%PP\ARPNtlsq>J;)CCn8H=u_'1<cVJl1A#$:HG1]LZ"Nu<Qd)h-muZX>>qbDdb,npU(t7bt;UB?WikYIkckh0D-^=(@hLL&:q<k)W
%JhO(K/CqB2VA16.b',<&!\^L%.a,@TL(3@UQg`VVYSYgJo0'rjWGb4bgXSLF,MR'pcaUr2JV)Qh%P?^pn%-a8"DF8tR4=\sju1+,
%G#8qP6a+@&9A?^4kq8HXR<QdXoK.8g3g$mL=.=:RFN)q;oXneP)5q^Kn@]dQA+6_gYcm*oE&]OJ4g0EmU$FYrmr+J8??u.G\+24p
%4XOCb78?M"1HeIi@a2QuCdX^Fk*Sd%2spMBAm/R'6%2#g#5!;f%luior&Rl#G6H!rZ-s!iYEj'M*.)hCW"jaLMc[)Gr;>0=0E:Qs
%>LA?OCY.1E[DJ6QMnXuBA`$To:@q(N#^%c,U;X>8>bi)W>i-&KmK6h:l>:jjQSf!]^?Mm:gjrf(8psl,r-eC6IeLt:5P$DU\U'XJ
%-?GT]4?ItRQQ-(?_)u/*Y]b07PtfYH>5@-4%Hu,&5Mi;I?cUU^FoQeIFpHsaeWP=aqP)U4NJG:J^Mc76c\LU6cU[jF[Y:ktC1u7I
%;lXi3CP.P<B4YBrIZ18t=6?@BHY87m!\7;T[`ml]mnDEcp`^Mr\,SG=FrBPi(jm&oJ7%r+cI8uR:33uD9:<eWq?ndbPH3qWRegG0
%6Kl9`@"\L-0)B>.#$uSZO/OXQg]C%:?-j=9@>hNTJe%7/_8EFn^60kZX%L*ljZ8Zp`i34]fT/Qf+#-J+#u\/QLk0Hj<dY_]3`^?H
%"<H><K83N$[l]V`]"_jCHAWi/l:&_1O/j"dj$h($9pu:_`REhYi7G9/HR%bDhAAAf?Fmgim+)(-$9Y47)f]1:k1VcfC.4KEpMj<!
%VLa3d[.l9K[B/TK#WfUW"qRo(DJpMAFaqZY`lU]%1^-!6R9-_XidA!^APJg%\tN?u?1@/^fA.$(s4\EDLK=kn4-%"c^HT!><quJS
%D-ld(\nG#H$J)R+ZHE=C>B6N6Rp/A!HcWh:'.N3qmL25?*FG73b68MkL:CKa.1]YY^d@EMTaYcbpV1qKg'=JHeP;*JL]kHl*Y0JH
%SJl"WY%niI"MRLr@&OIbhJ2HEZn3(-*I[TiSoXk)ocIA-%Ctog>4)gDK;%s\K0NBB$NuUWOI5mbQ-1UW0;^l+A_*;X5$qdfJ*YN!
%%Q[%W@/i7Mj?Dm8:M&O;]p>(JRPVV.g;VL\Em4\[/N7FKb<If-<3NCB.FEoLJtRlrLNt3lU9i@-dMtTek]2&:YO/Z<;<Fj=^JfCo
%_h(DTYZjb*:r,mkBW'HMDBi8C<YA-u![UD<.b/cVfLOB[504I-g4u$4Z4N*q4M0BQkVXO%Btie/A>B^\V(_gR%q>@#^AiL8(Z^""
%,qc;$krZ3NAdD+Mn+TM'G^s4REHVXfeWR2!ME"3^XAcu6H`^T=%T=jc`+Uh]:E.pLBrCpT-2_C:TO(Xa,dABL2,-@rH]<BrF,&Q$
%ED:"P+6:oaFf1P4nDmANPc!tL:BdH[oL_aI?feO%q_:qEr#*jq?jTC/_-!=`L0LP^J'=0,X&a*iKU`I]B)QHs+WKW+4qBM]1VW2*
%qG3K3(qTLlVI46%Xp5tOM'65JJbTcZcX*ob5p0bjUZ$G0?iu4U!cn<r-_kT-6C+#VcI/]!bVU8Y@`Jr[F(D=Ts1.)X)ClG)-TaXm
%U?ZB-GQTu;BbPJ5_d%+W6Rqm<TOY'cHF8t>Yg;[K0I*(In?34*8*G>\)IKAmafnQ??GHU2Jm0cCIc!I81Q?%o!d-3iE@#4JGutXJ
%@;aI.OV"$&W.#46H6chH.9*:*_,YsqfCj^q,])/bedOf0AH8]7PVURF!MhpLTu7ZJkXXQ"WPk"]1CPggfbf5_`W-u:(]\<N;fs%k
%[o_>N[Q;S(DCm<^r\GRUm/P<9h>To#'AWH_rcd;Qs.hC_YLf>)mS(KlAcMMm9Z5WOZd*ra;B,oq`3B:EKa77MqW;o^SluPE'H.KI
%a!*5brQI;UjKf`a*Y0[(F*M;&Z1Xm[/n<,;qsfI=m4PmA6)8MK(Mr'ckC&j%"JAQ$s'3YMU0l0N]ti4(.(Kk,U'^2lG&=m\3=D2>
%P"=lmTc^=`=d]lJSH1gfL'"FZg3kc9MNqppF\kM#gs+,;U*1pdqWcYbJJ^*2.M<uI!MFtcko1VWM-1PTV9DVC1KaAdf/DfK8U)[i
%--'i0)H[+Kgj9TT1Ose4:<2G1l;U^hRJX.SW^ln^H)DM_eN[-(jH^",2DC!E>!MP8+k1^<K1^*TooAbYne'\>Z4Koe"d=lCQn8NY
%EA9BhFDiAIfEM.[kAG"&H$T[Cm9r>&#HXnts$O""A`@36mK?<PPHaMYH<m>:L]#nm:0_kQ83HDE63$,n*G7E^oWuiE>NOmRJe[*f
%G[I)2="JQE_?FTENYsc(!5KQu1[U:YifX4W=dkQo?pEOID[4hQ3@pVP)B8>lkD<!['F#*@@':i[Y$ONCiAh"ek(ula5"Uktd:p$D
%X%CJYSKMKBA3p:(A`d4qX9DM,m-`N9k4Wgg#A6U5qg#]]D;:7K'8(IoQtT#J,X1>%g66&<]o0]5"+<%A.83GN0:ZM!nl5BPYC%hD
%@)#R#.u3n+.@KOS69BB2e(8n-/M:m;lW@db#$u;a6R_@q$oeeK*VKdA3k&s#-]bN]#Z`neom43$1UqO6!Ziq5;Q!Bb?UJED+HXZl
%9:1A**D=b[]\FCNSK7^d[D[Ol-=Wfs@Z<$AXMT;CC?KHm!:#4PfD9&CC+^8M]IU3:FKO$pU1poA=&jEa8L7PYY4fHjf;uESaE1nT
%-h6DMT4"tLbHX(=Q?$ZG,Vtu8*=6jlBL,N4Rt:'P`qI10+YNB5$jdp6Y"K\PVML+UNHAp/lE2?EOrA2K/r<78YCBWfUWC1!f;lRc
%m&a/er)t#//+aL97bKZ6?5r4GrJSC:TE(1)W4]4tGr)P>/!d[:h,]ilB:YlpH*Fs:eRBXoS=&G0"M87b@cpZP7h$7=5aJo66Fs`q
%3orj\2PC%:"dsRFNjS?R:*NPCafMT',V,.V@.^HEcO?,d.j4AC71bE]YYNID'q=7i*$=ifRHMCudaT,u$dP@i3PH55Of?S&/h"p%
%.FRMLEokgGGX<3e*mu'^0'[#Aj(Xk\BIm_0L5`N4\ZS-^5NF!\Vquqo3jFqnoc#m_$E@hVAT:n`%lM@AaEm^DZNfZB#Wn_FNNk3]
%&[:jB@Q0d-mne&^01.pH2D#.D-&p-6OBguH,gc<ZR_&:D@XJ7@(=%g+K"^'8:$ck0?.oB^`B,^_@<hpalI+YDf+XD4YRGBFD]9PX
%%\KYm/!cTG6!&JbfFd9KYd5.3MnlITbhs\Y"%VWT$Y8VjbW`'m\e`.EZK=JX/$ZCG$mZ3;m+^RibC+l4,r&eAoauA).9eH%)0Y\c
%P]_IQa*_iVTY<`^(");JTV(u''\X7JbO'WraS=^Ahu;2C2XAEYkPOm)"d^EI`'8"a`SL"6MX+*jH_<Hd>S"GLfr=cW:i^aWrd-Ph
%?)oTqVq?-=aV-8<.!_P((I_-+md`V%p0Fij,RZ8_SnR.Qd8R-Z.!LQ>GAm$GM.G5tles(*^1d=!X"R):B_OrF:UL%[.A7uVqnB?8
%Y2J=k_!'E"2IITQ.99jM:cZW-]L*\Q:Won0fY]65ZtgB\]OM`^I%k0hq)<J5_l3)NlgQ<I?lqig3u299Y?:M$Po0"NSJ^jQQ=:Qa
%g56b2a]^fa*nlPHf)>u7AC#;_i?N3[R,QMqa!c5%r>=?Rd=T$n,J/-['muMtR6,ST/K$uQZmN+te4KApVsoiib;,h?fTpm#;m"4k
%HBN[o"])HYA!eXtR)]UU>+)q@;s_^F`CZA-'KjXkN6\#.D<>hUm*4b;Nl?8IRsiu;hEL5kc?ft;ci+>cUD#6+.!hTs)F[H.6?C7I
%m*I/k@u1D;ROsu?Ef)`CgYCGV)*Z.dc%A*o-B3V4<b[>kHadXUhP2Tr5<2J^/C_S^n^'bM,<<S4c*MVOSXTG"MPYW3AG^^LcAk&g
%2;jJM)W8VU%<-*p#.e<XmdQhH)Xraj)jTdBYkP`A?/7YJ2YUrrc"?`QHSuC^A'no`,b$]LmT?mk#4qI%h6V&&51.@Z=4%\`h!ATu
%Jt8A=SmpqRacgPs.!V2g)frW$n+J:%"PDD?&*S5`o$-Yq[VoKiPH<Y(TdSO.=&XF8"ak4qSkA[ff'jDjVJj73(@`.+\^mo`gr$2S
%h6i3Fl8CHnWe:3<5p\T.EXs76E5tSb1PNHlEXt6Y3T(p93T(pI3T(pY3S/\Bh40C@/EcML50\82Ouq69^cV72DJ*HFp[EK?p8mJY
%-$[a@V#U/?=$F1dra5-lk`*%2,5n=0^$G<[ceig?WQ?,If2@DlG#$g=4OQ>Z="?=qLl,I=bA9!HXRko;cRGE-hGPj>ZZLU#8LHSR
%/JGa'QHBia![//rASJ7*Fb\2S5lb#+e'("sMKOV$FhRmL1])44eo6kRCsHfUpN)S-6L#1elQ^/XpZPFTnaUro^]AbO+U)t<Ug>Mr
%=Qc$9.1tZR"I4)1At5^2joPhqQL5(GUA&<#>mb<E5YJXZV`SNUCJ\@fO*'XI$t-r7Da6P1@aRN$_(+=lI?^$]]bORq."qia90]#[
%#a%Fpo@$3_D:<'dI[4A&\dSrrkeIm?*9u6^b98<Rm8dDp4$0KmjkP;n>3M,uTAlhlqBs.1(blmtZdmU"fUEK^Sa""."4/>&#"Z;?
%"j/[7TF5pbU]k":[Rrao"0F6t'a?55$Uu;VE/-0%6m'Cn?Ma,]p3@_U<+f$/b^B7!iV$OeCn@;^'a-dd!h`SM;k;^Uf%:\H[_W>n
%B0.2FWW_^!Ck7e/%&b@;<#h)9=eo503#/\>"%,jG\MXA`6,Vp(Rp'H\%7.j"k?u:u<?l+k'87=j<#(__IOBuU8f<4A-0BoZD6A_G
%8p=NR#W17*d?Q>T[p60#3]!CJlLk.B:5V*^^uhVj_"Dk3Y-tgr@4&[r-lld>k/IXGVt(%7l\_sX/Vd0kB)soQOuL:U3E'3/&p5hS
%\Peck3Y82W#7dt7qp[md%i?p`F,3I#o]\Ug4h&mp!)tFf9WNTkB65WQ<^6=>#D>ZY_4l*"2pKR"k0C=q4%'VN!blC=+QZ"LRV0^K
%!]7u&PEoZ/65GOP;<to)jq4Pk/m/<\Yr#LhpS["W&!r#5/6n.bR3s*AI33]+W$PdnjHWA\-)/T4^m<%KR:1fO+=dk$06FhtT@u&a
%5HK/eDW^eYFWf#3;?8"*WR3"AI7*oNI(LP"%8-_CL]CDQn*1&DWZPg-mLa5Je9#</:'YH;@s*#85Tdq\6HbW#k\<hejl1#*Y9T<a
%?*MNM\D&"W)88bR.KH583&Zlu2t2Z'8_09nqLH;Q81U\HF5.9@LrTl]01LNg_F66(i0aDU!QM<QEaXXL&%_[lHNq'm`+mh/<M#$,
%KeTr6L"WbMK%=%,$+4i_V(m%F[E3s9="I<c@%PghmQ/\Y@3L4TLoo5PZ[19P;I1'4[7iBK9QOSCQuaDL<J/XD9HCfN0F*\9!&D]F
%@s7Q&("tJGFAeaSU,5FY"R'E5otHRC9ZJOJ[];\CYi'"m<9b.l4f5,!G;)1t2Uh>?r17Qc'!0Sg.S#+#\#*9b3`DBb()<M2h.:J%
%9!I0"TTAq@:SVLM3[bP@2dkNS#VKdTJbtC1kW,uhDNf<!e(6\Z&VK>GV"EfP6/WpI*e<d'=bjN2%#Z3e,t4nQD1gJf"U1>6nLNs^
%?C]M[j_-?FUcP^3?L;2B":+n&F-kOXjpBohH9\+h-p1:Xhum9*mWuhaGK\JN9Ji3BMd\?V'tqm]Y@-c:R%Fb.YtOK35/R68N.X@A
%"qUdt?dO?2<8%9O3\.^O(bQ61FG&,=NU+^6<1P4A?&%@"&u<7WS0dek/9;sqTrUX4e1!9"6sp$b'+=r>,$p?r^\=E8-a,f_[#6$E
%]#eW<R@-W1_HeHen.#Rl/R[X"/2EtVoUERs@3;6^/jgtV@H(<qVGgAnJY7nIG:qB&A)aTVLOuBbdft_eZS2c'WlP6$U`_3f__E?o
%$BcbfpPtMI5.fUKTCaR)'D'ROEAc7=D_e(6g&%4*)*:J6!K&.f.pfe>DfD%7JHNI@gh'oW5cr)DJft0Er620rIFKS>b06K[.gko%
%_h`,N=BBCM'Qjo^!*rmIba8360Ze1QS=o`bY2#phR[It2SJPic6=>VZ6A@6,a&7F5=[2-@C*JO?k"+YqBfWP/o1Z4oM'lhcQEFR+
%bCdnUZP[]?JXB&ATKj**Y\"?$KDnu09\D*Mr$/F>EQCr,/-ddt>rE&:g(NbOGLorLeWStuBQ4nVqnd53YnBlbYa[7E/YjK:_&-hu
%E<:;Qd.puQE')N1,QJRJfa5baJdin,<t1ZTVRUMY>kV<MqO2M,XSp[VBh5!)61G!hX4;`r#ip7WbsXb*7N(Ve*<%PDgHO.Fq&p2T
%bQEo158k31[E.G)VIYFh5I(F?iIb_$<MXW1_4=#\7U=8I<t9ig"+R-t=&uOe47ul"KL?X/4c>mA'F9RfG6\='Mf:?pP<?B+F[AKB
%*YO=-&^3;hBhESWV#E1ENF3A',i5ZT,7HRe'.f]HZdW.GVZ9:Uj96?%+)$X08ntEQksWFZTc0-:Gq-tKQG35h>-U#,"DT9`_0H=A
%*]')&[14#+>UNYbXuXpPR21s@C!U.+75`E@5B?a,E0XKrP&1U%'H0bG;W*ukZnD?Ic:_pq:7pJS@fX/'8s)Cp#+rcVbHT?t-b_6(
%[0?3SaEYW:MRf*W<R!Y1bdT&5@-3/kd["$c*KrjV$2Xkg6__I_<U)8QUI%V?Cq7oCi3SS'o?dUU7VHNElm!P7VdCe)_u1NXC3(LT
%D1Rp-=slraNdsMC!+S`GjEEk`CN]sO-kcBH\P"[)O0:[s&$8ml)1WP+bpRK@pb^A/O<YBR"i/1^L&7Hr]A(]qVF4He6"KKZl?#Vo
%C!#_l*kG`99e<CoEm0+c6*`5]#mkFg%4R%Y:BDoe`G&b(K5HroSMPD_KrRQsioo8&6WTc2_GJ>LDh2j4j$?oc#=+cI8,W.tS;dfV
%d5C_@#!ll>!?I%$QKM_EL8A<f!u1f6K8D-L5ZSt3WmJ*hE\r?V<J#XS<"IdMLS4n[+OaGnqkdj#7.6pV(kDM\&VVKtN8r1nM-M&(
%"%Ob_`QRG%M1?XG+MUm<cf$Xdi"&RH#=b;Z,+mn,N4JNr>>odp5`YLF+,Ah!5(XVSWs\&F7aC\l"E_O\5``E2)V^P\FOXQR;c_g1
%2UuN<XItUh16[.9[fNjH&^V7H!Sp*gTT^$."EP1%!@0)0:-]%"8/`EK3nj#7WMkI[+A]On#p#RCC=`VX63k;\M]ng)<bHY:WJHRs
%LPUhCLlT"hDZLHt1!+Os3"[/JA?[5N@u@<8ifMLr:^PsN+ebY@ZK-mr:+[j%22HpGmS,-"Q-_7;Ls0DiI)6H:6c>!=RSZQ9nk#;F
%VF;bPO=Uld-_Q**qp*>j5Y!u>mn4DBM+DVX,dK?IT9j9^!]kH8qpRao-[&ij(!mCD!Sq7-j:atF1,&k'8?Ni(GQAgeSlImCG9Rm4
%M!*tUGucurS-Tc,VBVXBHH6U_jDt;1#mQrJNqqphRoMWW:m(HFjDt;Pk*p`n'+I,Ko!pK:+eWa5b/'4*E/o7,Mg[1Jbf.kdM+me\
%*kmT<<8,NkiDW6%?^[%i"r*PGl!>QXUs0B?HlGAJ"N(A[Za!TLCJZ0Ebj79V$>F!aK]i(."F)*JWYjn^H;&2o8rfH><hj&eaamat
%jc^,M?"(9\mU?2W(e,>Y3sDLD9HZ\Q@"F3ZJE2GT=#KRQ0c'^NZbUiL_SQV;/72YAj9"ha42<nRe)<1%n-bo+0c:@ai=1JlC%-NP
%>Fe7mG_386-CH>9'1tR;@@If),3D)+M(RHb:nOV)I-X9'7l9bd.JE$\++:Z:rjIacpFbN$6hC^J7:a39j!GQ5dn,jY[EcKCK)fDk
%6VBO@'Z:^e8Io&<[KDPeWH.$84e2>:Cb45#8ilET1b96j#$%f3pY(<)b47L$4cN^(NPtF>&;a2F3+Y<dGcF'NOKP9!$nA"[8#U"[
%(Y=4iHP0TG"ZhBH]S>gm%,`t,Beet3Z+)(=.ndh+m_D56SmHR!`CTT6I8P=Xk:OmAnFXWn.0<"pYTDkcW@sRU+Zb8<.A'"@8[.L'
%2P@+a`4qK@@jqs*aKdqYOW(!Ee8U^`)aMEX@OsmKUK][e/E%d(oAMLgINYBX3EH+WR^3Hf=HiV/nA`Gga_qG;aG"mpft4FJ?NT,F
%JmdPLg?$;R2[foKVO4P@'m#6Z]Ttp5!p11uP_EW.!S$iHO0+F=kmVF6j;!E@c8]8Oa%qh)0FWuO&\oh]0!ujdjf2!!1`mN>'-Eh,
%RS(l1E1kQH>-Hre"38AXaN5ssMKo4@I]aiI?-J`-2t\0sW7_#i8`lHdMcj:\X^G8/Gs$2C=Q'pJ4l6>0Z-Z9)!"g8$+Ga_ON"gRs
%-k"H[!:htd'i"sCWgP.`!NnGe5)^FgrW`'-(-fkN,M%=VdK7]V#?3+UP<LNN8.QU(KH#$u0e#g$,eAi.63HeRTAbCt"O'eF0:Unb
%Fb!J&ODV3r8g+&Ma864]2)Mp"J@FQ_MGet7'GqX@9HN.Pj4[nA'omR)pGWMAR(E[s0#U5Fot$=[TO'sMcqaiPaDJKh_t3&;LJA?#
%#Rao$*93^Zb$GH8%H*&PbcGSSlk.fk>/&f&A'Pgi34=(g)D(1?VEd(F<)FZR$5:t>f\)"^C8VZ$?BM^^Un&:#<#tTa#7Yq*ZE+dO
%pgMO/Ljg$]Ve2I'A8PCu/0pu>JLX.t:o?TAbZhOn@RM`Q(.\r)BV?B]bc*SUn<RD?Kk+N*$@mWo5b>o5$()4tSmoD];K`T:^!&j(
%G?A3s9HrnN)k/JrqK9nrbogA*RLN@X"0:5])j6T(4D;OOj+,r;I5R[CH&39e>6o;])DFt3dp`q?bb^l:XX$q,ZS&=`ZG[+HNl_E)
%q;'/n!f=FE3\k'"Ydb%,NcDrZip%/%R8dFF@<kJB@)5MAREfY0R.fTGVG@s;aqShQ9qVT3@M3Yq?@MCQ&8;lo;]+2L<pb*p<Xj,5
%.2hm&(5&KYdOIr0.@[OKs5"[[8m$d;DI@f5$`cp/^O)55@:)CU=>-bm4pmTm+2JV4QjlVh?&$g_(KOrHXJ(NUM@$#=CCsSJ/?'C<
%X;Y]f.PQ_j'Oc,%r\>t*OstRs.quD$0sJKQ`Dm<Jm`@q]#B]88<ZqGjYkFLE>K7oTor7#!As$1MhjMeH'j9LOb>&d'YqB`eNC^,Y
%j[NS`XI.17=7Ri63@'ei(QtAJaK$!uSBFN2>q4<Wb,Yo\_cZrj6ei8T;s7j;<n5,g5Rl\i"%k9'_9aIe.Y,'`fo)oH8ATN0C6Iqk
%,-IYPMYIf]'EEhN3I)>L]]/V#+2LHk@X^l=C4aQkl8<jpX6+g;@*`JB'u*[lWCX)pR)H"l4"etb\aKilj4n>e5lrPF[uWoS*o\WV
%dEhYV%&RQt=>?JU`*"Be%!giJ*"c9R<>)-_^l!E3i&k;Boh&P/Ec4cNX;i^scnbjT\oU=`5Bp;1Yss)mWb?$[F34=3_J\JLlp<@n
%+$udpX>#<l71`7,Vg>rHkdi\QMXgd\+!E]+#/0NVimKb:`m[rUcI*)YBCL;Gn59:i7oG=qY.Kafjmkq&]E1<,G_P*+AKHO:9=aQb
%,K88@ECGRl2XL4O:hsTX"AaPm!s%>Ur-ln):$1Y(WGFEso1/-O`mA]%L.a1EU0R:NOa)O%&Dg!kE!n"?8bW&"<lo-dgl>d-.dXlg
%6Rcdg&e@5\N^E.hPTd_$[m"2JJ]\lu[Z/72r;]N40NUK7a^t`pY'pZm6OZ7crSR`P3AuPiVjKHS[c?r>4s&2>5(_oORB%D01/p>:
%5:e9Q#DoK']="t&Lg9lmE3=YE%9Gbn6\joFog;[=.dC:;cp;[P(KWg>"n!&BeIMa0H-.-Io_^W39'5DOR(<&2`iadcSMCJ,WunI_
%=ClLF!u=g3=2..S=4'/-cm)0)iEZ>3dFPaeo&.g2f8g+Od`U/P=IQPkqU'VC`I.UaE4tE"LO&4nh9+=[(kiQYY92;Z>#J]l[+2Ro
%k^ECXN*p+3T7$TN(e[ll5+6j).E5(:4U"U$njR'Q<h0+$/C="TIJm'431*cpr;_Z96,%dPR'3,kc9Q?Ym@:4!`^5i@F7l;nK&;Yt
%[$ELp-BkJP/N-1*k3<21[_0-H&K-^4nSn.W^g-gH1KV=Z=^j_jY(#S5,Sb[9qOuqc*FMr5/CY)LZ#fR?2IYP'lA+J<\69VK56K-Z
%mP/bT"!E1N\bZm=_Ah+;qGI,DE=>o5oT(!,C_@7jH;C2+$O?5`<@Ob*I%5m.+Z0D^Xi-p-bIh+gDR4Pc8;T[\`LR(F:2iE4G7"Gr
%S\hVi:-k/hWMhl^>,"(lk>$Trcn4AKVa,`A+0:WO*tu28]$6<af&5YR*8nlbe=Rr$N_MX^r$d/MC%ui[IgT0))*ed`$FI3?rgeE_
%W:@qqQ2":R1ij!7ql"Is&94X&^`4g4)\*U]L8(H]T`P55AiYVRRLHcO)%IAf[fNm)op.iR6]'r61$3+R?1U!cDWX:H;1Z9FiA0J!
%.L\,*$C\<>h?A!)O.+^E141POO<]AKWBg&+faaV]oWdA0gdppb:(QF)13!dI:W=9D&&Fg9H0.(0dJ-WmI$<bNre10=M<BpVrfhEL
%/O`Zg"&.l:Caf7\-A+QOksnroBN(`Lr@+#Va>AD10cAc28f-@"Nf[Zh`f7KU!]r(k#-$$X&t:AadU+c-PgJHkO@*,IX^?R%>/+OD
%iU[J4%G%2TM:S;,0JAWhr;[&`%&G$JA\i(/rJ:sJ0JX/e4r&MVb:EN.]3HeFO2bTX8j?p?\:mlX0d5Vp-qZ]NBW8h4I_"A*9#"h1
%l,W/p4/P=,7m2-,)`[*[BUip<VXjm7"t)GrN?QUpr,!k6l28-lVXn<[(<E'L_XCsb-CpbUHY+LQkkr6mhT;eiA'LBUL=4D+fN)u1
%1mu9o:$j=0NaO`Cr;\UkITH>[73LeS[3&Kl(odHN10`:?%-q>.T:."o2?'62QRZr%19mT9Z&(_AM,$IL;rSHfmZ[uGDXZd+724KG
%.0;XY:6@VfFJL)s4$H]-]6Se2U0E*pg$V\UeR@P;:>@$SZ&MukH:mNJYK,&<Md5W4pr,PS7n58e7(=)RmHh@IgI<q:ki*A'1(U,t
%GqtGABB32U2PQ=,*?EVMF*W.4j*#HZg3,4hlpWl8h8VE0H4]2Zi:1fI.!J:Z,KcPil\KSZ6p#G"UZ3@lm$*;rT$G6@7us)f`1oi@
%4egR8OcLo66L5r#fC@7L.(>1cjCpb@!YXUTNe-8J3]7<XaaHsAK1*7e,im8Mgn#ZN&Ws`>NfT$-RQ<V^EmWf3>U9('0J[ZFd]p'>
%9M*8p7rl0#j!0t(NfK3K$E)_"8fDqRZm:O"&hh@`ViQk*jB%ER@O=+Ep$knC.!J#5,S0_Ga@U:;kh&H@4$%\NVt]u]8Y4gL,:LU4
%*$%Dg]f\31P3;B!3(cpcIMbYuMg9\$,s$$<1aSJM5+WDK:5Pnh`-Q5njiF`VFAsQ-O^mE$p[ZSt`)j+hB9'29WRd,iYsbiqU+B10
%kVu3fFDRa!QT@=]P%Wk>BM4rsUZ3pp7+d@,*&Sd*>rpKkUUhB!:$PKeq`;`'$ms=7U+jW'!(Y(<NopJ(Nl4>4a2VR\T(sV+0fe:k
%@6>l<G'$,!:[c[cR699bUG>^7ppa!=gX2.O.(4uW*4'j2F=-b@kkNB8]YZaMRLXJ&RN=U=<g0l<+!%K*=mM-/f0llB+u\uR_$Mic
%r)UdFe0`OZgnmGEjJGG.M;@6D*Z_pSVY/U:9n#@d0S4A$I.hjM?7`!AO,<#[[.),VF/#k97!,0Y-DhI7.8cWaG=#O^kO(PuZBNHP
%+5=nU(`XLNaYS<lHmd&W*T>,`EdWfnGOjB7:S,X;j#fW-gIP,ClhFRXPWL2FP=L"J]I114CrGKZeY?V<H*30gqID4!I,*m;P<+[&
%PQsU:N;uDX;dr!hmXuubIUqKk3)I7dE'bfu^Kbc#/Eh>gi?0%\4:cHD&'F,+&YUUs8k^Z0G"P^^b+0([atn8Z)9NJ:*#fj>Mg/cS
%kWo:;D2]l=jH3<6]P>L-M=N2=7Z&sICof$\a0F$d:O=^+'/p9fKZI"CFr3<`kg@eQr+a=CnY?!db)m:3r1;#=%-dM(lp[$tFJXf^
%7$9<M(e`$8@5R64pX/N,4AX!ePjTP$4-??L>mpHidA7=Y?'+DAR-liH'5>V8-QL-p3n-TfHM!SL;grB<pkVjt']\DE;\V;:l4h4G
%EMo2ZD<.Z`f<i%$IELb^r$eCr&ZFLXULR,GU5k4"j``>;N^MWrUF2/X3[0i?@q&@38V4jY<.7s0ppa:@s7jZ7PWL$H'udW/WSb=m
%(SBtiMbrLR%V&JK3sSW_!&nnt%U>4X:9:HcfDXFCX*W8><nHQA`iPoaZU_.c&_TqO._fP8I/GJ/SoJQL/!i:TL6^X$3Aua0V+uhV
%jnC6bNF_-KLU!r9n\]%kJK>cVat%U^6n?U$nM.-oG=#7ZAmu_2b3768Xm!YOZ)n8jp,9c&i!D-@hn*l#PUhgS+O5+[7n1)\@NHEQ
%qNQ2<[Sa4:*Zb!4@b\t*7ZWUYjl^E>O+'O.'B3B0fO4n6cts2m6W[p;?5tNJHPd&N>!%OoQ*)2F%EgF!*#fFcKNE=,j'mRW,%D'e
%:WcFSX@!LJfLEr.e7)ro%2L8%"sm$qUW5dFN[KI>NKkNFk8YEmb>7XJ`liC67n:eoZURI*bjl)^)`?r;@7B*9Og@.!ZnM+?`6^8a
%(e)X3@2plG;^,pQmZ^i-nJKa&dBpRMa2cZOCJmYle8dL/O/_545)cN7W-9RO.C,7@m-*)*?EiIbCJjMapf`p:7bBJBI#RH;XR!qU
%>Fqi>j(s(9P9OkSggR;OG(X\&8bZ\3H*rZn]&aMG+*Te[nK@B<kVi.#qf[)R/JHS&n[H.GO,q*<p5Y0LI>X],'9*ClP^$Gt4$FjT
%9-#+<MfM<Xjn;$=`9!`G2DUUL4$#89*Bti2QNqncHnI)8nI`>p]VAtYH*.XPFN4e2*N.)O3'L5a:T2p&fL>J2`9a5R.8d]*G=((;
%MB*eLM]n](]8L,G7.6l&2L_!>IMfoEkclkT]NE3Ena\d^+30:[-UdOrr#NfJ14!an01qcJc[0UJDkhW(/ru%Y7Boc8H[-TdZ+U6&
%1:ig=o@Wipdp=]@HF88%b3S0/0CO=0Fn>(2*h8i5i72&(h7cAjlJhgf=u`%C;m>7!gjK2;r,_Q$\%hT6Gkp^k*h*,V.h<]7G5M-`
%mJHWq55>$.NsY^QNN;e[J*lUCB.r*9T+l1UI.ic\_q2eJUOV)!nFG6Cn_$_-&)raZ_*9%@9cd2tll,ehl?ET"HY&85`b0Q:2<4BC
%1=LLQaXuk7=:1P9%D6^hEM/TS7stQ55%upPZQHl0n'Tf]n%AZB2r=B.k*NR6rVMqjel+8/O!PG-X'ZEl8Zn+qVeQ&_on0aRd&$-D
%-cX?6I4@iSP]Z*7k8?Ij$X#<4Bm--5+AB"fm4pcaA3_piZnkH,=<c&6e9DOkI:tFm@[E,7H/N!P&=f6QV$f$m/aQ*lA0n]5VMZr'
%?%hTY*=\2Ld*MnD*DJfYBJUg,_j;4[O@M@S@k47Y'[r24K>7jOh_`l+?TL,Ue*hR5T,Llb.IuR]%6%1%LN@Z2Mb'XF+F&Wk`c8;Z
%#0\V4;-[(BFPI7s:S\s(q,t5r-"LnWTRq&fdS^)ogds>/?ioRh(kX=YJCsa(XVBR\jqW3]-lLgc0eD_tSBKhLG)jD&V.XEL4Mk>8
%ZHC(h_.A9c_4e\[aLHkV&8LTC\ji4<\slg<#-hRd9qX<f3lju%>P9k8gMh[IbuQ/-]f]nqQ9%A^M*.;"3jT^FAqVk_U,YVU22!BC
%C-*T!/o#l&icV'r1`"k-3_RM9F>/:92R@*G<jj>uF"ii%L<aY#&`Q]YH<5@WD+DF[laebI)JL+ZYr+o/fP@,pN2"JCGa.4+*;r<,
%eS&Y6l$jRM[d_kGD7T-R:+1%tC$+Icet&?QNg7H*(ISJ.'J$Ku`EX>eJh%*O*<[bnfa4t8?kT8'X[d$&[#Q#ZC\q"XT/,h%@%"=:
%luZ&NI=cSr11Ah2/*[pPH[c$Y/:7pk1)eV]LMH38C-Ep"KchODMTpc#RIo`uKQaEgAuC8#EfodkaX%eAG&(gblAA7#N\j'Xdc_rE
%\*gUp"trq:P>1$CZ7&`Ao^V3<k^#e0\Cp3KYk1MsjjZ_E>c&pEn%)8\:(*r4T9VtP=V>k!R[FUj@mmg9U)c3nl2J394\$):gUe$.
%#`[,'megf9@uA,_K-p*#i]Fh0N^IR1Trb4f4s,G`Vr1D`bQ>D:[16VqXK&=-P).IFPT*B;m2m#M)RSoG1/6Hg:t^H='Zj'ZVX(lT
%qmkPlA@%o6?U@1SdLD1N,G"BL+JA,QVM1k&FO8,l)u$bfFQJ`IM%2P(87Q_)K?++3%UgmGc)J<-lO%NaZ.X7TP4c!$[XsMpXPU+R
%a-'`oNm=_mNZMagNbWXD4Zpg?c&LH_15WGBFK0Nh1.LIq(<9KM[';4?s#c\!/-:n?8a_sgdaU7:_(&BC_4B7SY&VK+nc,-8n`chp
%3FMsM3IAbn\N>hfAKn^O]SoN^i5@gsZt78"i0q(`%`"Ps+<k5:H<g+td/?&nUF(n!8T'15cGsYV6SS`#0d]+3<cQGW0]m'i/mo^B
%A&t,LbHY7_e&,1c`/!)-3)Ni5mQd4Q'@<&\.kp5ET_iD77'cb0'!X!=VhIPg8s@`62p--%cR"d^5C/mbY.$;JZu(<533:8=LTj]+
%EY?2`4.,&iAo/YN.c'$qV-C?fMF_LR;C5hDUHdB4-5:40Mo`@g[bR\/9ojum1^(?hY#@>Cr"<C8YdU*5Q:3Q]of`mEU^%D'<[?'T
%bGg4]3Wos*`'b8/N#;4XR>=b(o\7dJ(u.lA0/_A6^?Sq;>4m;Q=_C.4]Q&BF:=G4&M3g/=r:9!&8"]C6TA@'XnLab1Dmqq0.P!jt
%`VJsa\^2B^>>N=2E[0A,n=MC'E;iaNWmfb&ZqF!_LT*b=^mJ?*?"<>]3/.3o7Z`64m3QRq@LlgthZ3ZIo%B)\H1^%g^!Fu1HM,fi
%Y-/r)IJa#=S+q0_gu??Pp_bY8FGBuPV3Nd3O8f91VCPl,K&1<QjnI0cBM:G:Ss#CN8/8@mLeIkcik4@5cn!Ds8G>`2W]g8"!Xiii
%K?@_[Ps\2@.EA4-)6JlrZjl8Y6C5FHMIII=f#(H-R\u9>:>>8o.FAWjIU@A"#A@u,1i-gPR9!.777;"]mM_(;%9(/in=-kh=eSL'
%5)NZdg;_pFieqFPT!d]!nW8aeTl0LWi`$i8V%HBl>;)()QYX`a.]EnT;4@i.`6F::Tq-JAqT%9oDO\!YG53KD5aI7E;eFFIP].!S
%Lrd^d.'2&5=%RMVj7r+728V4-%hGM;2;3;nXpmB.?"X;OjGqE_4K10(3[G!=@qp!3'f2Cng5(B=C>TMl.d`WS#3eb)#&$`p/8Q]]
%m=[m$o[u*FG6Q8i8`i!@Z_=sVZPc-cI,sQ.#N"FeQcA,\-Hh[_i?1'u6f#Nu36U#H'2oL]ker^5[kr]b9HmIA:TkIfB$!LZD8SZp
%QV3pO!IF%abj0?+(s$>H`F6b86Z-tDe''s9["*h>Mkpi%RYN5`/d>UV/A,ebonUGe_H1B3WLjZc5#Q<l5E_<OLB*k,OVRO/EZoMm
%H!E_>FJQYB3;.0b,:0-_SVfp9W>sSY&8uq`AmPuVc_4?r>&ABr[8s=6X6:\:K.0?$6V9t>XZ5\:(bW@KOU\Q8bd9VldhNHp@J/Tr
%.J9W#SehXVY,n="<iPgCcEj/*/^8N(@(hGpAmu4k:WQ@kW"tdWRNRBEU\:,m>0nga@C=3kkaEO=23VjIo(p7lP<8X+%.`d(.fH^-
%g:#\3bru@ii[Z;PB2pcTbH+THhRS.7"onA>bst.IG]`iNXWo.fP>mIQUq'.;?,#OG&@ubKBDt7aik#Jom^g?5eYu7Br2Kp3nL7l!
%?F<$4!%[DB2)*O\&QZe5q@-7Ri_33FFJOaUL#>,:PX\Q(*#f1?,8U>@&XRKh;++q)j5;4IMQ"Wl!:9dGgKuOZc0p5o)r=QT6\@.<
%aHt/oq@T'M%$)Zq$KoH;.#TQHY$?9B)X0)^TZ/Sr<q]^gkmWKVmMJ?92q1&DX&bqARCJ'O.46(KV48s`EMX?pY,5nY,;<,d@&RR\
%?(b:ZDUQ[6o&K5=LubH#JH,.^L@j_fh`]:;Xu`bJ%8k<OjoSkq26>r&]HY7@!/30U<u-4;b<DHlD7S"4fHQZLr44p[<o90bA.fHD
%P<Cp[L%DUOT`t8)X=-eF@#qTN--).@`MfB>#hM[P`6b=.KZ%&9LH#bXb[G6paLuV-@KlXR8D.J`"Y=^9`jpXC?Ya3t].41h:-O?=
%M+1VeZL>ln/p.DAKJu`'jY(4o7/E!M6?FWQLpGX#n_QS"`,qs5do^am'3`!T?1TkhjR)D"6uL1!2b[JI6,$Vl[=_YR%:_KVkAXBN
%o5rO+*kOKTX<6075Udui4&CUK.r5KSf<?X8"6Jh!<E=hcm0@4NG+90,[<Rq1^Sd<DFU!h;#>8fJiK`8&ANGM3=Kakr[0r:`KO4,M
%5f\Ea%'iEhF'fJHc,31/c47DIamP^)IF`[0#j]&1MRILEC>KuP+@EDnUdZoQoie->/2c2#!L_\CrZ]G5'A5VfI>nmFJf'Bi:eH[/
%iS;K]P0l:o85ZE>92TI_43hDCbU]PcThFRYWhT;],98u<4_CcR1R"ldTo2oaW$lS%9u:N,Jm19A@Jrlu^oA#8R_8:21:_t$`fZ<=
%N3W%+a7#Yd[@Ca#I]DO*i$#R^WC!b.A9)]HNVr7gP5T\daOY23NhTRD:k<E5&WuCR,9g[fSnCiNV5[Tcg=Yc$kAZXDpmT\RUR`%+
%A7hKWTMh#VFYSUs1f93?3SMjkNP`+,)U&o];!B-G-F)UEf`I6RLN8g1b#Y6!6el\@cmht1[0cSLbq:>W)4H/H)+11D_\fY'UUd?9
%BY@d>6^_Vg9p+?\7TXJIo<N=[L`8pRfGEA'f0O:`*%DV8[HT4ad`]AK&cLB:F/4fM,ii^TAsFl;\VYmV%O\5M2R$sTRs^%ZP"Ju-
%fJjP;YKe9BX9V6mX0$9"8V+Ta`drj2!:N%]s5i-U5.^aKbQ8<h#.q[8jt<E1\2>ha2fVR:G(GlU7't1.kG`X-fHn^jI_,S$QU%RR
%Q!"**8`Xo*(,45W!47>`n:02@4-7p",`*`0hVLOQ^4ZWW1MO#0.k;_P'<.tVaZY3J!8j0V3(NG_9.3)F)jaO2odH,V<4FWp,7n6#
%a[IR8O_bV4_d8SF1P1deYckua-\-pig&%_I@N*+.Z08jE_`J"WV\D3u^)fm`a<SY(\LELb[ii\Nd$6rkO>O,On7#93qN`r/;r!d"
%a%$5Z52n^$/m#Xc;.1,p$R5(p/iSSk4&1i%+b\iE+Z0M#V40p-S[^45GhK3'H^4*W6U!<D1mKX/OaX$M[K-d_;V5YJMT3IRc0m,Y
%L-/?N(MOTU>_Xb/&Z@6tpasX2:7%V5l\tXPi`W)"P*O>ZG+s4""+pC>A-gT#1@D2nk.1tfDI2W=Pt&-Fps<4i8g]?,SKtXoAq>!$
%L?d(KJ7/+<Z]NCn.NhX'Y"\Nie(^=4)%QGj<0m1pNs4dbrTMF,h^j))#`X@l-sp-ld0-O"Lqe4cqa+OJ8ajk::EU8\jQ>!^]*)_h
%7Z?]BL.B,5T.dJX*:aoMf3b&T/%FTuE/#LBLVu(:Hdl,``_ZS6ZsCRc;ueH#6m>2>Zo?s3T:21FGZYV7O-=!LI-7FVZ<kuXSPWi&
%P<.BVCRbr*oJ!D7lta,r<H76"<dVsIMjIu?3QSAt"&b8gk)!`E4C??qa`_P,d8"ogB"/@$LP=;9fA]WIZ@WS2+HsE#3XaDj6QgM*
%N895#.5*GBat_g`b@d'4DG!:Pb^H^Rnpl^ikh9#q03n-Y)UKT.K8NklLrjX]L,3Ndg2&VIRu+]t]=u@/DbLdQ"KJ@6\k9@q%`eVs
%cp[M^gsgrb2B^X6N.cb<=iB_n2eO]-:BK4X1/Em[0I:n^N9k[(i(9Q=d0-XBTLSu<6ct$Kk(bLdW8'jpH=qCpNO'0Q,#@M9fn5Cb
%_N(/&<#Lo0m$@s`.5q^]<elBKOBUX&JnTRTIirj"/U,WY,e05YE29Ug4g*CG&32$\0&te_4:/h&.+]K!HCP?V5JT`Uk&jl\fZYpg
%E4t86E^^3k4RD%eC(Eifb:pcS[4]f]qo`JK2Ibn2L=EJCJZcPuo^\XO0HnD.*+f?9l'nB,3=$kcR.63KCGa2^M25]<"nn=H5>>f_
%OCOATH]Sc=>,aqK!<4WZn16*%6*D,bKc%+eQ!rhQWaq?+qP?\gcHJmTp#-W1g=Jp)\f9AM`HLBOCgn&c-M,`1U-t)AYD=&Ja>V&N
%"d5m[H-M(#nitKTp,Mc7gl3FMN[_JY7LUb^a*t`nrODMEN:$!db:Y66AXbZI8X;+l_VTf>_A9F_/[F1]mk6u83K[%>0nUFG8I)>@
%,kq1^Z6L$n^c5jn/j\:,Stbnf&e"B!1gk3B.)X#>:c2R99&jNAX4o7gO`a(3%NjYd?;b)GP&r'[hj!!L+uF8!:bI-:8fq[HV9?+U
%HAOn_0"SqL_r@g='AY6f#-i+W-%gWm_BA%g+fC9c0d3[CS/I,&_+3Z$*Xa"_GY6?KTrQbPDu`Cs<:!j>5>tr6V?o=u[KAXNOLEgZ
%D-sG8ns)Uo@1UdZ*$iGdXtHQ2?q;ReYlBPD2#4?FUN<679HpqVdEtf5N5t;>R:h`PLX[ca'4fQ<ETDj9<g6+@-lWPNJVs2S`'KdR
%k+*X2;`cj6c5o?85.J&b3kV"k3ED4]I3)uuTfpkN`0q$H@;j7mp)rB6Q!])!1rpkc#`Gq:_m4OJ7A>.KLK9u3b.>dB_6Eh'`hCE'
%TO-TZ#PW+!insSCJ%Pa=MuQ41Fh!@*"g23*B02YYYiTI(p]7SsbcqP.;lFDjs85?]F*c!@*kJ=p!X\Pd^eK6-hE%IOGJS3J+3?O'
%&W1K!:?q"uMJC--@@nne!9=,=,'"[_N78=PZ]<S5T&\D'6G731[hPS>qaj"_*3%-nD])VqoM',,rbi&,mS&%Y9]/#$/37k!StP8G
%B\^pqmMrU&#=[bJgoAgbG2Fg^N(:V-oaQ?4a-FmX;OJ]2;$3Y9>*Y(T44NG=&+?NBY28=Qm'>EaZUt@'E*e9qC!`56:()$>"SKCl
%$<m]3W$]&%TF?):@T\sI.(tkqA;Ji!'HD>d<g!*)4%rFF83#)Hn<4V\JOf)?hP3Fo3:ES`.h^HZ0Kct$mpMp29'im<ZXgVH$o)7e
%"7<8_*8t1n6U2-sF%G8HBNRr2k=D;5-\&%7ao%kiJ+n!&];JZ$D$!7uX1u)G6S^>#(+VEqbJmOORs(^r]4Z?15Ug!PMOGAu8nkf>
%nVZV-\D)34g?#qtEaeB:,&A%=mbZd2b%J0X>*hPCp>)K%0YG8"L@<Wr>9\(-HtITk+c5U-9iE9^r*YhP2l6@4H=S,Xj;"s-%ai7!
%@AB>l1tLJ?kNl:$0r#WP^CZnF;2K>*\";c2q`43sWAR9Y6mS*./):>]J4R]t]MT3daNl#uVPCOqe/AOU&n)D6.!jls1ehrn7#rTt
%:'V=4Pc_0KRt5#C3_-1^:7.,rUr!""iX<1"SAW=PQ,Si#)DW@&L^"(6LZApFCAUPQ,FS`TPpg:Ah-6LIjRj7Y/(Mpm\r.9[+5WF0
%-e%Qe*T/sKjjEL_%\5u/a_>:L&`*:GN!Eb4)PHsb;1?3pT!C,*Mp]p!98D,:Vr=L+:o<TpUs4^bjZ20jj,j$MKe4K=+rLNZbF=WB
%ZgOEOoYeB)YPAqp+A4't]PA08:L/1cN7Ve.)h#k%%%Sg*^Ae._6=K](&=9iI,,X:`:G(]oQS3.kobIBXknFCS7,la<`6i7!*b7g=
%6U9%(qt?IL'Pu"5%-del<9m@8"'KJ$BsNTCWZmN)@=$&p/%Xaabsp1)(uuSm<&uCLC&b[&F<[B#-WZR<?lfV&'X`Th=\]2,X_'lG
%eAfU>ePS`[6(akYpLJc5fmflu^pGkL<mtHTFAH]$0l4o,4>dI),`?fL**S4DBcOeqd)T*;],X1@N2,!p?#H<Ua)0Ag33loDR$<#_
%40X0!Bt#7@BIs^7bo)CfNGNU;hqR\gPECcAf&RL%+u;W_ZopE;Talc=)(D"XPJJms#7:OZ7M[WDPMP;%V?m&o'0p5J#-I,\;<a]"
%2:4^+#Q%cj#e+8fki*R:SX(LqiMfFc.m3,B"O;j6!0+_8%U.*<!64Q=^s9+H'k^49B-i@RL^X?LUZbSpYp,FqW5)7g[<+CqJm:)<
%`#Rh&3s^nWiW+(^3_5aRjD7T`<62(tNc2!q,Z1/.6NJKji;b]4O?a\ddEU\4MRtOY`S?6T<B&5Q0]_hfES`N?TatiQR8a7@77&hR
%7ha$Ua_0bMbEhaY1A2>+![lF#d(>6iNiZl!E@3Kd6&D5h>*[&.co^X.K?Z0&8Zj*4PX*?jUifje1C$@oQ+q3+;mY[ik]Ve<f>r1c
%Pu5fZ:!=pHdA(O1IL=1AK8E!.qeEeP,k%QLCl<?/bt_EHUmW<O4%I;A+g]Wdd58(iGt<)`,o>M<N@`p01Lt4o)Q2ce6^h8S[4^%Z
%j_p_An=&ch-q5f3eJ;2@?@VL,AGal^K?i\kPZ9fL#1E*Yeu(%5Dm]-86d=Q>a3uGDad@oX-;o.nKI5>!*M[7>2CRb#:m;T^On+dU
%:'i<QiZ1\>/3=M.WEP\\>4/Rh3L$L64rn%4FP&8<38?:(7qD#(KFh>q%_D9=++:W-'_!)Oih*,d1TjK%Fn<B:5I`;m[LXJ9r&XJ<
%&=0mY3R1o3`FF7k"h>b4@?1;VD-a6]DOn[HB/BP,lSFiIa6POMZcB*kQJKT4/nN?]q@1ea/BHTs1rq\=Q^'mI3Hml(E(PGI0]Z&-
%6EE(F<NK?,d3PM)_lJ';\jSTZ*uX-N5=Mu0>+5t14'K]&?)O3!K4G@S/`0BkhaS:b#H]=?:fTrc3`T:0Y=u2mPcd5te2#^ERUfQ?
%<g05UG#56G@;O!]4CqDT/5pGtS2,a474j@U.Q7QWD8W'AQ<8:(]D,7&G(YZ4kFR."BkaY$K7'GOMMbo/fatT%I0*g\2\T'Do*)Od
%0rdf)a:jl6WgfYBH=tth(uHiBFcsE)lTUP$0NOYcX&]tbhVi=-kk1I:Ys)6`_BW(q=IL!]@9[aa7Bb;+["l(>8PCD5$22mmV\&'\
%o7^^U"nY.b8OV^!;Op+33?ih"ol88%Spu`S/u1Cd>)&BN8370\8]/p6KPAt&AfTWmFqn3R;:2EZ)Q$e>g<o0,@5ErO?2I#FmR(+m
%=.MWp*Y%dj<4Z2,<>$87_"#8P-+gGHEKHY[7;]oL3a7n%4h<-Dh^aV(9R*1i;St#2`H+?VCDmOd_EeFjCR0?'!h$Lb;"7Pt>,+Au
%Pl*SB@UXrl4Y!,O2(-qRF]s8Ca`:563iUDNJJ=Z\-*M?f,Z)oG9;:+u<6dKajH?tXkH&V0+Lk_/G8pl4-Z:c]mB_oQ5kNc8Z(u*t
%ZmMk1f-Ce4EliTj\8)/K&k-M;*G/KTm0\Eg1>l#rIEg-i7YR"d.(-WHC]q?Cq2!g]P%MdM;e2:sj<Nm$+s0*n.!Si<2*YE7QpP$'
%<QcVnZ(EOqmDXY?-XU06@ONL;G0(!?E$UhUiPD%:kIo\Xfl"4\j3dS5'Xp-0WqP`&LUXJ_a"QmDI`OaeGPg^QhYM`f1mL8,"oeGh
%3$,Vn\kYKOgnpqJ/[a56o0:"`AiYj`p1@Hi]_:GB-oodg7G:2F!W&;/GVWFuHc2/H7d5R/NHe<[\REi1('`IFm*R^8Z1/qP]osZb
%SSQeJH''/EU1X'c6mPMYd7WgA#J"Fe)D"cK;MkN7MTp+2SF-:or++k#c)2u,n<Y<?<f>lPW)tUZJO<Q/[12SQheZ-&!HHn#l)js&
%Js?bFl5X?Z3j;3q<nhdM_J1]p;f[UR*edm6_m/i?7PZM&8uXQW>XYlj7'e!t`C(=[gcVOMMYLaa:`P'`=-uEYjh+$Mh\KFa<\5*m
%=T:?k/CapB[qHo@e0BoDE5i:PbMjdhUbg/Q/]oCC=r&^e:fH,19$O>f-@UK-cIm%=0%,o-;RDQ51pMWh^B/FK2HE^8UrdbiBpW\@
%P:MM%;@eck,(<pRFiaXJbR<Jj[@u!jNnVEmeJ^<gI@SJO&$IC(-1^qbFIHi2&V<j"_*?RNTAHl4X5\bb#qDo]qMY_+)3%'<ik>Jf
%72'E53b,HHf5]UI``"6C88*m</-^rGYu<pPXa8Fcog=%2SY36]]C7f-`E=c^XI<jUj@Dl-:fAB9m$cC6`bUtF=]V4W,.Q0:AQqCL
%8b:p%(pe#9RMfRn7$puPE#7N8(>=sF:4G")_HDM^+gFEV)Ku>1Eon8N7Z.Q0*"l$T(StbIV_NHkb4>Q)PDiSE1/FMh83s,&;MK>=
%Ei0o"<25@5HJH&C?IOIWC=KfR1Vru5MOY!Ld`%KIX@"d`:=WX.TG]GtBc1H`/.`D<'NVM/;s35J8!+f@[PW/gj@^-(P-'%0G(co5
%/A#[tFWBIeRPKg"j"npkkE4CDLKnk[4hcG&2?@k:?0A%2</S_O.4?%heJrod<)Sd^8#U)Cs5d1?JU<EQAWf=j4I/Y6eX:'*>]U!g
%:!%l3q5B7W]4!9LXA4G.BWAV=LBsgr[K3u[ZXd?V0u.nVKe8"An]X;e/2L8O]O"l^[/#=d5m3$L(SX>l+nK*<W3"O[$HL4GHScoL
%Zgpto.00lu#npD(.'(lEiBl+5Z8b$lp*[=`@+s\*=c;<GhoZt(7TPW4`iT)I[Hi">Y4,YR3k2<9iN+Jq9O'Eb=hhR8-`L7ZP3RX*
%E&8LqG^l4Jlp!%GfT?:gXj3T)^oD&fqq,Z4!BE0n9^Jp3qOrlm)HSm8m;j$2FEcm*P&FLk9gQ%23.a#'W^MK0'^eiCF/RQF/8*4&
%-L\fY3&^MrAp_bNE"2N&CXZ+:9XW#Z"Il*2V8;iGagjq[1J]&L%VM$bTQR846Ut:]/njBGl]jQ:&cYM-1V"#B@Ap6P6e8E6bo.JM
%fe>>EIBI\BKt`kZ=&eUjcmV;Xnp?[=?BBIpJ+4)li*B\!C%WWI^9a4uX#%h26QQu2[-ECcjdL<QQuu1hZ]PPkD?oJV9/VFR<3/n/
%m8[$)d:ji%<=`BA,/ZHlqbVA7X_ibog.k#)'cj]93f7[Q"'MTgqO&:Ro((%%^L8bR@H8oQJ+)5GqNQKEoflg?Ik]kX++A\1_:OgU
%HqI\uDQT]`f,!M5PM"jZK`&JUR..Cdc$_2C+*\8eZ\Wl_S7Nl87PpI:bb:>WC_-FJ(u^P_.R`hVCPub`0XP"IE1f)M%6>$]6W)#d
%V+Qu-U*Tjsd%7`:k[Z-DkfnD%,E_1>;-$PJHB#.N,Z`.5JflMf'Pm4">)I+2+dR>lJPgMELQ.F1l6[PNK"rNo9:(k`JWhMWWACdG
%J]e<.>akN&NW^eM_P9&iEVj-H+3;9_mYiIT#,:<.RO!/laDq]74+r$\)PgB2[o1dpSh+\Te&,`'J^Yd@A#:EcZr$q]""#dK.nlgB
%6!X]i6r;b\dSq*'TOn.+JJ=A3kX.LWP_p0cjNM@MRQNWe22\gs#SV+1HmF_g74Uci*B:F*U>f%l>_WK2l;HI-YnL=kI[VnfY4\"A
%d'/F'P*c=EM^eIU7&kr#1Ca,TG[8qHic7%P;Mu*-EAfMoJ?g@Ur@j36+BFtoXZ!ecDsa1b"(P98=*FA,;o:H\Ree<BZg7Hn/&e37
%XgJoX>@[pS_Lk?kjsT1,U:JRBT5c@[6[5$=kbAODHTb*p]&]#,C/)E':"uA4fFEJQLJ^a)AQ$t\oP:Y!CSc;%>[#QpB9o&]g,ha+
%rBAi_9e^K_[%;n\8ee"rj-]ubKVgaR;#7EFs"U`Q+'h^&9U=[hA9gJHk/,N!Lfp;nFcbWF%eWM-6,5d4&fC>X8bjq(I)U<,F3hi:
%;G42H3PepUo5Fue"?*g9j+_e()<s^bCs>84S4Tt\,rkOSF)eGgb3d1I_c4<lBP.gqjD(N*EQ>h;+M$Z#d*jW,'o1LfOsWB@JZC$m
%-"dtP/LE1\3f3?K,U-4'D-R1V`1cMk"LRQjMp@BFNcrG)B@U^e8/n*p\';a4$D56']aAhHf2$<CmW*p"ZIJ/9*6qjR*W[m@'KN*o
%)?kn2L-hqYd<q))llq<5Z;%_h3tPPpb$7ti3QO)C;!jh(VIS6eeg[HpYHs]*U^YQjKf#"8&K[$+63<QHb+mY$+OpcoF7$P<Ft-%n
%&)ePJhCVp%6,$Vl[=_N9]Ub%IBBF90/3K.kn(4Whb:$Us"g@*b<rL`4a=X\bKc43=QAn_029N5,-D,EH+iS_,Q\/P<%[Gn]g2mam
%_0X7EIs%!0oT_:\'Mt0d?T1@-qAPa'T[`'Y,YFgq6R"NLXZk6nN`M^'>dFp2XfPJ\Dl;S`O;5&Sb]>qo-oKDHU<'04@N636,Jfd6
%k0W9gbm:8u/Ws"/Rp@k)6D,l`+hGu2n//$&>n1n73`NGLC2Gk`c!W\;\NXR`'jZnNc(gRsP+L"\&K50a`AOZ,V)f>6XBiH'6NY8a
%hT<#54#AmV30`]/OLFK%A7_UK]U94[?4:C2)RE^!X.lPpS[rEXW4HCT3lFjq9ft[HZ]j.A8qHCtTi8)<+g+h#9)#DF*Q3-.];1]>
%c`q"T'Xa4Lj%\&]@e=POZ_C?e*;A$anSTX<qb3s<l>hu%FG3=aWGLEb`:P8KPpAe)&X<[f\fN=OjId-E6!h8\<95X2:?3pBeP2hF
%f_ST5A8taPjWH3_)(M1u[HS54LUrYOoT*=g64@UL+GR1@FKUg4#3$pK"e?nqW`!h.>P)B)h\*mugR@>>FZIONl-S+P=9LXSK,6gI
%H3.R_/IAVV3*$_3a3<s:RSV^)r_,7m,g^bC#p4B9HA4(URI*?eK,PeoP)eE20>JDSh/g!g+?$"f"QfXJ:-VJ*T.LkFU`Tdd)5%0'
%P+JA1[bK=j%X?U*aT3Dm2[]LWKcmG>6!gEGe-TJ[>MdZDo/lc>k9\Q$nFkK.+$]PecHV-^H2GncS"JKMpY!VlHLpj*rl`pPcCON(
%j.,8WgS_33VUV'EF2M@"SmlA+(K729nj!.3P%GJ8a5W,tV!D,f8R^mL92)o%52T#/j"lrE<Pi!1B_s]mUn[%CV23%3E1Z]`M+8V(
%P&G2lL\2357f'Qf^6loe>_Z5T&7P:7Xf=1u[qhq<PGHEnZbL1iGk9/)[a!nT9*fu<Wt1C%Yi0aG1g@RB<6ImV14@o&^4+4V5NAFP
%_g"\f]-[,9&+S-qeQ[V$OFi'niidUHK:RL'Z8F?Z'R;G"HIQD[c8/AIf4"+eCF(Fbe6gWkG%>l?>R$]Ce]B"1WU*LjiA7W!;Qi*%
%?]04&+XF'SmW_p+K3Z"uPn([.9<ZrW(m;lo:?4j=j1V8LJ;TeD*_A48A(%k)6JC-KeIaH+=ZHn1YCN]O=hA`cSr\0MU,B((q&JW>
%dk]3Sc5l*k90hH4pU["f,pAp=,.<!QRqQelkBNr!A-ZGC^h"T-fmimhA-p@"XC[NmC$-J7aXt2E+:`4:MHN28+e/d,h^\/P>t?F.
%T4YeC3GcNt<u3!Ad\mj=;\$'j*<RV\jHWB=XG_anQ!F8GhJR.R%0gjF,C?!YA=A75<(3?AbJ\R4\S\V\W]oGB**8Bkc`\E+3$Ift
%]N"&:[t,M[dUB`@lF'j9Z<dLk6T9m"gNKsJ3R:X@'>Cg-6?cM0SPst8$3`1W.#$uJMn)(oV*'#WJBt.O.Po#XhW$oVTY>pQW,Q4W
%bIImhI.\;+a;(5dn_N(&HIUqZ>m7iJol>fL[.\bG-lm)0*!h9%Z0hTQ8<\5]'6?P$0TH4\p/E&is.*'[Lit)s!OM1N2_5il`'X2K
%GA]USb<LH'lcpOMl1=e5DVb+LgppnWf(62Sf^ST+$*fG5"*3"UQ_el&gA9bdeX5NLIQ?33EPg%EPN5ZY/"cXdJM*MV0'Xt^?P(1t
%K-LJojLFDX*WTi1OcKl7"_UCA%=p$MZuVKs]39<=#F>>s.'Y$.8]!nt2CX]nm!,c==!R:*j.qPF7#&W`R@J"3K[_fs'tr`d?!Y[P
%Atj]$:m(ri>1?k\6k_"EM8u;]a-u'/N_=BU2"ZpoKJ^kW(WSNl^mlRj;p`><3^=L-s"B7_Ll?Mb^i&*RKW@B4e$@Sq*NdW:\0f^I
%d!2nGQaPl1\*F7_qC$&92)jD"U',pK'GVgJWQm?4Z_d]fh<"Bl0gD3-cU!3%>Z#nuDG.30gGmNpT.QUD=5%JC:WQb$X>04'*^hLb
%fiCqCS4d$$-i2=!Jau53*?Q1FRJC+@iWpT^8db5<>F%/aQfr-C"C3G0KfVuTNd*tJ*)IoJ8qQ0+7(>M(Pu/,#OnZ*,j%rT^hWWLL
%[%mdPVNbB>CJOP(,;if&I-@8d:=dQ7QQFQ.on0V89(kKfDGr;7#PDpq0>WpejM\,[1n*<pampWR0]^6H,^L29aR--@YoN`7L1>a]
%M;Vp6`I^MB1SYhJNYL70IR@jEQpA(3@#J=aVTpL.`#rsh3Y*,@^njD_EY`N%6a-OR%^:e^m1hUi84&/n3'9#5Gd[k"^oF8:#<2?=
%XjI'0lZ@nM8HNWQm:$fD.1k`Qdqk_'jJc<KNCh$AjndBLX'NRS.^hhfUtIO_1NWAQ)c5aH_+(L^B2tc`;UCL5Z_CN[:=JQ,bFoB$
%ghf2bPi@jH9CAFQ6^3W5D'Vi=)ch<\d&$3AU6nRje2cG`:juE,/7-cG)UcR9MJCJ@I)^%E+r]^qR+t*rbbJ*=?!ckHQj)#<Dbh]V
%(ePBV66f[O53cqY#&+Bd4@Obqq9@Y=m,OPP5_f7:p:W,n(-Q(u/KrY:WCZfV]5GlCB`6G]3M_+gG@^h28G_N$'.hD)f+Tu:VAJhU
%US\-!R`o(0q<A:d@.I";[k-@3U6ZKLQ?nWT';r;$*&D])%[1P&8SYU0:Qm;Ekq3.IS=!KNK3Z"uQ2YK72Mga6h*n1/P]7M+m8?d(
%M&@T@gd/!_:p_d/aYT1_q-KK-C"Y*R[@EUfSV't,Tr<.]EcL@u[c;e-GMm@@A_K_IWMnpsKM9DoAPgW5aYT\<.b*a<''ku,aL+g8
%WLmm"9WQ>Zhl*59icLIM&@Q*)-*6=u`[lD4U6ZHK9"l#FH,;=YNeb_4ThcXRcW',^-dT.1,qGkCVMK.j61(3gca4j3a80%t8ope*
%IMph6RL2s?/"_Dk;9LMiHB3jZ"</hYj/fgAeQKKc?*=$+?#MRkU(u;XN7Nf;>]1T3h6uTjE8.pCZBOaBl,8#R-4bZnC<7O9kiWq@
%[6_)5$KAY^:s$<4C(o1YRLO#4oj'C/bVJ9_ED<?DNB#!TS>#$en"'u*4#>4!F8pMXIs$s!n*]Ri?YeZ7WR]KbM%K1=Y&/q.ja!eb
%GMRC5SL9-*6M:A\`-Yh]ZP7amEc^L?*9pGgm@rJ<g!<Q]G^1Z'5iKXL:)ALON@T9<5l%,e>;).BCDk\Ie2YpP,&.4ojEC;E3].$:
%&#7)#(M%+r<WYu$;%\pXjr(H!!fB"V'pL?G8NJGMaVi1`+ir:]rB^H7P+AjL"t-q,N/j:lKg\P@OTAQK6sOA>j$XlTE>0m\9;,kZ
%/BM/nZB/.kReeS_NjgJ=D5DLKPP\1J#m\th?t%->/PRI5$##Zk$an0]NZ3XRe3m>E.>rB.@nH[/Yb@%e-"4H*Y>]2(M=bJZX6FeY
%8)fmk1u2!$Hfu^]X"5\3W(P+2WI#>mngT2*[7ihW!`2%E2!)[`>U2Ioe0YRdRa!?<Q0j\#P$KjJ=`I.HA<!Z58_TsHK@&k8KL*2[
%G'9Q@[D=1f,pd.X+W<AIpgJ>7Y;fH^+[9g4/HZNVOn_MAk,HqY-=sSG\IW]I$8a/L8n:fJ%lHl.$CV@UZNRl3$"$Z/7.qRGO@QKb
%O<S=GHYs43Bn3qeoBua@.EFA.&-JD*(eB`[&]gfN0slrt,Z^>O(V3(A:d=eX-rqn15X_A&0I!M.hAD*XMJb5gHj@6K.un-!E$1ci
%28i_m\L8%:i*BXAD%=EB3g8S/DX>9OU=Z_Y%Fe$bs1fW)c(oj1Da!=p-Z,=-c'2TfF.ZAM4.kc<7_VXo+^AVh*S3?@D<QM?T7a(R
%R=!j;h8\PAd*:"NOlJ.=/"oLXA+_p^ioSa2/M^A^4qrlh#VFA?E@s6f>=gP)WgO#X=q2^uaKm@bOm8"OTX/20Y]Ql@/YTl'6C5n@
%)$Q+,jG%:-<p]HJEUsNCF%Y#')5eQkb"C27kW#Sf9T8<qCNXfP:T)j!&(k%B)+*o87(J.>is."[!KDj,X0NQOFYncn+/kLZ&s-_;
%S//iD=kk9'4QGbC/'aYe!\I#95+Q/O(+LCrG2V-\;A(3a$?](#S&1,.=^kN^.%,dk[PT2\V,?NLjC'>09%Gu\Q?GFp`tTJ-3VY"f
%kpj(Z&7p^@_WFESis^lmS[dK#rjY8J"SQ8kLS*"#7QL'nU)5.'9)pe(>"ZeH8u9*Fm\4p;=FrN?i]\ArB%*-t$#P[0>aMIXdtB2-
%.!4g-fqi5uX437\1g)/.A?(K#gtc["kS1qE"d<bunkliD+?<97.@"]@:'M%]V.<c`MI]l@X!c-<ZLA%)KD;$,bH@gUeW)5A0sV;[
%q5GCDYL4Oa4E3k<g"@uoh1;l#Ymg^r&UfZGf-G&HW`MVW`HM@!*Xb%?b_,^_?=X&A8:AXtbQG1Ad4k46=)f`)62QQBWTLI%P&<u,
%4O`gKiW@q-o001DmmKTrM2rOtgtX>_e3mbnZS,\JlRKF\+(uq?o-h^prJ1!3KFF41i>\L1YI>_<.a_ZceB'AGTNR58X0T;ZeTn@X
%rf@b*laHs:C>a&]JMtNoW`V'G`(m#"gnc"FlGGfO]SmAVW.MrAA5TGIA8A5"fZmN+?0D*Bjm]7t\%47CYM8?QYM:n.@l:@/Tu*`m
%HV/;smVL1rjK&s9!QAcID'@R5QA#eM+m]O:;0JJ,(-L4qcGiQ;5TjKS[YQ^`0Kq\``D$V#RFohuP2(]DK5p8TO+L)Q5;OVu9V_9P
%e*BGh^5EpE_+@Q,L6gCeUAt9qG&6,K?L#*>c2Y9,2I0dl`V8,82@dQ0>FV%E/8c7J[*?qKW/fb03CJSiW(=&7WG1A.Y-8=&VTUPo
%2(H#%)4up\PQc!:!.")TFL+1nm:3d!c]pN.MNR+5/\t?9G,\uS/<M2(j"@MD1Ni3ob>h7cbqp74E"#dL:+N"J@Nb,''*oE8@kAaR
%h[eU;pp)m6"5hOOL-LU6SX1"T(.>h#b;C:(X;/jS\[(qm!G(*\OYjAJ'KlYba@l3HPgl&n[UsOBYAN;4N#%/'A!'I0m]4Ik%h2'r
%Kb96^a)-"-$dEXTMV`Y9p;laY&Tf!blmS?],AQ#KdZW`D$qh,7S;/uF(.FmiZ;)RoeV@GkS6B6!Vh\tEk=1bH`Ls&5/9O@4XO4cW
%CcU!bGA(6Vkj3D)@SP-DA&7!Q'`<?&BVFo:XNDf"%lT?4Y#R_8jss5/DX7fXW1/h\e8dRFQNB&mbL7!<d)J,8WOA!(]u$W'NqJea
%=X1:K'dTm>U6i3X)p]>6mHi1MQ7ohtlSYIQD3S`)arlY:%_6M@m=m7cd(9<T!isF2.CR$"E0B!Cd:Tt0r:D80Q57R5X(5iUeeN/+
%o^5McY$%/s($W,S2AA;8L?[3S)5&=fg=thCBf0+M9E-:,)g(PUN;&q#\GsZqV"`a5cT[[pZZg<CqXWs#]!ml#>$C*8?"A^eQCHYq
%iAl^>RHN5S@mMrhoZr!lV<MFe'pPP]obU.O's0hT^[*$:%CgoqGh@T_;s/O],_6YnU`eGZRiF#=7.DFDIQS"t$CZ/Z`)AS\9/q#"
%!uge2?HfX-\YT@jLJiXJ%rJgS8Rd?]cV,%)-4Z6n8O^ut)2j)-?AHV7pl`^WfI3)@qbU5PN[Frm@\#AUa5e?\[tedG4K:u#Teih+
%_fh?o.4:Eb;eo\cgk7S`RJJ`@bnEq:[u"-i,u`J(Pt],Rq@6Jj0R!<27l?GRATg\R^,g4tf4;8B#f8.Tls37;3OMR0YoRr6:cCp\
%A/CKu>ckW;GAO<t<qEusNU<G=Sl`sO!05RK!kQBSR+V,p;U^bgUoLSe*p)rFHaL0=GCa%Y\I;H?LRr27&06>hTufHqo8as),;U(9
%eSLLf&p]0n5\4CjWJQ#]6+_VcBO9=])CZOch])^_82g[&-8#eF5/mE!/MF.8-,ZLY:8),50HSas0!H#PYf=9<<G.)0?pnmgraX#c
%ddmecj[M\unn64l-98\uc"?,.k[O):L5K!Kc,m1"\@ER"2.t;VF0)"u6<IM#8Y_WQ(%WG&3`r)HD$R>UNoWl>i"":3bSnm=i*MX"
%#"::6BjG3p[^>c>L,C)n<1cps?K=h,Qbc5]/&`hUm[Imeo0EpZ[NsreH&BYT]9"a8l,D>`!3DeE0t7GWEbbr`Ia&Z]V628&3+j_,
%HX@"KqK+6"_2'5&<9;t@W*I)B/0_q\>V*S!+Q]8+bH)`5hN,m52Eh.`&k8knF=hZ%@M:i;]]*I'A,8%bU+VQq`_'FT]$Pg:>B/Kn
%LnqV*-*nhBac5R4c'(f+Y]6^B*.9p`%f9lhq@A^+KPKhJ`9>Q>\-H=K]OG;*Pf\JA.\!L$_''gEnRU6Ve5.ST.P$\Nc5IG]En*B?
%Y;cnu%C8P*oi5@()_4;rBe4h/FkUSoO_n^l+6=&7@Is'%%U%0O6oUAKFTPbcd]5kp'q@Xd($.CJe-F2Vlbs%nU)+VfDR?puWtMFb
%P587];(X<Kak4%#oDBri3K^pN04)TEaVNB#U*`!FONHi19ib;p92a?pFkkL>dI@4+*\D8nW/WdXB$:jqcdOAoal'UKo+0.?o<b5_
%m+0ECf8oCUI!#D)E8eM+kju!sF#Qg7bn.Y\e<X?C0(Oc;n8<$3OFDPU[=-N+-EeGZBPed!20,_!j0g61RKG.>g)g#/%4A'am7Q(S
%BSlR2f*8m6&fCJbARCe_E6q#T;=HI#)+#@@@C__/iI5Tb=]Z<mOi+.+03M%4p0'2l3T<,"ijb(_XgVJ?[$St5j2/\&k"cTl$/`!Q
%9-kC97IDff6ZmQrUroZrSKsAsAJe.4Ap7%,77K!,dKXsCbp]d?!\/5_W/5<Jni-mCY<Whc;2Y!u,,,\_HZ_>giSFpj7Yc<Wj'l@[
%XlD!>\blZ[p[&6.(lgp_*3<ECr!n&G1fU1nA1_7XR*Z,]+"?jOoS<3,>HU+O"W<O(0_Lh`POEW$IE@:Z=*n9mBmmuQU-'!F[H`Nf
%j`=OtOh.?"=11cVOf[`RNA_3-Q.i>;j[f3#,Qq\gX;4P+']`FqgqEfcZ4+!lk?g!%`O`Rmd<3;_"u;!&kH?<`l.io&Y0SOsR)GpK
%7lX/=8Jcjf5V4QtqF?N;?<+\'c=,CoW_Z:hLbl$SP0_At&uN&<oB%hI52P-(&lGk.k3toOalA+SoG+$ubi:m3A5n+WPV8qFMYh;4
%I+_lND?b3^AR+-X:<\))</!eQ,8QVD&<D'r>B3Y"*N;&a*/deL<M`6,1.n:\2iki(-sms23BUh89SLR+(h[iu+8HiFS8\+F5F/Jb
%/VjURhK>JOQf?&[)%#Q)Bg?h"'EAc4LIJ64.<%IH*D$)J-=(qWP+a1F>HtOAkHM5]XnFj[g@HM[_)#G>STi3p?Ji*#eXn5#S9*V6
%^s++7R*K_c9Xl/PbL!*(Cd!nUS@u+5s5Pf(MGaPA3"7n\hhd7;-1PR-fJr6%A[o<k`*5I&`:$I)poL!=?bd&;VanClqp$b1;+l&;
%/lXHCG\`'hTE$(uZoSY8V*0g6.lspI=.F-GUC@u`d1<?5+D+F=a(io!jk=@YeB]r\T")>`)HHC]lsQ=Km.7l[,ERFsa%1FSRhgDj
%IY_!K/Fq9[!_A:naIL^uLsebS*4eQ,fAu.@Y(IDsd=Bt/aOG%QYd1e[j>+iMd:Hq8Va^-i2VhPN,#,_&S&sF7o26j#8R`VWXD\aG
%(^Xa;@`EB'EfiiSn4hjZd-m&OMqr7ke.7-b1e1uaR`*]Z[C)+O<?95'8u&>*!mOFXa'7i",j(9D8>O3nNCoX4Q+95l=]]d:mN$&[
%c_P-WGZn]J\GpIoFPQJtol38!k=Cink#Kf3mXm?;(@osN,KReq<qog]RO45-B9bS8@7Q@,/D[S;,V/`kGBYW#Q5mqf00oQa)_HD5
%q5VS@b&&"SDuk;o0=2?]QS!6NGn;cAMYqg67)k'CFml_,W`q8r!<h'L9NJkLOc^5'4It#tK32\<YrF&R_DY2-3h)B%Ze.?+S-SVF
%Tj,\-`3Z2Be*2Z-kRHdm`!Vj#b7YR31jbYCf+urO?HmJc\u7_'X@bV4XdK1EZ+>[;AKEd4?*f6:7#"%h\=5.-D(e(Q6(V5t5S\k^
%B"@9'4gT5+3!FV';s2RKg2l]%ZPK1UUO9T[jiY9TLRSoha8QfXAm]Kcd*Z?@3<PE0Cn(=>G-PV%Rc;;6!g-.r_%Mj?SblR$L#pt#
%oKn-W&9a!pH12!c?B]rl!$QshC*%k"ZTs&HrKK-q+m_iL)4#$IZp%<Rd=O++l%?r5FUi,kW-Wj9ThQ&h+q48W*tW:Vd/c);W2#5g
%?J`X9_r/R<lmkFsaZBodB9dn&^i+6Y.@"^S)1L?o7S82gLmMa]k^Fku_Uda?&EAa50MMT*e=d+Xe*k;UF89c2Q?(^mqqT9d4AF9I
%2TcWD)Gq2l':Dk2OhJHL99WeaR8J(I.?1tJ>qBt',mY[`$'h*N#;m&-T>lk&>m\/Ne3JG.U!,U[JEgT65moL:!R!ShGf>aE"-4!S
%+TS)+?n,r\\(m&a+EQ1N'aY]B6HA'Abu+nmbi6F9N4A9i/+^"\35meEbB?E78=F$Y0p=X_+W+BsB3Rte:E1m;TpZiEcnI8e`8VH"
%U-$$mfFI:A\Sf7O2`>]Q*YtfpBh'ndRtEQ`*41!dkc(6OFg@-nA7dXcJ75;V*<2M0RWc6%$,/jX6Fd,m.1(^B8o=uIZi+&Hj[AKf
%BGB6Q[s=8uN2SX>GDY`[$lRI08&VRXDN%D'!iEHC8Y`]1;.H.8MqS6HaWY$n(-*e(XikB=@APD=8@=Yn8VFDBQk2_fhQMgin[eb$
%hZf1$(XubX>$8cFd("ktmXKnm^NTV[](P!3*tqjJA;VP="(4pW=\'/IFVm)g3oB@B@ci;3E?T!h#t1R\FgH6MrHGnE63)lpC'Sm+
%FAur2LB(aAoA*\g<EhGFXOCb)IbgXScl)F_%k=)T_Fj."Nb"W4opEgj/soHs>:*J96[o>86:e]8nEDC4cj\?8",j5DU/+Yse:&4^
%XcpQt!dRUSpoWL$#K]k,49EY%A_B"/*i+?NqnmSiHW@[`>KHMN"$>?O/Gm7d8%aTn39KGbQjD$g^@V>\Xeg^tKTb'_4"!3/D<Mmc
%dHC8s4F)/ee'jrb,[uER^O,qLo69fPn)(j.s(J:+J,/U(m5KO^-0"rPSGAWq8m6.#UoS'C5HTr;h2LA>PqG9o?,k+GAWnSC!5W?#
%Y'TR97cJOAHalj3Q3`GQDkdGa'aAId:1\aLeu%Di;II\CEFi+BWMgSG*_6Ef17cciV?*?3NJ+c<l]M2N<@dZTZH$W7C=rXTb#XXn
%D+_YEld/eK/UAlg&m!uVh@J9C<8C,rd$!48OAS)NW0";%6"e[Od)2Q$J]cVh3KcJ!!f\@=<!YkE<N1XLNsViI@bsF$,=_0;W1R`c
%U3*P)m'.;=<c<GL(UU>LT;_9)&$_n3lNOZ>WIf%1-E$XgjX)BL:D9;QT=!=+/nioAC4Ol@6ude)7a;T^M8JJ]Zu&-nN`V7_Ug4@!
%^6R/OBq67ZT&[-"1B^!QkHf!FDZq0Yi-%Z$M>3/[1jaeHi_Ohie.ZFW_NO2ja4O#k;\^o][:shp9MY,t-a^d,/X?jiG%E3o?g?u[
%@Y'E:7?+N7mHJ3mcX7RS:V=M[/!dZr%)IsqQm(,0T_K8cJg"5_@pUqo-g%!bT_!UQKl#Sr=4@H$_kH3X:WsC:BFt2i+\1ab+kURZ
%@YS9/@P@q38)3;uHKkqdhZQjT"%0;fVZWBECHZ^JND^6>aB,8aNlW.q07!NYj,g6hEp;ke^TXc]560qP&G)&QjM\b`joAoE-bd<S
%5-%*D2]7WT3PJIn.fnA;JVuK,l3RYokU-2,]/2nHC##Bek+u&C/R-8Sg85g*Q+gohL:KLsniACD_!.,JpHp*hSA'aJ\J''W+W!hD
%?CM13o(8BC-EHTYBMK/BR+Bjs.(-sjB-HrMAjJcja0eOM(*m;QCb\3f`oDm/[ujt:[o%$Z_nl06kimV8S"EkS<4C<(`hB=!3sc8V
%0d&h]BadQn]?p5L<!r7S\R/'?nBXB*)eC])i@_o>-QLB"7dH02G")Y(d:/ol<'3-,*gFSLTR@5*,.B&AI&(Y]JMV;A3dI^NTQ`oU
%q+HFcX;3iBB]]ABR$=IbWVc3B#nk\]>V&WL)&.c97.ZgCRa4sRgM!\75KT9,#`<^t(:aOH]0.6VK[N[3nYK9X?UofhHS!ToJ@qCG
%Mu:0YkOQENJPf3lNL/u6.+Vg[;88>R-gD;\<JSqdef:BVogTOo3R^DcJ=PfjVD%b0X;Y:HAJGcYr]gi%0R.[C[Ejd$$;bds46;<#
%U`aqHFL,qlbVpUs=ib#0;:e6,+!C%95e3Wr7INVfhM4rImVB4mC<)!E*')'b-AX]E;"!ZPC7fhrdH%@BH"q8UdTt`N%_^[;/n\Lt
%',a;Y+!C%>5e4?17JB1nhMG)Kmd7`W(CMN/S$Q#b:j)k:D[4FumF9D.gO6JKL",1a^3O1+5Gq1mC<h<XI/E]l4Qo!nSprf9[3)#*
%^AdanCqq?7a6;/qD&WH)<Y;cMl+QbU`Ed03AAYFU^MlL<kLtFkeM9_f_:;6=G^q?Ua7m'jYH-Ur,#V.1-Ta/T=gq!'_RQ&8C0%XB
%8V0PDl<lptG_5OfBiF521/!:(IHboG^D.]]^)do=]p,f1Ls$6L6(L*%99A.dL36XC(@:*dZ0^;TIRja17$iIbOIHM:H(m9Y(md&"
%DPR*3]D.4eM`_qsAa?]J.[<nX[;8cULMAd<m]:_XJaQVWPr(OHC;g)3o[O7#@gq=eOhTY-%s6T".[8)AE,;bTm0<p02u]qF.lp@h
%J)P=CPWHtXmlE^Z&Qe.QZr40SngN]QK-7NF4sarJEB?]Nqi-%<1lVPSV'>\K*I;,Y`WW(8)oM4C-P!@_\9:e\6O2jdQD*(DjqrSX
%#^2tbi2Zkl:hh:)PU;64@Z$_uPET2@6XE>.9<Jr9DZa2&>CF."KSuD00F?eO_5D@)-6nOubCiRL)H:=REun-g,^^!FY1,eW)rt<3
%Th3`AHHLS#m;pt(%o:gP#7WWLLm1tTSZ5J[p(WLpg/c/_FKY'8EtO!rllUmm`9;C02qMq@)th@r&RDZlS3\?mN7t:i3+)23qi+bA
%^UV/,.qc^'B4SrCS%QkE9=ZH/2L\Hc4R:CPJ@N.@<\R[7B1(&Qln`?dZ?:Te&3_^GfkL$km+R/Q\YNQpP+?[J3I-%/jBF"h4q*s&
%_)k7(gi/8b'WRWIC>VL(*T'>s+lW"Q$@+_c.cYU5V2R_N:lt\P2"GBC[sU%#H;]s0>\M:sjY$$7HZq`o6OKac=I)"CS42(C8e.=F
%+i1<-APQ?k;7*-(Y\/m<Y'i^AMDB%&`p$5?$gh.)[+$_%^$PX8\$E+aq-k$ncE3?&U!BpA\B]-UC`D\We2(j2N8=^=*>YuVeVQ-%
%O[*jGFgZ?=a*O<RAA$*cUUJU4Ut*#b6$AfhW&,8G7J)k1]@WW7@7Vn!f\Am6\ErIS>Zq(!=MYhpDoVJ*35;EdNkN[feA"2]rocWZ
%s(qG0[i^'Dr$$f)Ec$utZU5dsR%iERV@OiZeKbZrD-Qip#&qa=r*&bd#g)9s(!L088TKor:B(&`nEW<"#iAHY$<"De>s$\#H9._`
%2JNbiEpE<H;<.!WBUm9TS`SU:Ta*")fT2nG(>/j*:VMK[*M$m)2OJB6<mJE^W+<)jF.7-F7C0`N>-c%=cuX4MlK]9g9O`);92L!Y
%%o&,kp%*#%(+"VJhp_rhLQk&CFU3ZuPR00.C2pJVHI0JI8_d4p<XF'0qJW&QpP*QLUr>a)5aqLc3-8c82bLUWgUpOG+ehXiTMD.L
%W#]p^'rQ]j.!h*)'^TN\F^\s$X</'5U45f/X"Sl&oJHBub-j2pK<n4DrQ*mY<IJ7q0/ksQ&M;^RYQXtYJL5F*ikr?-Wm#TaAij]6
%`!mnS#8fmGf'A"-eW8u8!\?;!-@-O!5^dmjB2KTd!YQ*KS+<)H0Z"orP0.p,G1u$D"$hL6:*^Zdb]9Y"Y't!4r*:^4.&NqJdU7p,
%(T6!--#3k"aGQ'-1-efU<u:AGotPAm]f'nR_BMOlOGYL+Yk6Ds,P9Pn1Q7tIiD'C*YXTh?[XlFLWYCehZn/EW+^OI/n@AmYHQg1`
%2Bs`UrcL;p6'dJ_,bEg`c$4Ik8ar:MU%6U0i[D'L4IZE3N[,=F8YTe_LNu5JdVP*Dn?1/n,,#i%FM.a$Fp([QJU.L+0Q<ArUq1Fs
%:F`@Z9r`2O*cgJiUCq$lcROOV2]VL9("rDqU0>sW)HW#pQKOCWH%$sLJ.B7)-n6Y#(MuB1Y3YdF_rS+?C,&3t3<4J:NS-F"&fd1]
%G1k(I_9oW3F$^FOm_8mYkeLk"H=@S)JQ.F[HZO%ikW1))UP)?)'Fre"'[`irh5E5i3pI^4>nfhd6(sVseNTRR*eBE[,a#?2fnljL
%aB%o;s/rs5M0_?g9[epk0VIJ$+'5l;@R)6*daUF)L#drmk/2]^6j$%0%4Ine!@e647(&]hNEI;/Zc-5"X2A2.!JP($BGcDC?Q;pi
%$*(^Ga/MrtDikH^P"SWX3V)U3m*LU@A+7E6IEk*ih5Ip!Hi.F%FjFtjSH!E/[;XnbIL2V;EOj`qe9`.o>,uFV]bo.Bfp6KS[;8ho
%\]-++[MQ)Ipr/1t#Lc?+juSl9)TGAPs7dr9I%#c(9s"CSZNN3j4[d;$?dDMumY@4Gr\B/(Fl1H@hORo@W*T'[Te*BZ\det[e=)"V
%8hhE")[O1:\0e&t*M\aE#edjU-o>uiR>WtbAL<<Gai?\=D=i!UlTEk>n$B#*#"3@@F]jbI\t<C4PE%^Q-B2%Ljs4t29M9io$Ba^G
%S]"gJ3)-!$D@]YXRR6c\Agf%;Kk"1*#NaZ$qkK[u9@Y,bh#TF!n/a.S4s#/6b"0ndF':?6.L)%pk?')C"IED''Ug5b2Koi@j@oQc
%%_DP=4Dem5m[u2aEbN\ce^8ACFQ:`[="hZE9Wda91HN)$,@oJthS`MhUl3#"i6^I8,8<VJiC31goq3gu6NiAVVfCseREugC#a1P>
%8tS:@p8h5V=jYk[:nj'fenEt,/@O+65mGD(jBTZ_&DjF`WJsdbD1RdJM2%@WFCCen_%in`6lf1u$,)#-IUC$_HQ$04Tu7ME<eg.2
%3>-rc+BH@mc;VCOCRqHO())[B(CA:;]TP9O23;o_@iNfh3;lrobZZA;X-5^&q37"Wb<FO];["fAICH!*%]tFG-;`aV%i.9-/Pg'8
%%b-^UaEb)09W.VUk6*8K?/aMPNb("R:GQi7P8#FQ4e15RmB#9I)bUV-r36Z9>N`&P[<gIHJAo+W&GO6X[Ts0C3lQVd%lceVO-tWt
%iDm3U"N!^k=id/L,UVPM<f8Q-[;+I%$b+C5V>Y\3O94)L+1>:sO[%]IUCM.[/S.rs^I9A/$H[Q@0Fl*7Nn]4t0/#SPha^`(k)57f
%I277!l,X'9K7dZ$ku1L+@.4GTm_B;J:c$9]WU)J\,m$(?_h*O3gcXu$O]<N',(TpCp;e^jc'NgF0="nr(du^?*HU&YT'^noBc7`&
%g+$bmfXQBHj(m(>?BNTk[G40$TG$TDN7qI1lq558pMp;*k7M>AN.g&H;V`T%m4IF=#crA^pK3#fa3etY=4W5R&a:Lh]1G;uD_PG$
%*P]G_Yh9CC5rH(\7R9-[G&a#>Z++@C\WtfASCEc9@e]NM!hiL4o\.^4?K6:BBInI<C_/IlD3:#uAdsu7ldCVA!C=MWD_%I)+S\Re
%V*3'CQa3j7dHP9--`\"$[G'D_2uBOJ)]YNef'0bhL16]/$:C`4Y'D8*0>jM9pcB^+S7,ha'i;G`fL>a$]4f/pCU)1(,]C0P(n4ba
%Zm@(.)TAdl2T:Ml`e`em>!3]<8A\uIC;_[hZr?P+&'f=^Vi.[DhGD3ED;$OkZ,;+t.hE\jLQ-71JNPhW-*j%R'b8M%6'$DKp11mq
%,:c*T_uNZ>3&gcWjf4<d@p8CYNRG.QDuBD/LTm:nD`WnShnB$a=%t'6SU)N?2(^jZ+]8sEoNH"#s3QP"[Hta9<At3g1p1RH>iY?I
%W&Nee=SBn])h:[O]Kt%`_6@neUlW9R&OhmX8VrO-n.2p<S<I7O#E*L$D5h.!2HN\g'*nQ"gLSCS]o\=`4sdFYDH3:^[fS0SEW4]+
%!a[q^":,Z],r,iO=.1+qk$H\?-Qn1c"sj?pW(-1!(p+r?8@!NTj+:Ef:f07D+Mf)`T-M]AJc-@oUI3CBYiq.^bn7EB7Nk8)cmBMF
%l;a;#]oJm/A.4gB7o/nXe@Nsc]=p3;=D2LkbYdnQZ<s$*=rOkeH9rnrNR<R$>3s^B(qsT5=B"<]Tm]_#$d$Ch9L\L\T,b3^HU4lC
%1HVbOd#G2Ob">]3NO7N9Rb1Hkl;j8cq>Hi#H_:$kj&#9#@i?C"+.iOi2J,YGXsCm.M/_#.chS.0QI.?c%aW8BAL':Yrrt$A,Go4\
%&-?_!R0b2IkUDVB4d9n6c@PSWWq*7VBq,=#3!TQt.P=!9atc;k0:R.IH#2$0+o'.4Sa8H=K,k"cY<WTb"upN$jj(2IZ5HS@nG>=n
%:f=HY`9AS09-E#)#>ljZjOLtZgiGZe,P*27LM!>S7TT\.SC=?2RQ?'f8<2GMJ>L6Y4Ge!VXd!MBlB59`M;AoeU<%?U6RI@\=TQf"
%;C5'.$=>^Vk"I4QMj)t1hS]EFXsBQ@eSsc/n4[gU/SMD1oB=bnUW!5YPHAF:4tEImTK%;S,H!d:ZNVK:-!@4q(KJ4bi!V@3ICcNV
%/.lu7O@n21>5Pn76W,cth`UnjRTNM_<7Z38lT]ofY>^aKF:-#$&hojZK`oe241PNDIHf87+6^KRZ46J2"*U+I+0D\s$#djJ-GZ2;
%Tec_Mm2?M!gdA@Dq;b@a<WKBFHKOs#/Xc(?$BAe;S,"l@4>GLJD;kOj*Y,*LD5K0@qBXr)OWq_mA!=5,TT#pRHM!If62%ugrWgB<
%/I1I\;o&"PEc)]OQk<mQ:lqYB`ss+\\*LlJr(o\)`K9T4-fY*?coC?H9/)^-:,6Z(!b'J!bp3]3EG&3sl5EQ6JCKbWr$GMV\rF:3
%'0\@E$L_Td[&+OFdBFj2@q;rj'dn2J3^3UV!tQ(L#B0ij4u++67^#Q64;$N7NapPI0=O$h8.MqR83T>3i!@rY_%VB:Jog.W6Z->h
%f&m`lb::5=8i*&K\:l5O;O#Y5eMi0W0i2PCg8]R:Sk"@i[WJ,-7g?-S@+\fEbo6p\9]<f)FTZlW4@Su#O)Ka1]?fj,;n3!0$".)i
%O\_I?&^[&KY2Ek'F]iYT;kh=:/oFm`P3<lDO>JrF?-FF17l"TiZr'"B$Se?"`IlT7=J"[0Ndi"\:WPa3W^_MC,dV-Xos1XHb$F[<
%`2$^uqsEG>]/MsA&(D[cr:hRCTNW5Rmb#bXYm]X#D^$6jjt>2mMNuUf`sFmUhb1FYqB_pM,TAal"N`Sg.7&P^E(A[b^V4gNhP)89
%\N_T98+-'Xb["^u"?Sls;>AJGj;P0'Gi;SZVqc6jAP[=?C^#&mLKa`/SS(*87bF226.GWs*k'oRpt'hu0DgYcd-qGi\K[On8MG)p
%\ptHBI1*ZK.\:P@S41&W`GQ(Gl0fsG5gr629#Dr@i:MF(@/.02]8?ejLkag'*2Xq`k4"V+q;WA4eY%i&ptth9&'6(jD!daX,K9&o
%!\=q,=kq6%9'A4MeJ'd:l(U:P6G<H?n/%4R!D:.`>ZEgCd5@##@\U5]5^\BhMLUEp91ZlR?3$f?@U>=#!lOugo-^>$NXW/=Um.NB
%8OO=9<mTZYrbC.Ld?%FD(fhfV9d/?V<*V:G8Uq`:Cmm)Hd9[q,)l8<1SD1mD'++'S1]j6)+&Er+T-l55kc?qqW""sq#=0u&E+'6&
%SUt5QotG5_l'gVhCp`'D'iHmp,X@?d-K8F<9;)HW<UMtTg(d7RXK-%i<e@nm(0:?1=GUIG[M,X/3#$3kA`O+5kFbmKUs4$3[SZFN
%f"EV';bn`+NFY8dq/!.Cmlu2KF+0(_s7GGiEl?jBkHmehJi*2<gr0>Bbl7ksY<%@4IG;ou8'd*Xp&AC%Jf?\+<UN7MJl+LnP6Bu"
%j>X<H03!ecZ`"(2W(KAp^X^-TlPP[#%a_3<(`l./)h1!?_YAgRNE_kh_Kdp2kOknrT`P<a[6,s=r2OmUFQeu5&L]68]`mVKY'AB6
%J?%TGSjtmb84[&*]s<HVf-VlH-ZYPUcc;/8_Z?K,Ss*7Q\ol?pd,MUb98gDZ!eY\W'T;`\0->`64;+faeSR"R*V%2`mREelW=:s?
%8#X'#TuZc+;!Y0Zh4?Cli$)KG9l7EA9)Kro#).71#C+Ak_]&o-c^BqHMBfNq)#OhoP<a,u)I)`(=ZLMi2#pK*aXSr1@>UF[2t.\s
%c#Lb5WPlF5(;7.OTHHmsm.k76)b=5;!mGYtOq-9Ld>[0\l"#ON=bBno!/_B^:c,E96f\A_FY>B,9LgUSfRAV[lS:gCj&7Z\<.[?\
%4cnY=CB:;O'-T'GAI\H*04&hqq8N-5p!nHBNfIm^KFXpS+`_ABjORO@LD2oO@;D]UD3](1Fkt6HXSWBl=am@-g>T/M\u6Y+b04X\
%K5AChm0<7c`"n1V]9-+;42PaFFV'90p!ocX'=`e.-Nr757nr,tU'n%*gKoP_Io0'PCCu8D*;+Uk],(QIT`bR=Sh<ZG<n0_dC3SWD
%NdTb.6o>7FAZC?,Sr>`jJV%tu:I4RXn/J`Ekc<1>f1sLg2)"I[)-8i(73X!pK)l_jU-qbq*WWj_&n1+#>$M5=4Zm[qo-t1$]bc2]
%9FlZ]b;i_C_bcpHp+6ppiOh>R5W5oGG0hi/&bm#cK6mnHTY>h3[aTS[EiGAJSh)<>A_"]I*4R!I&fpV%$&N9VL.A=kC:P0b1bjHV
%L26Gi@G2;C^`p(W"(=IW=G^utj35TeC^]bU9B`<k\j=1.B*(*1Ge3?>`b@7tG-Rg[`4B-OUkNn`j-#$%!cC!51a'0Z3B8)^JC'fH
%#&F,MXl9FpX&qi.NfhAFL3h+2Yp6oA,8h8;A;,`]/ccSd+CEVB^qu[X%U)4')&5`j(Z@5Q6Eghf$Vr,KSOorB&1'H#E!I[#c7<?S
%g9iAV/4&mV$T@[V=<p8qPPZ"Q&jH'kP(k_-oDum^"rJj*C.haBTsb@`R0q"O1c/gYSk6'HbLmR)1/2qATnU\/!K:2j21*SX2$9:G
%[T)L4C:.P#<5!kM^*%$dd'SGn`:a?7,/=QEKoO,PN@eU^0I>\W4`__u<e8(5)r:V0)D@HDF'T?o2h\7C6p>M:VtAUo;KOg`//oG6
%4l+g3=<2EP@-[;:5Fc,=Lr0A,G:E*<(=[+cC/L,B2)';$&l,Gu\:fe\Tp*hhZH.j1?\$UB#[k.Jj7XAsXAF"2!fZP4<mbKF^&:@\
%piG:'N&pR>hgG$N&+A]=O$A)BI/iF?IX_=j^V>3g-1m^A)i)hNTr']T+c25Ofch)G@i$`O&1)Zt>@5O_2S@Bu_gg(kVgfWbptL:6
%J,%jsDmZ54pB138J%YdSnNT7PIe3:'j0*t*mAJQ#4Pmc#s'E!Zr-nRmh7"IJ5CNP#naZ%rG9?f.Lj\8*r8orQqtGU9orn?"UCmQ'~>
%AI9_PrivateDataEnd
